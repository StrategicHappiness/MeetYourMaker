{
	"id": "ecb334b7f91a22f5dc03fc7e13e4990f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts@4.3.3/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts@4.3.3/token/ERC721/IERC721Receiver.sol\";\nimport \"@openzeppelin/contracts@4.3.3/token/ERC721/extensions/IERC721Metadata.sol\";\nimport \"@openzeppelin/contracts@4.3.3/token/ERC721/extensions/IERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts@4.3.3/utils/Address.sol\";\nimport \"@openzeppelin/contracts@4.3.3/utils/Context.sol\";\nimport \"@openzeppelin/contracts@4.3.3/utils/Strings.sol\";\nimport \"@openzeppelin/contracts@4.3.3/utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata and Enumerable extension. Built to optimize for lower gas during batch mints.\n *\n * Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..).\n *\n * Assumes the number of issuable tokens (collection size) is capped and fits in a uint128.\n *\n * Does not support burning tokens to address(0).\n */\ncontract ERC721A is\n  Context,\n  ERC165,\n  IERC721,\n  IERC721Metadata,\n  IERC721Enumerable\n{\n  using Address for address;\n  using Strings for uint256;\n\n  struct TokenOwnership {\n    address addr;\n    uint64 startTimestamp;\n  }\n\n  struct AddressData {\n    uint128 balance;\n    uint128 numberMinted;\n  }\n\n  uint256 private currentIndex = 0;\n\n  uint256 internal immutable collectionSize;\n  uint256 internal immutable maxBatchSize;\n\n  // Token name\n  string private _name;\n\n  // Token symbol\n  string private _symbol;\n\n  // Mapping from token ID to ownership details\n  // An empty struct value does not necessarily mean the token is unowned. See ownershipOf implementation for details.\n  mapping(uint256 => TokenOwnership) private _ownerships;\n\n  // Mapping owner address to address data\n  mapping(address => AddressData) private _addressData;\n\n  // Mapping from token ID to approved address\n  mapping(uint256 => address) private _tokenApprovals;\n\n  // Mapping from owner to operator approvals\n  mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n  /**\n   * @dev\n   * `maxBatchSize` refers to how much a minter can mint at a time.\n   * `collectionSize_` refers to how many tokens are in the collection.\n   */\n  constructor(\n    string memory name_,\n    string memory symbol_,\n    uint256 maxBatchSize_,\n    uint256 collectionSize_\n  ) {\n    require(\n      collectionSize_ > 0,\n      \"ERC721A: collection must have a nonzero supply\"\n    );\n    require(maxBatchSize_ > 0, \"ERC721A: max batch size must be nonzero\");\n    _name = name_;\n    _symbol = symbol_;\n    maxBatchSize = maxBatchSize_;\n    collectionSize = collectionSize_;\n  }\n\n  /**\n   * @dev See {IERC721Enumerable-totalSupply}.\n   */\n  function totalSupply() public view override returns (uint256) {\n    return currentIndex;\n  }\n\n  /**\n   * @dev See {IERC721Enumerable-tokenByIndex}.\n   */\n  function tokenByIndex(uint256 index) public view override returns (uint256) {\n    require(index < totalSupply(), \"ERC721A: global index out of bounds\");\n    return index;\n  }\n\n  /**\n   * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n   * This read function is O(collectionSize). If calling from a separate contract, be sure to test gas first.\n   * It may also degrade with extremely large collection sizes (e.g >> 10000), test for your use case.\n   */\n  function tokenOfOwnerByIndex(address owner, uint256 index)\n    public\n    view\n    override\n    returns (uint256)\n  {\n    require(index < balanceOf(owner), \"ERC721A: owner index out of bounds\");\n    uint256 numMintedSoFar = totalSupply();\n    uint256 tokenIdsIdx = 0;\n    address currOwnershipAddr = address(0);\n    for (uint256 i = 0; i < numMintedSoFar; i++) {\n      TokenOwnership memory ownership = _ownerships[i];\n      if (ownership.addr != address(0)) {\n        currOwnershipAddr = ownership.addr;\n      }\n      if (currOwnershipAddr == owner) {\n        if (tokenIdsIdx == index) {\n          return i;\n        }\n        tokenIdsIdx++;\n      }\n    }\n    revert(\"ERC721A: unable to get token of owner by index\");\n  }\n\n  /**\n   * @dev See {IERC165-supportsInterface}.\n   */\n  function supportsInterface(bytes4 interfaceId)\n    public\n    view\n    virtual\n    override(ERC165, IERC165)\n    returns (bool)\n  {\n    return\n      interfaceId == type(IERC721).interfaceId ||\n      interfaceId == type(IERC721Metadata).interfaceId ||\n      interfaceId == type(IERC721Enumerable).interfaceId ||\n      super.supportsInterface(interfaceId);\n  }\n\n  /**\n   * @dev See {IERC721-balanceOf}.\n   */\n  function balanceOf(address owner) public view override returns (uint256) {\n    require(owner != address(0), \"ERC721A: balance query for the zero address\");\n    return uint256(_addressData[owner].balance);\n  }\n\n  function _numberMinted(address owner) internal view returns (uint256) {\n    require(\n      owner != address(0),\n      \"ERC721A: number minted query for the zero address\"\n    );\n    return uint256(_addressData[owner].numberMinted);\n  }\n\n  function ownershipOf(uint256 tokenId)\n    internal\n    view\n    returns (TokenOwnership memory)\n  {\n    require(_exists(tokenId), \"ERC721A: owner query for nonexistent token\");\n\n    uint256 lowestTokenToCheck;\n    if (tokenId >= maxBatchSize) {\n      lowestTokenToCheck = tokenId - maxBatchSize + 1;\n    }\n\n    for (uint256 curr = tokenId; curr >= lowestTokenToCheck; curr--) {\n      TokenOwnership memory ownership = _ownerships[curr];\n      if (ownership.addr != address(0)) {\n        return ownership;\n      }\n    }\n\n    revert(\"ERC721A: unable to determine the owner of token\");\n  }\n\n  /**\n   * @dev See {IERC721-ownerOf}.\n   */\n  function ownerOf(uint256 tokenId) public view override returns (address) {\n    return ownershipOf(tokenId).addr;\n  }\n\n  /**\n   * @dev See {IERC721Metadata-name}.\n   */\n  function name() public view virtual override returns (string memory) {\n    return _name;\n  }\n\n  /**\n   * @dev See {IERC721Metadata-symbol}.\n   */\n  function symbol() public view virtual override returns (string memory) {\n    return _symbol;\n  }\n\n  /**\n   * @dev See {IERC721Metadata-tokenURI}.\n   */\n  function tokenURI(uint256 tokenId)\n    public\n    view\n    virtual\n    override\n    returns (string memory)\n  {\n    require(\n      _exists(tokenId),\n      \"ERC721Metadata: URI query for nonexistent token\"\n    );\n    \n    return _baseURI();\n  }\n\n  /**\n   * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n   * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n   * by default, can be overriden in child contracts.\n   */\n  function _baseURI() internal view virtual returns (string memory) {\n    return \"\";\n  }\n\n  /**\n   * @dev See {IERC721-approve}.\n   */\n  function approve(address to, uint256 tokenId) public override {\n    address owner = ERC721A.ownerOf(tokenId);\n    require(to != owner, \"ERC721A: approval to current owner\");\n\n    require(\n      _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n      \"ERC721A: approve caller is not owner nor approved for all\"\n    );\n\n    _approve(to, tokenId, owner);\n  }\n\n  /**\n   * @dev See {IERC721-getApproved}.\n   */\n  function getApproved(uint256 tokenId) public view override returns (address) {\n    require(_exists(tokenId), \"ERC721A: approved query for nonexistent token\");\n\n    return _tokenApprovals[tokenId];\n  }\n\n  /**\n   * @dev See {IERC721-setApprovalForAll}.\n   */\n  function setApprovalForAll(address operator, bool approved) public override {\n    require(operator != _msgSender(), \"ERC721A: approve to caller\");\n\n    _operatorApprovals[_msgSender()][operator] = approved;\n    emit ApprovalForAll(_msgSender(), operator, approved);\n  }\n\n  /**\n   * @dev See {IERC721-isApprovedForAll}.\n   */\n  function isApprovedForAll(address owner, address operator)\n    public\n    view\n    virtual\n    override\n    returns (bool)\n  {\n    return _operatorApprovals[owner][operator];\n  }\n\n  /**\n   * @dev See {IERC721-transferFrom}.\n   */\n  function transferFrom(\n    address from,\n    address to,\n    uint256 tokenId\n  ) public override {\n    _transfer(from, to, tokenId);\n  }\n\n  /**\n   * @dev See {IERC721-safeTransferFrom}.\n   */\n  function safeTransferFrom(\n    address from,\n    address to,\n    uint256 tokenId\n  ) public override {\n    safeTransferFrom(from, to, tokenId, \"\");\n  }\n\n  /**\n   * @dev See {IERC721-safeTransferFrom}.\n   */\n  function safeTransferFrom(\n    address from,\n    address to,\n    uint256 tokenId,\n    bytes memory _data\n  ) public override {\n    _transfer(from, to, tokenId);\n    require(\n      _checkOnERC721Received(from, to, tokenId, _data),\n      \"ERC721A: transfer to non ERC721Receiver implementer\"\n    );\n  }\n\n  /**\n   * @dev Returns whether `tokenId` exists.\n   *\n   * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n   *\n   * Tokens start existing when they are minted (`_mint`),\n   */\n  function _exists(uint256 tokenId) internal view returns (bool) {\n    return tokenId < currentIndex;\n  }\n\n  function _safeMint(address to, uint256 quantity) internal {\n    _safeMint(to, quantity, \"\");\n  }\n\n  /**\n   * @dev Mints `quantity` tokens and transfers them to `to`.\n   *\n   * Requirements:\n   *\n   * - there must be `quantity` tokens remaining unminted in the total collection.\n   * - `to` cannot be the zero address.\n   * - `quantity` cannot be larger than the max batch size.\n   *\n   * Emits a {Transfer} event.\n   */\n  function _safeMint(\n    address to,\n    uint256 quantity,\n    bytes memory _data\n  ) internal {\n    uint256 startTokenId = currentIndex;\n    require(to != address(0), \"ERC721A: mint to the zero address\");\n    // We know if the first token in the batch doesn't exist, the other ones don't as well, because of serial ordering.\n    require(!_exists(startTokenId), \"ERC721A: token already minted\");\n    require(quantity <= maxBatchSize, \"ERC721A: quantity to mint too high\");\n\n    _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n    AddressData memory addressData = _addressData[to];\n    _addressData[to] = AddressData(\n      addressData.balance + uint128(quantity),\n      addressData.numberMinted + uint128(quantity)\n    );\n    _ownerships[startTokenId] = TokenOwnership(to, uint64(block.timestamp));\n\n    uint256 updatedIndex = startTokenId;\n\n    for (uint256 i = 0; i < quantity; i++) {\n      emit Transfer(address(0), to, updatedIndex);\n      require(\n        _checkOnERC721Received(address(0), to, updatedIndex, _data),\n        \"ERC721A: transfer to non ERC721Receiver implementer\"\n      );\n      updatedIndex++;\n    }\n\n    currentIndex = updatedIndex;\n    _afterTokenTransfers(address(0), to, startTokenId, quantity);\n  }\n\n  /**\n   * @dev Transfers `tokenId` from `from` to `to`.\n   *\n   * Requirements:\n   *\n   * - `to` cannot be the zero address.\n   * - `tokenId` token must be owned by `from`.\n   *\n   * Emits a {Transfer} event.\n   */\n  function _transfer(\n    address from,\n    address to,\n    uint256 tokenId\n  ) private {\n    TokenOwnership memory prevOwnership = ownershipOf(tokenId);\n\n    bool isApprovedOrOwner = (_msgSender() == prevOwnership.addr ||\n      getApproved(tokenId) == _msgSender() ||\n      isApprovedForAll(prevOwnership.addr, _msgSender()));\n\n    require(\n      isApprovedOrOwner,\n      \"ERC721A: transfer caller is not owner nor approved\"\n    );\n\n    require(\n      prevOwnership.addr == from,\n      \"ERC721A: transfer from incorrect owner\"\n    );\n    require(to != address(0), \"ERC721A: transfer to the zero address\");\n\n    _beforeTokenTransfers(from, to, tokenId, 1);\n\n    // Clear approvals from the previous owner\n    _approve(address(0), tokenId, prevOwnership.addr);\n\n    _addressData[from].balance -= 1;\n    _addressData[to].balance += 1;\n    _ownerships[tokenId] = TokenOwnership(to, uint64(block.timestamp));\n\n    // If the ownership slot of tokenId+1 is not explicitly set, that means the transfer initiator owns it.\n    // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls.\n    uint256 nextTokenId = tokenId + 1;\n    if (_ownerships[nextTokenId].addr == address(0)) {\n      if (_exists(nextTokenId)) {\n        _ownerships[nextTokenId] = TokenOwnership(\n          prevOwnership.addr,\n          prevOwnership.startTimestamp\n        );\n      }\n    }\n\n    emit Transfer(from, to, tokenId);\n    _afterTokenTransfers(from, to, tokenId, 1);\n  }\n\n  /**\n   * @dev Approve `to` to operate on `tokenId`\n   *\n   * Emits a {Approval} event.\n   */\n  function _approve(\n    address to,\n    uint256 tokenId,\n    address owner\n  ) private {\n    _tokenApprovals[tokenId] = to;\n    emit Approval(owner, to, tokenId);\n  }\n\n  uint256 public nextOwnerToExplicitlySet = 0;\n\n  /**\n   * @dev Explicitly set `owners` to eliminate loops in future calls of ownerOf().\n   */\n  function _setOwnersExplicit(uint256 quantity) internal {\n    uint256 oldNextOwnerToSet = nextOwnerToExplicitlySet;\n    require(quantity > 0, \"quantity must be nonzero\");\n    uint256 endIndex = oldNextOwnerToSet + quantity - 1;\n    if (endIndex > collectionSize - 1) {\n      endIndex = collectionSize - 1;\n    }\n    // We know if the last one in the group exists, all in the group exist, due to serial ordering.\n    require(_exists(endIndex), \"not enough minted yet for this cleanup\");\n    for (uint256 i = oldNextOwnerToSet; i <= endIndex; i++) {\n      if (_ownerships[i].addr == address(0)) {\n        TokenOwnership memory ownership = ownershipOf(i);\n        _ownerships[i] = TokenOwnership(\n          ownership.addr,\n          ownership.startTimestamp\n        );\n      }\n    }\n    nextOwnerToExplicitlySet = endIndex + 1;\n  }\n\n  /**\n   * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n   * The call is not executed if the target address is not a contract.\n   *\n   * @param from address representing the previous owner of the given token ID\n   * @param to target address that will receive the tokens\n   * @param tokenId uint256 ID of the token to be transferred\n   * @param _data bytes optional data to send along with the call\n   * @return bool whether the call correctly returned the expected magic value\n   */\n  function _checkOnERC721Received(\n    address from,\n    address to,\n    uint256 tokenId,\n    bytes memory _data\n  ) private returns (bool) {\n    if (to.isContract()) {\n      try\n        IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data)\n      returns (bytes4 retval) {\n        return retval == IERC721Receiver(to).onERC721Received.selector;\n      } catch (bytes memory reason) {\n        if (reason.length == 0) {\n          revert(\"ERC721A: transfer to non ERC721Receiver implementer\");\n        } else {\n          assembly {\n            revert(add(32, reason), mload(reason))\n          }\n        }\n      }\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\n   *\n   * startTokenId - the first token id to be transferred\n   * quantity - the amount to be transferred\n   *\n   * Calling conditions:\n   *\n   * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n   * transferred to `to`.\n   * - When `from` is zero, `tokenId` will be minted for `to`.\n   */\n  function _beforeTokenTransfers(\n    address from,\n    address to,\n    uint256 startTokenId,\n    uint256 quantity\n  ) internal virtual {}\n\n  /**\n   * @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\n   * minting.\n   *\n   * startTokenId - the first token id to be transferred\n   * quantity - the amount to be transferred\n   *\n   * Calling conditions:\n   *\n   * - when `from` and `to` are both non-zero.\n   * - `from` and `to` are never both zero.\n   */\n  function _afterTokenTransfers(\n    address from,\n    address to,\n    uint256 startTokenId,\n    uint256 quantity\n  ) internal virtual {}\n}"
			},
			"@openzeppelin/contracts@4.3.3/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.3.3/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.3.3/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.3.3/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.3.3/token/ERC721/extensions/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts@4.3.3/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts@4.3.3/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts@4.3.3/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts@4.3.3/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@4.3.3/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.3.3/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.3.3/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e7820bcf567e6892d937c3cb10db263a4042e446799bca602535868d822384e\",\"dweb:/ipfs/QmPG2oeDjKncqsEeyYGjAN7CwAJmMgHterXGGnpzhha4z7\"]},\"@openzeppelin/contracts@4.3.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.3.3/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.3.3/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.3.3/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.3.3/token/ERC721/extensions/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.3.3/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.3.3/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e7820bcf567e6892d937c3cb10db263a4042e446799bca602535868d822384e\",\"dweb:/ipfs/QmPG2oeDjKncqsEeyYGjAN7CwAJmMgHterXGGnpzhha4z7\"]},\"@openzeppelin/contracts@4.3.3/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xa69205e5009601cf13be78b1e2f500e1e3b1d8012f22d966e63975273f602038\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d919a0061e43f9878f6171b7f853cb92093805cd1160858c1884195a639b40a0\",\"dweb:/ipfs/QmRZsS3EYuLp75nBym1QQ4y6aQXGew75wSbv1uwqkvouUK\"]},\"@openzeppelin/contracts@4.3.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.3.3/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.3.3/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.3.3/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e7820bcf567e6892d937c3cb10db263a4042e446799bca602535868d822384e\",\"dweb:/ipfs/QmPG2oeDjKncqsEeyYGjAN7CwAJmMgHterXGGnpzhha4z7\"]},\"@openzeppelin/contracts@4.3.3/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xd32fb7f530a914b1083d10a6bed3a586f2451952fec04fe542bcc670a82f7ba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af63ab940a34687c45f0ad84960b048fc5f49330c92ccb422db7822a444733b9\",\"dweb:/ipfs/QmUShaQEu8HS1GjDnsMJQ8jkZEBrecn6NuDZ3pfjY1gVck\"]},\"@openzeppelin/contracts@4.3.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.3.3/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.3.3/utils/Address.sol\":126:7855  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.3.3/utils/Address.sol\":126:7855  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201e776c179e2f344b592fea3db335ee7359e2084c0c32cc22ccba297bd73d105e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e776c179e2f344b592fea3db335ee7359e2084c0c32cc22ccba297bd73d105e64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E PUSH24 0x6C179E2F344B592FEA3DB335EE7359E2084C0C32CC22CCBA 0x29 PUSH28 0xD73D105E64736F6C6343000807003300000000000000000000000000 ",
							"sourceMap": "126:7729:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e776c179e2f344b592fea3db335ee7359e2084c0c32cc22ccba297bd73d105e64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E PUSH24 0x6C179E2F344B592FEA3DB335EE7359E2084C0C32CC22CCBA 0x29 PUSH28 0xD73D105E64736F6C6343000807003300000000000000000000000000 ",
							"sourceMap": "126:7729:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201e776c179e2f344b592fea3db335ee7359e2084c0c32cc22ccba297bd73d105e64736f6c63430008070033",
									".code": [
										{
											"begin": 126,
											"end": 7855,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 126,
											"end": 7855,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 126,
											"end": 7855,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 126,
											"end": 7855,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 7855,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 7855,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 126,
											"end": 7855,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 7855,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 126,
											"end": 7855,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.3.3/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.3.3/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.3.3/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.3.3/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.3.3/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.3.3/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.3.3/utils/Strings.sol\":93:1978  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.3.3/utils/Strings.sol\":93:1978  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205cc98597ffd974a9162888afba7c33ae12a144fdb1697e458dcab930ae8b523664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205cc98597ffd974a9162888afba7c33ae12a144fdb1697e458dcab930ae8b523664736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0xC9 DUP6 SWAP8 SELFDESTRUCT 0xD9 PUSH21 0xA9162888AFBA7C33AE12A144FDB1697E458DCAB930 0xAE DUP12 MSTORE CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "93:1885:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205cc98597ffd974a9162888afba7c33ae12a144fdb1697e458dcab930ae8b523664736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0xC9 DUP6 SWAP8 SELFDESTRUCT 0xD9 PUSH21 0xA9162888AFBA7C33AE12A144FDB1697E458DCAB930 0xAE DUP12 MSTORE CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "93:1885:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205cc98597ffd974a9162888afba7c33ae12a144fdb1697e458dcab930ae8b523664736f6c63430008070033",
									".code": [
										{
											"begin": 93,
											"end": 1978,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.3.3/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.3.3/utils/Strings.sol\":{\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d636ba90bbbeed04a1ea7fe9ec2466757e30fd38ba2ca173636dbf69a518735e\",\"dweb:/ipfs/QmQwCB2BHnEuYR22PYt9HkpbgeFDhq4rHmaYqAZbX3WRC7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.3.3/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.3.3/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.3.3/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts@4.3.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.3.3/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.3.3/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.3.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "maxBatchSize_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "collectionSize_",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextOwnerToExplicitlySet",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata and Enumerable extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..). Assumes the number of issuable tokens (collection size) is capped and fits in a uint128. Does not support burning tokens to address(0).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "`maxBatchSize` refers to how much a minter can mint at a time. `collectionSize_` refers to how many tokens are in the collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}. This read function is O(collectionSize). If calling from a separate contract, be sure to test gas first. It may also degrade with extremely large collection sizes (e.g >> 10000), test for your use case."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC721A.sol\":1055:15909  contract ERC721A is... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/ERC721A.sol\":1391:1392  0 */\n  0x00\n    /* \"contracts/ERC721A.sol\":1360:1392  uint256 private currentIndex = 0 */\n  dup1\n  sstore\n    /* \"contracts/ERC721A.sol\":12690:12691  0 */\n  0x00\n    /* \"contracts/ERC721A.sol\":12648:12691  uint256 public nextOwnerToExplicitlySet = 0 */\n  0x07\n  sstore\n    /* \"contracts/ERC721A.sol\":2285:2705  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ERC721A.sol\":2448:2449  0 */\n  0x00\n    /* \"contracts/ERC721A.sol\":2430:2445  collectionSize_ */\n  dup2\n    /* \"contracts/ERC721A.sol\":2430:2449  collectionSize_ > 0 */\n  gt\n    /* \"contracts/ERC721A.sol\":2415:2511  require(... */\n  tag_6\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"contracts/ERC721A.sol\":2541:2542  0 */\n  0x00\n    /* \"contracts/ERC721A.sol\":2525:2538  maxBatchSize_ */\n  dup3\n    /* \"contracts/ERC721A.sol\":2525:2542  maxBatchSize_ > 0 */\n  gt\n    /* \"contracts/ERC721A.sol\":2517:2586  require(maxBatchSize_ > 0, \"ERC721A: max batch size must be nonzero\") */\n  tag_9\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_9:\n    /* \"contracts/ERC721A.sol\":2600:2605  name_ */\n  dup4\n    /* \"contracts/ERC721A.sol\":2592:2597  _name */\n  0x01\n    /* \"contracts/ERC721A.sol\":2592:2605  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_12\n  swap3\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/ERC721A.sol\":2621:2628  symbol_ */\n  dup3\n    /* \"contracts/ERC721A.sol\":2611:2618  _symbol */\n  0x02\n    /* \"contracts/ERC721A.sol\":2611:2628  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_14\n  swap3\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_14:\n  pop\n    /* \"contracts/ERC721A.sol\":2649:2662  maxBatchSize_ */\n  dup2\n    /* \"contracts/ERC721A.sol\":2634:2662  maxBatchSize = maxBatchSize_ */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ERC721A.sol\":2685:2700  collectionSize_ */\n  dup1\n    /* \"contracts/ERC721A.sol\":2668:2700  collectionSize = collectionSize_ */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ERC721A.sol\":2285:2705  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/ERC721A.sol\":1055:15909  contract ERC721A is... */\n  jump(tag_15)\ntag_13:\n  dup3\n  dup1\n  sload\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_19\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_18)\ntag_19:\n  dup3\n  0x1f\n  lt\n  tag_20\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_18)\ntag_20:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  dup3\n  add\ntag_21:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_22\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_21)\ntag_22:\ntag_18:\n  pop\n  swap1\n  pop\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n  pop\n  swap1\n  jump\t// out\ntag_24:\ntag_25:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_26\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_25)\ntag_26:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:428   */\ntag_28:\n    /* \"#utility.yul\":96:101   */\n  0x00\n    /* \"#utility.yul\":121:187   */\n  tag_30\n    /* \"#utility.yul\":137:186   */\n  tag_31\n    /* \"#utility.yul\":179:185   */\n  dup5\n    /* \"#utility.yul\":137:186   */\n  tag_32\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":121:187   */\n  tag_33\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":112:187   */\n  swap1\n  pop\n    /* \"#utility.yul\":210:216   */\n  dup3\n    /* \"#utility.yul\":203:208   */\n  dup2\n    /* \"#utility.yul\":196:217   */\n  mstore\n    /* \"#utility.yul\":248:252   */\n  0x20\n    /* \"#utility.yul\":241:246   */\n  dup2\n    /* \"#utility.yul\":237:253   */\n  add\n    /* \"#utility.yul\":286:289   */\n  dup5\n    /* \"#utility.yul\":277:283   */\n  dup5\n    /* \"#utility.yul\":272:275   */\n  dup5\n    /* \"#utility.yul\":268:284   */\n  add\n    /* \"#utility.yul\":265:290   */\n  gt\n    /* \"#utility.yul\":262:374   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":293:372   */\n  tag_35\n  tag_36\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":262:374   */\ntag_34:\n    /* \"#utility.yul\":383:422   */\n  tag_37\n    /* \"#utility.yul\":415:421   */\n  dup5\n    /* \"#utility.yul\":410:413   */\n  dup3\n    /* \"#utility.yul\":405:408   */\n  dup6\n    /* \"#utility.yul\":383:422   */\n  tag_38\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":102:428   */\n  pop\n    /* \"#utility.yul\":7:428   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":448:803   */\ntag_39:\n    /* \"#utility.yul\":515:520   */\n  0x00\n    /* \"#utility.yul\":564:567   */\n  dup3\n    /* \"#utility.yul\":557:561   */\n  0x1f\n    /* \"#utility.yul\":549:555   */\n  dup4\n    /* \"#utility.yul\":545:562   */\n  add\n    /* \"#utility.yul\":541:568   */\n  slt\n    /* \"#utility.yul\":531:653   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":572:651   */\n  tag_42\n  tag_43\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":531:653   */\ntag_41:\n    /* \"#utility.yul\":682:688   */\n  dup2\n    /* \"#utility.yul\":676:689   */\n  mload\n    /* \"#utility.yul\":707:797   */\n  tag_44\n    /* \"#utility.yul\":793:796   */\n  dup5\n    /* \"#utility.yul\":785:791   */\n  dup3\n    /* \"#utility.yul\":778:782   */\n  0x20\n    /* \"#utility.yul\":770:776   */\n  dup7\n    /* \"#utility.yul\":766:783   */\n  add\n    /* \"#utility.yul\":707:797   */\n  tag_28\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":698:797   */\n  swap2\n  pop\n    /* \"#utility.yul\":521:803   */\n  pop\n    /* \"#utility.yul\":448:803   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":809:952   */\ntag_45:\n    /* \"#utility.yul\":866:871   */\n  0x00\n    /* \"#utility.yul\":897:903   */\n  dup2\n    /* \"#utility.yul\":891:904   */\n  mload\n    /* \"#utility.yul\":882:904   */\n  swap1\n  pop\n    /* \"#utility.yul\":913:946   */\n  tag_47\n    /* \"#utility.yul\":940:945   */\n  dup2\n    /* \"#utility.yul\":913:946   */\n  tag_48\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":809:952   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":958:2124   */\ntag_3:\n    /* \"#utility.yul\":1075:1081   */\n  0x00\n    /* \"#utility.yul\":1083:1089   */\n  dup1\n    /* \"#utility.yul\":1091:1097   */\n  0x00\n    /* \"#utility.yul\":1099:1105   */\n  dup1\n    /* \"#utility.yul\":1148:1151   */\n  0x80\n    /* \"#utility.yul\":1136:1145   */\n  dup6\n    /* \"#utility.yul\":1127:1134   */\n  dup8\n    /* \"#utility.yul\":1123:1146   */\n  sub\n    /* \"#utility.yul\":1119:1152   */\n  slt\n    /* \"#utility.yul\":1116:1236   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":1155:1234   */\n  tag_51\n  tag_52\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1116:1236   */\ntag_50:\n    /* \"#utility.yul\":1296:1297   */\n  0x00\n    /* \"#utility.yul\":1285:1294   */\n  dup6\n    /* \"#utility.yul\":1281:1298   */\n  add\n    /* \"#utility.yul\":1275:1299   */\n  mload\n    /* \"#utility.yul\":1326:1344   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1318:1324   */\n  dup2\n    /* \"#utility.yul\":1315:1345   */\n  gt\n    /* \"#utility.yul\":1312:1429   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":1348:1427   */\n  tag_54\n  tag_55\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1312:1429   */\ntag_53:\n    /* \"#utility.yul\":1453:1527   */\n  tag_56\n    /* \"#utility.yul\":1519:1526   */\n  dup8\n    /* \"#utility.yul\":1510:1516   */\n  dup3\n    /* \"#utility.yul\":1499:1508   */\n  dup9\n    /* \"#utility.yul\":1495:1517   */\n  add\n    /* \"#utility.yul\":1453:1527   */\n  tag_39\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1443:1527   */\n  swap5\n  pop\n    /* \"#utility.yul\":1246:1537   */\n  pop\n    /* \"#utility.yul\":1597:1599   */\n  0x20\n    /* \"#utility.yul\":1586:1595   */\n  dup6\n    /* \"#utility.yul\":1582:1600   */\n  add\n    /* \"#utility.yul\":1576:1601   */\n  mload\n    /* \"#utility.yul\":1628:1646   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1620:1626   */\n  dup2\n    /* \"#utility.yul\":1617:1647   */\n  gt\n    /* \"#utility.yul\":1614:1731   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":1650:1729   */\n  tag_58\n  tag_55\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1614:1731   */\ntag_57:\n    /* \"#utility.yul\":1755:1829   */\n  tag_59\n    /* \"#utility.yul\":1821:1828   */\n  dup8\n    /* \"#utility.yul\":1812:1818   */\n  dup3\n    /* \"#utility.yul\":1801:1810   */\n  dup9\n    /* \"#utility.yul\":1797:1819   */\n  add\n    /* \"#utility.yul\":1755:1829   */\n  tag_39\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1745:1829   */\n  swap4\n  pop\n    /* \"#utility.yul\":1547:1839   */\n  pop\n    /* \"#utility.yul\":1878:1880   */\n  0x40\n    /* \"#utility.yul\":1904:1968   */\n  tag_60\n    /* \"#utility.yul\":1960:1967   */\n  dup8\n    /* \"#utility.yul\":1951:1957   */\n  dup3\n    /* \"#utility.yul\":1940:1949   */\n  dup9\n    /* \"#utility.yul\":1936:1958   */\n  add\n    /* \"#utility.yul\":1904:1968   */\n  tag_45\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1894:1968   */\n  swap3\n  pop\n    /* \"#utility.yul\":1849:1978   */\n  pop\n    /* \"#utility.yul\":2017:2019   */\n  0x60\n    /* \"#utility.yul\":2043:2107   */\n  tag_61\n    /* \"#utility.yul\":2099:2106   */\n  dup8\n    /* \"#utility.yul\":2090:2096   */\n  dup3\n    /* \"#utility.yul\":2079:2088   */\n  dup9\n    /* \"#utility.yul\":2075:2097   */\n  add\n    /* \"#utility.yul\":2043:2107   */\n  tag_45\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2033:2107   */\n  swap2\n  pop\n    /* \"#utility.yul\":1988:2117   */\n  pop\n    /* \"#utility.yul\":958:2124   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2130:2496   */\ntag_62:\n    /* \"#utility.yul\":2272:2275   */\n  0x00\n    /* \"#utility.yul\":2293:2360   */\n  tag_64\n    /* \"#utility.yul\":2357:2359   */\n  0x27\n    /* \"#utility.yul\":2352:2355   */\n  dup4\n    /* \"#utility.yul\":2293:2360   */\n  tag_65\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2286:2360   */\n  swap2\n  pop\n    /* \"#utility.yul\":2369:2462   */\n  tag_66\n    /* \"#utility.yul\":2458:2461   */\n  dup3\n    /* \"#utility.yul\":2369:2462   */\n  tag_67\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2487:2489   */\n  0x40\n    /* \"#utility.yul\":2482:2485   */\n  dup3\n    /* \"#utility.yul\":2478:2490   */\n  add\n    /* \"#utility.yul\":2471:2490   */\n  swap1\n  pop\n    /* \"#utility.yul\":2130:2496   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2502:2868   */\ntag_68:\n    /* \"#utility.yul\":2644:2647   */\n  0x00\n    /* \"#utility.yul\":2665:2732   */\n  tag_70\n    /* \"#utility.yul\":2729:2731   */\n  0x2e\n    /* \"#utility.yul\":2724:2727   */\n  dup4\n    /* \"#utility.yul\":2665:2732   */\n  tag_65\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2658:2732   */\n  swap2\n  pop\n    /* \"#utility.yul\":2741:2834   */\n  tag_71\n    /* \"#utility.yul\":2830:2833   */\n  dup3\n    /* \"#utility.yul\":2741:2834   */\n  tag_72\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2859:2861   */\n  0x40\n    /* \"#utility.yul\":2854:2857   */\n  dup3\n    /* \"#utility.yul\":2850:2862   */\n  add\n    /* \"#utility.yul\":2843:2862   */\n  swap1\n  pop\n    /* \"#utility.yul\":2502:2868   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2874:3293   */\ntag_11:\n    /* \"#utility.yul\":3040:3044   */\n  0x00\n    /* \"#utility.yul\":3078:3080   */\n  0x20\n    /* \"#utility.yul\":3067:3076   */\n  dup3\n    /* \"#utility.yul\":3063:3081   */\n  add\n    /* \"#utility.yul\":3055:3081   */\n  swap1\n  pop\n    /* \"#utility.yul\":3127:3136   */\n  dup2\n    /* \"#utility.yul\":3121:3125   */\n  dup2\n    /* \"#utility.yul\":3117:3137   */\n  sub\n    /* \"#utility.yul\":3113:3114   */\n  0x00\n    /* \"#utility.yul\":3102:3111   */\n  dup4\n    /* \"#utility.yul\":3098:3115   */\n  add\n    /* \"#utility.yul\":3091:3138   */\n  mstore\n    /* \"#utility.yul\":3155:3286   */\n  tag_74\n    /* \"#utility.yul\":3281:3285   */\n  dup2\n    /* \"#utility.yul\":3155:3286   */\n  tag_62\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":3147:3286   */\n  swap1\n  pop\n    /* \"#utility.yul\":2874:3293   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3299:3718   */\ntag_8:\n    /* \"#utility.yul\":3465:3469   */\n  0x00\n    /* \"#utility.yul\":3503:3505   */\n  0x20\n    /* \"#utility.yul\":3492:3501   */\n  dup3\n    /* \"#utility.yul\":3488:3506   */\n  add\n    /* \"#utility.yul\":3480:3506   */\n  swap1\n  pop\n    /* \"#utility.yul\":3552:3561   */\n  dup2\n    /* \"#utility.yul\":3546:3550   */\n  dup2\n    /* \"#utility.yul\":3542:3562   */\n  sub\n    /* \"#utility.yul\":3538:3539   */\n  0x00\n    /* \"#utility.yul\":3527:3536   */\n  dup4\n    /* \"#utility.yul\":3523:3540   */\n  add\n    /* \"#utility.yul\":3516:3563   */\n  mstore\n    /* \"#utility.yul\":3580:3711   */\n  tag_76\n    /* \"#utility.yul\":3706:3710   */\n  dup2\n    /* \"#utility.yul\":3580:3711   */\n  tag_68\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3572:3711   */\n  swap1\n  pop\n    /* \"#utility.yul\":3299:3718   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3724:3853   */\ntag_33:\n    /* \"#utility.yul\":3758:3764   */\n  0x00\n    /* \"#utility.yul\":3785:3805   */\n  tag_78\n  tag_79\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3775:3805   */\n  swap1\n  pop\n    /* \"#utility.yul\":3814:3847   */\n  tag_80\n    /* \"#utility.yul\":3842:3846   */\n  dup3\n    /* \"#utility.yul\":3834:3840   */\n  dup3\n    /* \"#utility.yul\":3814:3847   */\n  tag_81\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3724:3853   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3859:3934   */\ntag_79:\n    /* \"#utility.yul\":3892:3898   */\n  0x00\n    /* \"#utility.yul\":3925:3927   */\n  0x40\n    /* \"#utility.yul\":3919:3928   */\n  mload\n    /* \"#utility.yul\":3909:3928   */\n  swap1\n  pop\n    /* \"#utility.yul\":3859:3934   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3940:4248   */\ntag_32:\n    /* \"#utility.yul\":4002:4006   */\n  0x00\n    /* \"#utility.yul\":4092:4110   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4084:4090   */\n  dup3\n    /* \"#utility.yul\":4081:4111   */\n  gt\n    /* \"#utility.yul\":4078:4134   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":4114:4132   */\n  tag_85\n  tag_86\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":4078:4134   */\ntag_84:\n    /* \"#utility.yul\":4152:4181   */\n  tag_87\n    /* \"#utility.yul\":4174:4180   */\n  dup3\n    /* \"#utility.yul\":4152:4181   */\n  tag_88\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":4144:4181   */\n  swap1\n  pop\n    /* \"#utility.yul\":4236:4240   */\n  0x20\n    /* \"#utility.yul\":4230:4234   */\n  dup2\n    /* \"#utility.yul\":4226:4241   */\n  add\n    /* \"#utility.yul\":4218:4241   */\n  swap1\n  pop\n    /* \"#utility.yul\":3940:4248   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4254:4423   */\ntag_65:\n    /* \"#utility.yul\":4338:4349   */\n  0x00\n    /* \"#utility.yul\":4372:4378   */\n  dup3\n    /* \"#utility.yul\":4367:4370   */\n  dup3\n    /* \"#utility.yul\":4360:4379   */\n  mstore\n    /* \"#utility.yul\":4412:4416   */\n  0x20\n    /* \"#utility.yul\":4407:4410   */\n  dup3\n    /* \"#utility.yul\":4403:4417   */\n  add\n    /* \"#utility.yul\":4388:4417   */\n  swap1\n  pop\n    /* \"#utility.yul\":4254:4423   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4429:4506   */\ntag_90:\n    /* \"#utility.yul\":4466:4473   */\n  0x00\n    /* \"#utility.yul\":4495:4500   */\n  dup2\n    /* \"#utility.yul\":4484:4500   */\n  swap1\n  pop\n    /* \"#utility.yul\":4429:4506   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4819   */\ntag_38:\n    /* \"#utility.yul\":4580:4581   */\n  0x00\n    /* \"#utility.yul\":4590:4703   */\ntag_93:\n    /* \"#utility.yul\":4604:4610   */\n  dup4\n    /* \"#utility.yul\":4601:4602   */\n  dup2\n    /* \"#utility.yul\":4598:4611   */\n  lt\n    /* \"#utility.yul\":4590:4703   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":4689:4690   */\n  dup1\n    /* \"#utility.yul\":4684:4687   */\n  dup3\n    /* \"#utility.yul\":4680:4691   */\n  add\n    /* \"#utility.yul\":4674:4692   */\n  mload\n    /* \"#utility.yul\":4670:4671   */\n  dup2\n    /* \"#utility.yul\":4665:4668   */\n  dup5\n    /* \"#utility.yul\":4661:4672   */\n  add\n    /* \"#utility.yul\":4654:4693   */\n  mstore\n    /* \"#utility.yul\":4626:4628   */\n  0x20\n    /* \"#utility.yul\":4623:4624   */\n  dup2\n    /* \"#utility.yul\":4619:4629   */\n  add\n    /* \"#utility.yul\":4614:4629   */\n  swap1\n  pop\n    /* \"#utility.yul\":4590:4703   */\n  jump(tag_93)\ntag_95:\n    /* \"#utility.yul\":4721:4727   */\n  dup4\n    /* \"#utility.yul\":4718:4719   */\n  dup2\n    /* \"#utility.yul\":4715:4728   */\n  gt\n    /* \"#utility.yul\":4712:4813   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":4801:4802   */\n  0x00\n    /* \"#utility.yul\":4792:4798   */\n  dup5\n    /* \"#utility.yul\":4787:4790   */\n  dup5\n    /* \"#utility.yul\":4783:4799   */\n  add\n    /* \"#utility.yul\":4776:4803   */\n  mstore\n    /* \"#utility.yul\":4712:4813   */\ntag_96:\n    /* \"#utility.yul\":4561:4819   */\n  pop\n    /* \"#utility.yul\":4512:4819   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4825:5145   */\ntag_17:\n    /* \"#utility.yul\":4869:4875   */\n  0x00\n    /* \"#utility.yul\":4906:4907   */\n  0x02\n    /* \"#utility.yul\":4900:4904   */\n  dup3\n    /* \"#utility.yul\":4896:4908   */\n  div\n    /* \"#utility.yul\":4886:4908   */\n  swap1\n  pop\n    /* \"#utility.yul\":4953:4954   */\n  0x01\n    /* \"#utility.yul\":4947:4951   */\n  dup3\n    /* \"#utility.yul\":4943:4955   */\n  and\n    /* \"#utility.yul\":4974:4992   */\n  dup1\n    /* \"#utility.yul\":4964:5045   */\n  tag_98\n  jumpi\n    /* \"#utility.yul\":5030:5034   */\n  0x7f\n    /* \"#utility.yul\":5022:5028   */\n  dup3\n    /* \"#utility.yul\":5018:5035   */\n  and\n    /* \"#utility.yul\":5008:5035   */\n  swap2\n  pop\n    /* \"#utility.yul\":4964:5045   */\ntag_98:\n    /* \"#utility.yul\":5092:5094   */\n  0x20\n    /* \"#utility.yul\":5084:5090   */\n  dup3\n    /* \"#utility.yul\":5081:5095   */\n  lt\n    /* \"#utility.yul\":5061:5079   */\n  dup2\n    /* \"#utility.yul\":5058:5096   */\n  eq\n    /* \"#utility.yul\":5055:5139   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":5111:5129   */\n  tag_100\n  tag_101\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5055:5139   */\ntag_99:\n    /* \"#utility.yul\":4876:5145   */\n  pop\n    /* \"#utility.yul\":4825:5145   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5151:5432   */\ntag_81:\n    /* \"#utility.yul\":5234:5261   */\n  tag_103\n    /* \"#utility.yul\":5256:5260   */\n  dup3\n    /* \"#utility.yul\":5234:5261   */\n  tag_88\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5226:5232   */\n  dup2\n    /* \"#utility.yul\":5222:5262   */\n  add\n    /* \"#utility.yul\":5364:5370   */\n  dup2\n    /* \"#utility.yul\":5352:5362   */\n  dup2\n    /* \"#utility.yul\":5349:5371   */\n  lt\n    /* \"#utility.yul\":5328:5346   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5316:5326   */\n  dup3\n    /* \"#utility.yul\":5313:5347   */\n  gt\n    /* \"#utility.yul\":5310:5372   */\n  or\n    /* \"#utility.yul\":5307:5395   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":5375:5393   */\n  tag_105\n  tag_86\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5307:5395   */\ntag_104:\n    /* \"#utility.yul\":5415:5425   */\n  dup1\n    /* \"#utility.yul\":5411:5413   */\n  0x40\n    /* \"#utility.yul\":5404:5426   */\n  mstore\n    /* \"#utility.yul\":5194:5432   */\n  pop\n    /* \"#utility.yul\":5151:5432   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5438:5618   */\ntag_101:\n    /* \"#utility.yul\":5486:5563   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5483:5484   */\n  0x00\n    /* \"#utility.yul\":5476:5564   */\n  mstore\n    /* \"#utility.yul\":5583:5587   */\n  0x22\n    /* \"#utility.yul\":5580:5581   */\n  0x04\n    /* \"#utility.yul\":5573:5588   */\n  mstore\n    /* \"#utility.yul\":5607:5611   */\n  0x24\n    /* \"#utility.yul\":5604:5605   */\n  0x00\n    /* \"#utility.yul\":5597:5612   */\n  revert\n    /* \"#utility.yul\":5624:5804   */\ntag_86:\n    /* \"#utility.yul\":5672:5749   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5669:5670   */\n  0x00\n    /* \"#utility.yul\":5662:5750   */\n  mstore\n    /* \"#utility.yul\":5769:5773   */\n  0x41\n    /* \"#utility.yul\":5766:5767   */\n  0x04\n    /* \"#utility.yul\":5759:5774   */\n  mstore\n    /* \"#utility.yul\":5793:5797   */\n  0x24\n    /* \"#utility.yul\":5790:5791   */\n  0x00\n    /* \"#utility.yul\":5783:5798   */\n  revert\n    /* \"#utility.yul\":5810:5927   */\ntag_43:\n    /* \"#utility.yul\":5919:5920   */\n  0x00\n    /* \"#utility.yul\":5916:5917   */\n  dup1\n    /* \"#utility.yul\":5909:5921   */\n  revert\n    /* \"#utility.yul\":5933:6050   */\ntag_36:\n    /* \"#utility.yul\":6042:6043   */\n  0x00\n    /* \"#utility.yul\":6039:6040   */\n  dup1\n    /* \"#utility.yul\":6032:6044   */\n  revert\n    /* \"#utility.yul\":6056:6173   */\ntag_55:\n    /* \"#utility.yul\":6165:6166   */\n  0x00\n    /* \"#utility.yul\":6162:6163   */\n  dup1\n    /* \"#utility.yul\":6155:6167   */\n  revert\n    /* \"#utility.yul\":6179:6296   */\ntag_52:\n    /* \"#utility.yul\":6288:6289   */\n  0x00\n    /* \"#utility.yul\":6285:6286   */\n  dup1\n    /* \"#utility.yul\":6278:6290   */\n  revert\n    /* \"#utility.yul\":6302:6404   */\ntag_88:\n    /* \"#utility.yul\":6343:6349   */\n  0x00\n    /* \"#utility.yul\":6394:6396   */\n  0x1f\n    /* \"#utility.yul\":6390:6397   */\n  not\n    /* \"#utility.yul\":6385:6387   */\n  0x1f\n    /* \"#utility.yul\":6378:6383   */\n  dup4\n    /* \"#utility.yul\":6374:6388   */\n  add\n    /* \"#utility.yul\":6370:6398   */\n  and\n    /* \"#utility.yul\":6360:6398   */\n  swap1\n  pop\n    /* \"#utility.yul\":6302:6404   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6410:6636   */\ntag_67:\n    /* \"#utility.yul\":6550:6584   */\n  0x455243373231413a206d61782062617463682073697a65206d75737420626520\n    /* \"#utility.yul\":6546:6547   */\n  0x00\n    /* \"#utility.yul\":6538:6544   */\n  dup3\n    /* \"#utility.yul\":6534:6548   */\n  add\n    /* \"#utility.yul\":6527:6585   */\n  mstore\n    /* \"#utility.yul\":6619:6628   */\n  0x6e6f6e7a65726f00000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6614:6616   */\n  0x20\n    /* \"#utility.yul\":6606:6612   */\n  dup3\n    /* \"#utility.yul\":6602:6617   */\n  add\n    /* \"#utility.yul\":6595:6629   */\n  mstore\n    /* \"#utility.yul\":6410:6636   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6642:6875   */\ntag_72:\n    /* \"#utility.yul\":6782:6816   */\n  0x455243373231413a20636f6c6c656374696f6e206d7573742068617665206120\n    /* \"#utility.yul\":6778:6779   */\n  0x00\n    /* \"#utility.yul\":6770:6776   */\n  dup3\n    /* \"#utility.yul\":6766:6780   */\n  add\n    /* \"#utility.yul\":6759:6817   */\n  mstore\n    /* \"#utility.yul\":6851:6867   */\n  0x6e6f6e7a65726f20737570706c79000000000000000000000000000000000000\n    /* \"#utility.yul\":6846:6848   */\n  0x20\n    /* \"#utility.yul\":6838:6844   */\n  dup3\n    /* \"#utility.yul\":6834:6849   */\n  add\n    /* \"#utility.yul\":6827:6868   */\n  mstore\n    /* \"#utility.yul\":6642:6875   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6881:7003   */\ntag_48:\n    /* \"#utility.yul\":6954:6978   */\n  tag_116\n    /* \"#utility.yul\":6972:6977   */\n  dup2\n    /* \"#utility.yul\":6954:6978   */\n  tag_90\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":6947:6952   */\n  dup2\n    /* \"#utility.yul\":6944:6979   */\n  eq\n    /* \"#utility.yul\":6934:6997   */\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6993:6994   */\n  0x00\n    /* \"#utility.yul\":6990:6991   */\n  dup1\n    /* \"#utility.yul\":6983:6995   */\n  revert\n    /* \"#utility.yul\":6934:6997   */\ntag_117:\n    /* \"#utility.yul\":6881:7003   */\n  pop\n  jump\t// out\n    /* \"contracts/ERC721A.sol\":1055:15909  contract ERC721A is... */\ntag_15:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xe216240695da412145d9df04d3b0c5fca4d43b99b7d0d5386b61bbf0097f7efd\")\n  0x00\n  assignImmutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC721A.sol\":1055:15909  contract ERC721A is... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4f6ccce7\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd7224ba0\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x4f6ccce7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x18160ddd\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f745c59\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC721A.sol\":4162:4520  function supportsInterface(bytes4 interfaceId)... */\n    tag_3:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721A.sol\":5826:5918  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721A.sol\":7157:7357  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_5:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721A.sol\":6735:7104  function approve(address to, uint256 tokenId) public override {... */\n    tag_6:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/ERC721A.sol\":2768:2860  function totalSupply() public view override returns (uint256) {... */\n    tag_7:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721A.sol\":7975:8111  function transferFrom(... */\n    tag_8:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/ERC721A.sol\":3382:4103  function tokenOfOwnerByIndex(address owner, uint256 index)... */\n    tag_9:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721A.sol\":8169:8320  function safeTransferFrom(... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"contracts/ERC721A.sol\":2924:3098  function tokenByIndex(uint256 index) public view override returns (uint256) {... */\n    tag_11:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721A.sol\":5656:5772  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_12:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721A.sol\":4571:4779  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_13:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721A.sol\":5974:6070  function symbol() public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721A.sol\":7416:7685  function setApprovalForAll(address operator, bool approved) public override {... */\n    tag_15:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      stop\n        /* \"contracts/ERC721A.sol\":8378:8678  function safeTransferFrom(... */\n    tag_16:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      stop\n        /* \"contracts/ERC721A.sol\":6128:6371  function tokenURI(uint256 tokenId)... */\n    tag_17:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721A.sol\":12648:12691  uint256 public nextOwnerToExplicitlySet = 0 */\n    tag_18:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721A.sol\":7743:7921  function isApprovedForAll(address owner, address operator)... */\n    tag_19:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721A.sol\":4162:4520  function supportsInterface(bytes4 interfaceId)... */\n    tag_26:\n        /* \"contracts/ERC721A.sol\":4284:4288  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":4326:4351  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/ERC721A.sol\":4311:4351  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ERC721A.sol\":4311:4322  interfaceId */\n      dup3\n        /* \"contracts/ERC721A.sol\":4311:4351  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":4311:4409  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_95\n      jumpi\n      pop\n        /* \"contracts/ERC721A.sol\":4376:4409  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/ERC721A.sol\":4361:4409  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ERC721A.sol\":4361:4372  interfaceId */\n      dup3\n        /* \"contracts/ERC721A.sol\":4361:4409  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":4311:4409  interfaceId == type(IERC721).interfaceId ||... */\n    tag_95:\n        /* \"contracts/ERC721A.sol\":4311:4469  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_96\n      jumpi\n      pop\n        /* \"contracts/ERC721A.sol\":4434:4469  type(IERC721Enumerable).interfaceId */\n      0x780e9d6300000000000000000000000000000000000000000000000000000000\n        /* \"contracts/ERC721A.sol\":4419:4469  interfaceId == type(IERC721Enumerable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ERC721A.sol\":4419:4430  interfaceId */\n      dup3\n        /* \"contracts/ERC721A.sol\":4419:4469  interfaceId == type(IERC721Enumerable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":4311:4469  interfaceId == type(IERC721).interfaceId ||... */\n    tag_96:\n        /* \"contracts/ERC721A.sol\":4311:4515  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_97\n      jumpi\n      pop\n        /* \"contracts/ERC721A.sol\":4479:4515  super.supportsInterface(interfaceId) */\n      tag_98\n        /* \"contracts/ERC721A.sol\":4503:4514  interfaceId */\n      dup3\n        /* \"contracts/ERC721A.sol\":4479:4502  super.supportsInterface */\n      tag_99\n        /* \"contracts/ERC721A.sol\":4479:4515  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_98:\n        /* \"contracts/ERC721A.sol\":4311:4515  interfaceId == type(IERC721).interfaceId ||... */\n    tag_97:\n        /* \"contracts/ERC721A.sol\":4298:4515  return... */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":4162:4520  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":5826:5918  function name() public view virtual override returns (string memory) {... */\n    tag_30:\n        /* \"contracts/ERC721A.sol\":5880:5893  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":5908:5913  _name */\n      0x01\n        /* \"contracts/ERC721A.sol\":5901:5913  return _name */\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_102\n      jump\t// in\n    tag_103:\n      dup1\n      iszero\n      tag_104\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_105\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_104)\n    tag_105:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_106:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_106\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":5826:5918  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":7157:7357  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_36:\n        /* \"contracts/ERC721A.sol\":7225:7232  address */\n      0x00\n        /* \"contracts/ERC721A.sol\":7248:7264  _exists(tokenId) */\n      tag_108\n        /* \"contracts/ERC721A.sol\":7256:7263  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":7248:7255  _exists */\n      tag_109\n        /* \"contracts/ERC721A.sol\":7248:7264  _exists(tokenId) */\n      jump\t// in\n    tag_108:\n        /* \"contracts/ERC721A.sol\":7240:7314  require(_exists(tokenId), \"ERC721A: approved query for nonexistent token\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"contracts/ERC721A.sol\":7328:7343  _tokenApprovals */\n      0x05\n        /* \"contracts/ERC721A.sol\":7328:7352  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/ERC721A.sol\":7344:7351  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":7328:7352  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":7321:7352  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":7157:7357  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":6735:7104  function approve(address to, uint256 tokenId) public override {... */\n    tag_42:\n        /* \"contracts/ERC721A.sol\":6803:6816  address owner */\n      0x00\n        /* \"contracts/ERC721A.sol\":6819:6843  ERC721A.ownerOf(tokenId) */\n      tag_114\n        /* \"contracts/ERC721A.sol\":6835:6842  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":6819:6834  ERC721A.ownerOf */\n      tag_64\n        /* \"contracts/ERC721A.sol\":6819:6843  ERC721A.ownerOf(tokenId) */\n      jump\t// in\n    tag_114:\n        /* \"contracts/ERC721A.sol\":6803:6843  address owner = ERC721A.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":6863:6868  owner */\n      dup1\n        /* \"contracts/ERC721A.sol\":6857:6868  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":6857:6859  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":6857:6868  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ERC721A.sol\":6849:6907  require(to != owner, \"ERC721A: approval to current owner\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"contracts/ERC721A.sol\":6945:6950  owner */\n      dup1\n        /* \"contracts/ERC721A.sol\":6929:6950  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":6929:6941  _msgSender() */\n      tag_118\n        /* \"contracts/ERC721A.sol\":6929:6939  _msgSender */\n      tag_119\n        /* \"contracts/ERC721A.sol\":6929:6941  _msgSender() */\n      jump\t// in\n    tag_118:\n        /* \"contracts/ERC721A.sol\":6929:6950  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":6929:6991  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      dup1\n      tag_120\n      jumpi\n      pop\n        /* \"contracts/ERC721A.sol\":6954:6991  isApprovedForAll(owner, _msgSender()) */\n      tag_121\n        /* \"contracts/ERC721A.sol\":6971:6976  owner */\n      dup2\n        /* \"contracts/ERC721A.sol\":6978:6990  _msgSender() */\n      tag_122\n        /* \"contracts/ERC721A.sol\":6978:6988  _msgSender */\n      tag_119\n        /* \"contracts/ERC721A.sol\":6978:6990  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"contracts/ERC721A.sol\":6954:6970  isApprovedForAll */\n      tag_92\n        /* \"contracts/ERC721A.sol\":6954:6991  isApprovedForAll(owner, _msgSender()) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/ERC721A.sol\":6929:6991  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n    tag_120:\n        /* \"contracts/ERC721A.sol\":6914:7064  require(... */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"contracts/ERC721A.sol\":7071:7099  _approve(to, tokenId, owner) */\n      tag_126\n        /* \"contracts/ERC721A.sol\":7080:7082  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":7084:7091  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":7093:7098  owner */\n      dup4\n        /* \"contracts/ERC721A.sol\":7071:7079  _approve */\n      tag_127\n        /* \"contracts/ERC721A.sol\":7071:7099  _approve(to, tokenId, owner) */\n      jump\t// in\n    tag_126:\n        /* \"contracts/ERC721A.sol\":6797:7104  {... */\n      pop\n        /* \"contracts/ERC721A.sol\":6735:7104  function approve(address to, uint256 tokenId) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":2768:2860  function totalSupply() public view override returns (uint256) {... */\n    tag_44:\n        /* \"contracts/ERC721A.sol\":2821:2828  uint256 */\n      0x00\n        /* \"contracts/ERC721A.sol\":2843:2855  currentIndex */\n      dup1\n      sload\n        /* \"contracts/ERC721A.sol\":2836:2855  return currentIndex */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":2768:2860  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":7975:8111  function transferFrom(... */\n    tag_50:\n        /* \"contracts/ERC721A.sol\":8078:8106  _transfer(from, to, tokenId) */\n      tag_130\n        /* \"contracts/ERC721A.sol\":8088:8092  from */\n      dup4\n        /* \"contracts/ERC721A.sol\":8094:8096  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":8098:8105  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":8078:8087  _transfer */\n      tag_131\n        /* \"contracts/ERC721A.sol\":8078:8106  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_130:\n        /* \"contracts/ERC721A.sol\":7975:8111  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":3382:4103  function tokenOfOwnerByIndex(address owner, uint256 index)... */\n    tag_53:\n        /* \"contracts/ERC721A.sol\":3487:3494  uint256 */\n      0x00\n        /* \"contracts/ERC721A.sol\":3520:3536  balanceOf(owner) */\n      tag_133\n        /* \"contracts/ERC721A.sol\":3530:3535  owner */\n      dup4\n        /* \"contracts/ERC721A.sol\":3520:3529  balanceOf */\n      tag_69\n        /* \"contracts/ERC721A.sol\":3520:3536  balanceOf(owner) */\n      jump\t// in\n    tag_133:\n        /* \"contracts/ERC721A.sol\":3512:3517  index */\n      dup3\n        /* \"contracts/ERC721A.sol\":3512:3536  index < balanceOf(owner) */\n      lt\n        /* \"contracts/ERC721A.sol\":3504:3575  require(index < balanceOf(owner), \"ERC721A: owner index out of bounds\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"contracts/ERC721A.sol\":3581:3603  uint256 numMintedSoFar */\n      0x00\n        /* \"contracts/ERC721A.sol\":3606:3619  totalSupply() */\n      tag_137\n        /* \"contracts/ERC721A.sol\":3606:3617  totalSupply */\n      tag_44\n        /* \"contracts/ERC721A.sol\":3606:3619  totalSupply() */\n      jump\t// in\n    tag_137:\n        /* \"contracts/ERC721A.sol\":3581:3619  uint256 numMintedSoFar = totalSupply() */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":3625:3644  uint256 tokenIdsIdx */\n      0x00\n        /* \"contracts/ERC721A.sol\":3654:3679  address currOwnershipAddr */\n      dup1\n        /* \"contracts/ERC721A.sol\":3703:3712  uint256 i */\n      0x00\n        /* \"contracts/ERC721A.sol\":3698:4037  for (uint256 i = 0; i < numMintedSoFar; i++) {... */\n    tag_138:\n        /* \"contracts/ERC721A.sol\":3722:3736  numMintedSoFar */\n      dup4\n        /* \"contracts/ERC721A.sol\":3718:3719  i */\n      dup2\n        /* \"contracts/ERC721A.sol\":3718:3736  i < numMintedSoFar */\n      lt\n        /* \"contracts/ERC721A.sol\":3698:4037  for (uint256 i = 0; i < numMintedSoFar; i++) {... */\n      iszero\n      tag_139\n      jumpi\n        /* \"contracts/ERC721A.sol\":3751:3782  TokenOwnership memory ownership */\n      0x00\n        /* \"contracts/ERC721A.sol\":3785:3796  _ownerships */\n      0x03\n        /* \"contracts/ERC721A.sol\":3785:3799  _ownerships[i] */\n      0x00\n        /* \"contracts/ERC721A.sol\":3797:3798  i */\n      dup4\n        /* \"contracts/ERC721A.sol\":3785:3799  _ownerships[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC721A.sol\":3751:3799  TokenOwnership memory ownership = _ownerships[i] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":3837:3838  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":3811:3839  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":3811:3820  ownership */\n      dup2\n        /* \"contracts/ERC721A.sol\":3811:3825  ownership.addr */\n      0x00\n      add\n      mload\n        /* \"contracts/ERC721A.sol\":3811:3839  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":3807:3894  if (ownership.addr != address(0)) {... */\n      tag_141\n      jumpi\n        /* \"contracts/ERC721A.sol\":3871:3880  ownership */\n      dup1\n        /* \"contracts/ERC721A.sol\":3871:3885  ownership.addr */\n      0x00\n      add\n      mload\n        /* \"contracts/ERC721A.sol\":3851:3885  currOwnershipAddr = ownership.addr */\n      swap3\n      pop\n        /* \"contracts/ERC721A.sol\":3807:3894  if (ownership.addr != address(0)) {... */\n    tag_141:\n        /* \"contracts/ERC721A.sol\":3926:3931  owner */\n      dup8\n        /* \"contracts/ERC721A.sol\":3905:3931  currOwnershipAddr == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":3905:3922  currOwnershipAddr */\n      dup4\n        /* \"contracts/ERC721A.sol\":3905:3931  currOwnershipAddr == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":3901:4031  if (currOwnershipAddr == owner) {... */\n      iszero\n      tag_142\n      jumpi\n        /* \"contracts/ERC721A.sol\":3962:3967  index */\n      dup7\n        /* \"contracts/ERC721A.sol\":3947:3958  tokenIdsIdx */\n      dup5\n        /* \"contracts/ERC721A.sol\":3947:3967  tokenIdsIdx == index */\n      eq\n        /* \"contracts/ERC721A.sol\":3943:4000  if (tokenIdsIdx == index) {... */\n      iszero\n      tag_143\n      jumpi\n        /* \"contracts/ERC721A.sol\":3988:3989  i */\n      dup2\n        /* \"contracts/ERC721A.sol\":3981:3989  return i */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_132)\n        /* \"contracts/ERC721A.sol\":3943:4000  if (tokenIdsIdx == index) {... */\n    tag_143:\n        /* \"contracts/ERC721A.sol\":4009:4022  tokenIdsIdx++ */\n      dup4\n      dup1\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      swap5\n      pop\n      pop\n        /* \"contracts/ERC721A.sol\":3901:4031  if (currOwnershipAddr == owner) {... */\n    tag_142:\n        /* \"contracts/ERC721A.sol\":3743:4037  {... */\n      pop\n        /* \"contracts/ERC721A.sol\":3738:3741  i++ */\n      dup1\n      dup1\n      tag_146\n      swap1\n      tag_145\n      jump\t// in\n    tag_146:\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC721A.sol\":3698:4037  for (uint256 i = 0; i < numMintedSoFar; i++) {... */\n      jump(tag_138)\n    tag_139:\n      pop\n        /* \"contracts/ERC721A.sol\":4042:4098  revert(\"ERC721A: unable to get token of owner by index\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":3382:4103  function tokenOfOwnerByIndex(address owner, uint256 index)... */\n    tag_132:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":8169:8320  function safeTransferFrom(... */\n    tag_57:\n        /* \"contracts/ERC721A.sol\":8276:8315  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_150\n        /* \"contracts/ERC721A.sol\":8293:8297  from */\n      dup4\n        /* \"contracts/ERC721A.sol\":8299:8301  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":8303:8310  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":8276:8315  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/ERC721A.sol\":8276:8292  safeTransferFrom */\n      tag_81\n        /* \"contracts/ERC721A.sol\":8276:8315  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_150:\n        /* \"contracts/ERC721A.sol\":8169:8320  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":2924:3098  function tokenByIndex(uint256 index) public view override returns (uint256) {... */\n    tag_60:\n        /* \"contracts/ERC721A.sol\":2991:2998  uint256 */\n      0x00\n        /* \"contracts/ERC721A.sol\":3022:3035  totalSupply() */\n      tag_152\n        /* \"contracts/ERC721A.sol\":3022:3033  totalSupply */\n      tag_44\n        /* \"contracts/ERC721A.sol\":3022:3035  totalSupply() */\n      jump\t// in\n    tag_152:\n        /* \"contracts/ERC721A.sol\":3014:3019  index */\n      dup3\n        /* \"contracts/ERC721A.sol\":3014:3035  index < totalSupply() */\n      lt\n        /* \"contracts/ERC721A.sol\":3006:3075  require(index < totalSupply(), \"ERC721A: global index out of bounds\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"contracts/ERC721A.sol\":3088:3093  index */\n      dup2\n        /* \"contracts/ERC721A.sol\":3081:3093  return index */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":2924:3098  function tokenByIndex(uint256 index) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":5656:5772  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_64:\n        /* \"contracts/ERC721A.sol\":5720:5727  address */\n      0x00\n        /* \"contracts/ERC721A.sol\":5742:5762  ownershipOf(tokenId) */\n      tag_157\n        /* \"contracts/ERC721A.sol\":5754:5761  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":5742:5753  ownershipOf */\n      tag_158\n        /* \"contracts/ERC721A.sol\":5742:5762  ownershipOf(tokenId) */\n      jump\t// in\n    tag_157:\n        /* \"contracts/ERC721A.sol\":5742:5767  ownershipOf(tokenId).addr */\n      0x00\n      add\n      mload\n        /* \"contracts/ERC721A.sol\":5735:5767  return ownershipOf(tokenId).addr */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":5656:5772  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":4571:4779  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_69:\n        /* \"contracts/ERC721A.sol\":4635:4642  uint256 */\n      0x00\n        /* \"contracts/ERC721A.sol\":4675:4676  0 */\n      dup1\n        /* \"contracts/ERC721A.sol\":4658:4677  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":4658:4663  owner */\n      dup3\n        /* \"contracts/ERC721A.sol\":4658:4677  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ERC721A.sol\":4650:4725  require(owner != address(0), \"ERC721A: balance query for the zero address\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"contracts/ERC721A.sol\":4746:4758  _addressData */\n      0x04\n        /* \"contracts/ERC721A.sol\":4746:4765  _addressData[owner] */\n      0x00\n        /* \"contracts/ERC721A.sol\":4759:4764  owner */\n      dup4\n        /* \"contracts/ERC721A.sol\":4746:4765  _addressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC721A.sol\":4746:4773  _addressData[owner].balance */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":4738:4774  uint256(_addressData[owner].balance) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":4731:4774  return uint256(_addressData[owner].balance) */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":4571:4779  function balanceOf(address owner) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":5974:6070  function symbol() public view virtual override returns (string memory) {... */\n    tag_72:\n        /* \"contracts/ERC721A.sol\":6030:6043  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":6058:6065  _symbol */\n      0x02\n        /* \"contracts/ERC721A.sol\":6051:6065  return _symbol */\n      dup1\n      sload\n      tag_164\n      swap1\n      tag_102\n      jump\t// in\n    tag_164:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_165\n      swap1\n      tag_102\n      jump\t// in\n    tag_165:\n      dup1\n      iszero\n      tag_166\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_167\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_166)\n    tag_167:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_168:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_168\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_166:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":5974:6070  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":7416:7685  function setApprovalForAll(address operator, bool approved) public override {... */\n    tag_77:\n        /* \"contracts/ERC721A.sol\":7518:7530  _msgSender() */\n      tag_170\n        /* \"contracts/ERC721A.sol\":7518:7528  _msgSender */\n      tag_119\n        /* \"contracts/ERC721A.sol\":7518:7530  _msgSender() */\n      jump\t// in\n    tag_170:\n        /* \"contracts/ERC721A.sol\":7506:7530  operator != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":7506:7514  operator */\n      dup3\n        /* \"contracts/ERC721A.sol\":7506:7530  operator != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ERC721A.sol\":7498:7561  require(operator != _msgSender(), \"ERC721A: approve to caller\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"contracts/ERC721A.sol\":7613:7621  approved */\n      dup1\n        /* \"contracts/ERC721A.sol\":7568:7586  _operatorApprovals */\n      0x06\n        /* \"contracts/ERC721A.sol\":7568:7600  _operatorApprovals[_msgSender()] */\n      0x00\n        /* \"contracts/ERC721A.sol\":7587:7599  _msgSender() */\n      tag_174\n        /* \"contracts/ERC721A.sol\":7587:7597  _msgSender */\n      tag_119\n        /* \"contracts/ERC721A.sol\":7587:7599  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"contracts/ERC721A.sol\":7568:7600  _operatorApprovals[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC721A.sol\":7568:7610  _operatorApprovals[_msgSender()][operator] */\n      0x00\n        /* \"contracts/ERC721A.sol\":7601:7609  operator */\n      dup5\n        /* \"contracts/ERC721A.sol\":7568:7610  _operatorApprovals[_msgSender()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC721A.sol\":7568:7621  _operatorApprovals[_msgSender()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC721A.sol\":7661:7669  operator */\n      dup2\n        /* \"contracts/ERC721A.sol\":7632:7680  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":7647:7659  _msgSender() */\n      tag_175\n        /* \"contracts/ERC721A.sol\":7647:7657  _msgSender */\n      tag_119\n        /* \"contracts/ERC721A.sol\":7647:7659  _msgSender() */\n      jump\t// in\n    tag_175:\n        /* \"contracts/ERC721A.sol\":7632:7680  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"contracts/ERC721A.sol\":7671:7679  approved */\n      dup4\n        /* \"contracts/ERC721A.sol\":7632:7680  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      tag_176\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC721A.sol\":7416:7685  function setApprovalForAll(address operator, bool approved) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":8378:8678  function safeTransferFrom(... */\n    tag_81:\n        /* \"contracts/ERC721A.sol\":8509:8537  _transfer(from, to, tokenId) */\n      tag_178\n        /* \"contracts/ERC721A.sol\":8519:8523  from */\n      dup5\n        /* \"contracts/ERC721A.sol\":8525:8527  to */\n      dup5\n        /* \"contracts/ERC721A.sol\":8529:8536  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":8509:8518  _transfer */\n      tag_131\n        /* \"contracts/ERC721A.sol\":8509:8537  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_178:\n        /* \"contracts/ERC721A.sol\":8558:8606  _checkOnERC721Received(from, to, tokenId, _data) */\n      tag_179\n        /* \"contracts/ERC721A.sol\":8581:8585  from */\n      dup5\n        /* \"contracts/ERC721A.sol\":8587:8589  to */\n      dup5\n        /* \"contracts/ERC721A.sol\":8591:8598  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":8600:8605  _data */\n      dup5\n        /* \"contracts/ERC721A.sol\":8558:8580  _checkOnERC721Received */\n      tag_180\n        /* \"contracts/ERC721A.sol\":8558:8606  _checkOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_179:\n        /* \"contracts/ERC721A.sol\":8543:8673  require(... */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"contracts/ERC721A.sol\":8378:8678  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":6128:6371  function tokenURI(uint256 tokenId)... */\n    tag_84:\n        /* \"contracts/ERC721A.sol\":6221:6234  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":6259:6275  _exists(tokenId) */\n      tag_185\n        /* \"contracts/ERC721A.sol\":6267:6274  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":6259:6266  _exists */\n      tag_109\n        /* \"contracts/ERC721A.sol\":6259:6275  _exists(tokenId) */\n      jump\t// in\n    tag_185:\n        /* \"contracts/ERC721A.sol\":6244:6338  require(... */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"contracts/ERC721A.sol\":6356:6366  _baseURI() */\n      tag_189\n        /* \"contracts/ERC721A.sol\":6356:6364  _baseURI */\n      tag_190\n        /* \"contracts/ERC721A.sol\":6356:6366  _baseURI() */\n      jump\t// in\n    tag_189:\n        /* \"contracts/ERC721A.sol\":6349:6366  return _baseURI() */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":6128:6371  function tokenURI(uint256 tokenId)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":12648:12691  uint256 public nextOwnerToExplicitlySet = 0 */\n    tag_87:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":7743:7921  function isApprovedForAll(address owner, address operator)... */\n    tag_92:\n        /* \"contracts/ERC721A.sol\":7860:7864  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":7881:7899  _operatorApprovals */\n      0x06\n        /* \"contracts/ERC721A.sol\":7881:7906  _operatorApprovals[owner] */\n      0x00\n        /* \"contracts/ERC721A.sol\":7900:7905  owner */\n      dup5\n        /* \"contracts/ERC721A.sol\":7881:7906  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC721A.sol\":7881:7916  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"contracts/ERC721A.sol\":7907:7915  operator */\n      dup4\n        /* \"contracts/ERC721A.sol\":7881:7916  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ERC721A.sol\":7874:7916  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":7743:7921  function isApprovedForAll(address owner, address operator)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.3.3/utils/introspection/ERC165.sol\":763:918  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts@4.3.3/utils/introspection/ERC165.sol\":848:852  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.3.3/utils/introspection/ERC165.sol\":886:911  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts@4.3.3/utils/introspection/ERC165.sol\":871:911  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts@4.3.3/utils/introspection/ERC165.sol\":871:882  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts@4.3.3/utils/introspection/ERC165.sol\":871:911  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts@4.3.3/utils/introspection/ERC165.sol\":864:911  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.3.3/utils/introspection/ERC165.sol\":763:918  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":8908:9011  function _exists(uint256 tokenId) internal view returns (bool) {... */\n    tag_109:\n        /* \"contracts/ERC721A.sol\":8965:8969  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":8994:9006  currentIndex */\n      dup1\n      sload\n        /* \"contracts/ERC721A.sol\":8984:8991  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":8984:9006  tokenId < currentIndex */\n      lt\n        /* \"contracts/ERC721A.sol\":8977:9006  return tokenId < currentIndex */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":8908:9011  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.3.3/utils/Context.sol\":587:683  function _msgSender() internal view virtual returns (address) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts@4.3.3/utils/Context.sol\":640:647  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.3.3/utils/Context.sol\":666:676  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.3.3/utils/Context.sol\":659:676  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.3.3/utils/Context.sol\":587:683  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":12479:12644  function _approve(... */\n    tag_127:\n        /* \"contracts/ERC721A.sol\":12598:12600  to */\n      dup3\n        /* \"contracts/ERC721A.sol\":12571:12586  _tokenApprovals */\n      0x05\n        /* \"contracts/ERC721A.sol\":12571:12595  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/ERC721A.sol\":12587:12594  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":12571:12595  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC721A.sol\":12571:12600  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC721A.sol\":12631:12638  tokenId */\n      dup2\n        /* \"contracts/ERC721A.sol\":12627:12629  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":12611:12639  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":12620:12625  owner */\n      dup3\n        /* \"contracts/ERC721A.sol\":12611:12639  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC721A.sol\":12479:12644  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":10896:12380  function _transfer(... */\n    tag_131:\n        /* \"contracts/ERC721A.sol\":10988:11023  TokenOwnership memory prevOwnership */\n      0x00\n        /* \"contracts/ERC721A.sol\":11026:11046  ownershipOf(tokenId) */\n      tag_197\n        /* \"contracts/ERC721A.sol\":11038:11045  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":11026:11037  ownershipOf */\n      tag_158\n        /* \"contracts/ERC721A.sol\":11026:11046  ownershipOf(tokenId) */\n      jump\t// in\n    tag_197:\n        /* \"contracts/ERC721A.sol\":10988:11046  TokenOwnership memory prevOwnership = ownershipOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":11053:11075  bool isApprovedOrOwner */\n      0x00\n        /* \"contracts/ERC721A.sol\":11095:11108  prevOwnership */\n      dup2\n        /* \"contracts/ERC721A.sol\":11095:11113  prevOwnership.addr */\n      0x00\n      add\n      mload\n        /* \"contracts/ERC721A.sol\":11079:11113  _msgSender() == prevOwnership.addr */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":11079:11091  _msgSender() */\n      tag_198\n        /* \"contracts/ERC721A.sol\":11079:11089  _msgSender */\n      tag_119\n        /* \"contracts/ERC721A.sol\":11079:11091  _msgSender() */\n      jump\t// in\n    tag_198:\n        /* \"contracts/ERC721A.sol\":11079:11113  _msgSender() == prevOwnership.addr */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":11079:11159  _msgSender() == prevOwnership.addr ||... */\n      dup1\n      tag_199\n      jumpi\n      pop\n        /* \"contracts/ERC721A.sol\":11147:11159  _msgSender() */\n      tag_200\n        /* \"contracts/ERC721A.sol\":11147:11157  _msgSender */\n      tag_119\n        /* \"contracts/ERC721A.sol\":11147:11159  _msgSender() */\n      jump\t// in\n    tag_200:\n        /* \"contracts/ERC721A.sol\":11123:11159  getApproved(tokenId) == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":11123:11143  getApproved(tokenId) */\n      tag_201\n        /* \"contracts/ERC721A.sol\":11135:11142  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":11123:11134  getApproved */\n      tag_36\n        /* \"contracts/ERC721A.sol\":11123:11143  getApproved(tokenId) */\n      jump\t// in\n    tag_201:\n        /* \"contracts/ERC721A.sol\":11123:11159  getApproved(tokenId) == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":11079:11159  _msgSender() == prevOwnership.addr ||... */\n    tag_199:\n        /* \"contracts/ERC721A.sol\":11079:11219  _msgSender() == prevOwnership.addr ||... */\n      dup1\n      tag_202\n      jumpi\n      pop\n        /* \"contracts/ERC721A.sol\":11169:11219  isApprovedForAll(prevOwnership.addr, _msgSender()) */\n      tag_203\n        /* \"contracts/ERC721A.sol\":11186:11199  prevOwnership */\n      dup3\n        /* \"contracts/ERC721A.sol\":11186:11204  prevOwnership.addr */\n      0x00\n      add\n      mload\n        /* \"contracts/ERC721A.sol\":11206:11218  _msgSender() */\n      tag_204\n        /* \"contracts/ERC721A.sol\":11206:11216  _msgSender */\n      tag_119\n        /* \"contracts/ERC721A.sol\":11206:11218  _msgSender() */\n      jump\t// in\n    tag_204:\n        /* \"contracts/ERC721A.sol\":11169:11185  isApprovedForAll */\n      tag_92\n        /* \"contracts/ERC721A.sol\":11169:11219  isApprovedForAll(prevOwnership.addr, _msgSender()) */\n      jump\t// in\n    tag_203:\n        /* \"contracts/ERC721A.sol\":11079:11219  _msgSender() == prevOwnership.addr ||... */\n    tag_202:\n        /* \"contracts/ERC721A.sol\":11053:11220  bool isApprovedOrOwner = (_msgSender() == prevOwnership.addr ||... */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":11242:11259  isApprovedOrOwner */\n      dup1\n        /* \"contracts/ERC721A.sol\":11227:11325  require(... */\n      tag_205\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_205:\n        /* \"contracts/ERC721A.sol\":11369:11373  from */\n      dup5\n        /* \"contracts/ERC721A.sol\":11347:11373  prevOwnership.addr == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":11347:11360  prevOwnership */\n      dup3\n        /* \"contracts/ERC721A.sol\":11347:11365  prevOwnership.addr */\n      0x00\n      add\n      mload\n        /* \"contracts/ERC721A.sol\":11347:11373  prevOwnership.addr == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":11332:11427  require(... */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"contracts/ERC721A.sol\":11455:11456  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":11441:11457  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":11441:11443  to */\n      dup5\n        /* \"contracts/ERC721A.sol\":11441:11457  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ERC721A.sol\":11433:11499  require(to != address(0), \"ERC721A: transfer to the zero address\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_211:\n        /* \"contracts/ERC721A.sol\":11506:11549  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_214\n        /* \"contracts/ERC721A.sol\":11528:11532  from */\n      dup6\n        /* \"contracts/ERC721A.sol\":11534:11536  to */\n      dup6\n        /* \"contracts/ERC721A.sol\":11538:11545  tokenId */\n      dup6\n        /* \"contracts/ERC721A.sol\":11547:11548  1 */\n      0x01\n        /* \"contracts/ERC721A.sol\":11506:11527  _beforeTokenTransfers */\n      tag_215\n        /* \"contracts/ERC721A.sol\":11506:11549  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_214:\n        /* \"contracts/ERC721A.sol\":11603:11652  _approve(address(0), tokenId, prevOwnership.addr) */\n      tag_216\n        /* \"contracts/ERC721A.sol\":11620:11621  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":11624:11631  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":11633:11646  prevOwnership */\n      dup5\n        /* \"contracts/ERC721A.sol\":11633:11651  prevOwnership.addr */\n      0x00\n      add\n      mload\n        /* \"contracts/ERC721A.sol\":11603:11611  _approve */\n      tag_127\n        /* \"contracts/ERC721A.sol\":11603:11652  _approve(address(0), tokenId, prevOwnership.addr) */\n      jump\t// in\n    tag_216:\n        /* \"contracts/ERC721A.sol\":11689:11690  1 */\n      0x01\n        /* \"contracts/ERC721A.sol\":11659:11671  _addressData */\n      0x04\n        /* \"contracts/ERC721A.sol\":11659:11677  _addressData[from] */\n      0x00\n        /* \"contracts/ERC721A.sol\":11672:11676  from */\n      dup8\n        /* \"contracts/ERC721A.sol\":11659:11677  _addressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC721A.sol\":11659:11685  _addressData[from].balance */\n      0x00\n      add\n      0x00\n        /* \"contracts/ERC721A.sol\":11659:11690  _addressData[from].balance -= 1 */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      tag_217\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC721A.sol\":11724:11725  1 */\n      0x01\n        /* \"contracts/ERC721A.sol\":11696:11708  _addressData */\n      0x04\n        /* \"contracts/ERC721A.sol\":11696:11712  _addressData[to] */\n      0x00\n        /* \"contracts/ERC721A.sol\":11709:11711  to */\n      dup7\n        /* \"contracts/ERC721A.sol\":11696:11712  _addressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC721A.sol\":11696:11720  _addressData[to].balance */\n      0x00\n      add\n      0x00\n        /* \"contracts/ERC721A.sol\":11696:11725  _addressData[to].balance += 1 */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      tag_219\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC721A.sol\":11754:11797  TokenOwnership(to, uint64(block.timestamp)) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/ERC721A.sol\":11769:11771  to */\n      dup6\n        /* \"contracts/ERC721A.sol\":11754:11797  TokenOwnership(to, uint64(block.timestamp)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/ERC721A.sol\":11780:11795  block.timestamp */\n      timestamp\n        /* \"contracts/ERC721A.sol\":11754:11797  TokenOwnership(to, uint64(block.timestamp)) */\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/ERC721A.sol\":11731:11742  _ownerships */\n      0x03\n        /* \"contracts/ERC721A.sol\":11731:11751  _ownerships[tokenId] */\n      0x00\n        /* \"contracts/ERC721A.sol\":11743:11750  tokenId */\n      dup6\n        /* \"contracts/ERC721A.sol\":11731:11751  _ownerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC721A.sol\":11731:11797  _ownerships[tokenId] = TokenOwnership(to, uint64(block.timestamp)) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x14)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/ERC721A.sol\":12021:12040  uint256 nextTokenId */\n      0x00\n        /* \"contracts/ERC721A.sol\":12053:12054  1 */\n      0x01\n        /* \"contracts/ERC721A.sol\":12043:12050  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":12043:12054  tokenId + 1 */\n      tag_221\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n        /* \"contracts/ERC721A.sol\":12021:12054  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":12105:12106  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":12064:12107  _ownerships[nextTokenId].addr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":12064:12075  _ownerships */\n      0x03\n        /* \"contracts/ERC721A.sol\":12064:12088  _ownerships[nextTokenId] */\n      0x00\n        /* \"contracts/ERC721A.sol\":12076:12087  nextTokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":12064:12088  _ownerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC721A.sol\":12064:12093  _ownerships[nextTokenId].addr */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":12064:12107  _ownerships[nextTokenId].addr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":12060:12289  if (_ownerships[nextTokenId].addr == address(0)) {... */\n      iszero\n      tag_223\n      jumpi\n        /* \"contracts/ERC721A.sol\":12121:12141  _exists(nextTokenId) */\n      tag_224\n        /* \"contracts/ERC721A.sol\":12129:12140  nextTokenId */\n      dup2\n        /* \"contracts/ERC721A.sol\":12121:12128  _exists */\n      tag_109\n        /* \"contracts/ERC721A.sol\":12121:12141  _exists(nextTokenId) */\n      jump\t// in\n    tag_224:\n        /* \"contracts/ERC721A.sol\":12117:12283  if (_exists(nextTokenId)) {... */\n      iszero\n      tag_225\n      jumpi\n        /* \"contracts/ERC721A.sol\":12180:12274  TokenOwnership(... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/ERC721A.sol\":12206:12219  prevOwnership */\n      dup5\n        /* \"contracts/ERC721A.sol\":12206:12224  prevOwnership.addr */\n      0x00\n      add\n      mload\n        /* \"contracts/ERC721A.sol\":12180:12274  TokenOwnership(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/ERC721A.sol\":12236:12249  prevOwnership */\n      dup5\n        /* \"contracts/ERC721A.sol\":12236:12264  prevOwnership.startTimestamp */\n      0x20\n      add\n      mload\n        /* \"contracts/ERC721A.sol\":12180:12274  TokenOwnership(... */\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/ERC721A.sol\":12153:12164  _ownerships */\n      0x03\n        /* \"contracts/ERC721A.sol\":12153:12177  _ownerships[nextTokenId] */\n      0x00\n        /* \"contracts/ERC721A.sol\":12165:12176  nextTokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":12153:12177  _ownerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC721A.sol\":12153:12274  _ownerships[nextTokenId] = TokenOwnership(... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x14)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/ERC721A.sol\":12117:12283  if (_exists(nextTokenId)) {... */\n    tag_225:\n        /* \"contracts/ERC721A.sol\":12060:12289  if (_ownerships[nextTokenId].addr == address(0)) {... */\n    tag_223:\n        /* \"contracts/ERC721A.sol\":12319:12326  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":12315:12317  to */\n      dup6\n        /* \"contracts/ERC721A.sol\":12300:12327  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":12309:12313  from */\n      dup8\n        /* \"contracts/ERC721A.sol\":12300:12327  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC721A.sol\":12333:12375  _afterTokenTransfers(from, to, tokenId, 1) */\n      tag_226\n        /* \"contracts/ERC721A.sol\":12354:12358  from */\n      dup7\n        /* \"contracts/ERC721A.sol\":12360:12362  to */\n      dup7\n        /* \"contracts/ERC721A.sol\":12364:12371  tokenId */\n      dup7\n        /* \"contracts/ERC721A.sol\":12373:12374  1 */\n      0x01\n        /* \"contracts/ERC721A.sol\":12333:12353  _afterTokenTransfers */\n      tag_227\n        /* \"contracts/ERC721A.sol\":12333:12375  _afterTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_226:\n        /* \"contracts/ERC721A.sol\":10982:12380  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/ERC721A.sol\":10896:12380  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":5021:5607  function ownershipOf(uint256 tokenId)... */\n    tag_158:\n        /* \"contracts/ERC721A.sol\":5094:5115  TokenOwnership memory */\n      tag_228\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"contracts/ERC721A.sol\":5133:5149  _exists(tokenId) */\n      tag_231\n        /* \"contracts/ERC721A.sol\":5141:5148  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":5133:5140  _exists */\n      tag_109\n        /* \"contracts/ERC721A.sol\":5133:5149  _exists(tokenId) */\n      jump\t// in\n    tag_231:\n        /* \"contracts/ERC721A.sol\":5125:5196  require(_exists(tokenId), \"ERC721A: owner query for nonexistent token\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_233\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_232:\n        /* \"contracts/ERC721A.sol\":5203:5229  uint256 lowestTokenToCheck */\n      0x00\n        /* \"contracts/ERC721A.sol\":5250:5262  maxBatchSize */\n      immutable(\"0xe216240695da412145d9df04d3b0c5fca4d43b99b7d0d5386b61bbf0097f7efd\")\n        /* \"contracts/ERC721A.sol\":5239:5246  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":5239:5262  tokenId >= maxBatchSize */\n      lt\n        /* \"contracts/ERC721A.sol\":5235:5326  if (tokenId >= maxBatchSize) {... */\n      tag_235\n      jumpi\n        /* \"contracts/ERC721A.sol\":5318:5319  1 */\n      0x01\n        /* \"contracts/ERC721A.sol\":5303:5315  maxBatchSize */\n      immutable(\"0xe216240695da412145d9df04d3b0c5fca4d43b99b7d0d5386b61bbf0097f7efd\")\n        /* \"contracts/ERC721A.sol\":5293:5300  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":5293:5315  tokenId - maxBatchSize */\n      tag_236\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"contracts/ERC721A.sol\":5293:5319  tokenId - maxBatchSize + 1 */\n      tag_238\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_238:\n        /* \"contracts/ERC721A.sol\":5272:5319  lowestTokenToCheck = tokenId - maxBatchSize + 1 */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":5235:5326  if (tokenId >= maxBatchSize) {... */\n    tag_235:\n        /* \"contracts/ERC721A.sol\":5337:5349  uint256 curr */\n      0x00\n        /* \"contracts/ERC721A.sol\":5352:5359  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":5337:5359  uint256 curr = tokenId */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":5332:5539  for (uint256 curr = tokenId; curr >= lowestTokenToCheck; curr--) {... */\n    tag_239:\n        /* \"contracts/ERC721A.sol\":5369:5387  lowestTokenToCheck */\n      dup2\n        /* \"contracts/ERC721A.sol\":5361:5365  curr */\n      dup2\n        /* \"contracts/ERC721A.sol\":5361:5387  curr >= lowestTokenToCheck */\n      lt\n        /* \"contracts/ERC721A.sol\":5332:5539  for (uint256 curr = tokenId; curr >= lowestTokenToCheck; curr--) {... */\n      tag_240\n      jumpi\n        /* \"contracts/ERC721A.sol\":5405:5436  TokenOwnership memory ownership */\n      0x00\n        /* \"contracts/ERC721A.sol\":5439:5450  _ownerships */\n      0x03\n        /* \"contracts/ERC721A.sol\":5439:5456  _ownerships[curr] */\n      0x00\n        /* \"contracts/ERC721A.sol\":5451:5455  curr */\n      dup4\n        /* \"contracts/ERC721A.sol\":5439:5456  _ownerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC721A.sol\":5405:5456  TokenOwnership memory ownership = _ownerships[curr] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":5494:5495  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":5468:5496  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":5468:5477  ownership */\n      dup2\n        /* \"contracts/ERC721A.sol\":5468:5482  ownership.addr */\n      0x00\n      add\n      mload\n        /* \"contracts/ERC721A.sol\":5468:5496  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":5464:5533  if (ownership.addr != address(0)) {... */\n      tag_242\n      jumpi\n        /* \"contracts/ERC721A.sol\":5515:5524  ownership */\n      dup1\n        /* \"contracts/ERC721A.sol\":5508:5524  return ownership */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_230)\n        /* \"contracts/ERC721A.sol\":5464:5533  if (ownership.addr != address(0)) {... */\n    tag_242:\n        /* \"contracts/ERC721A.sol\":5397:5539  {... */\n      pop\n        /* \"contracts/ERC721A.sol\":5389:5395  curr-- */\n      dup1\n      dup1\n      tag_243\n      swap1\n      tag_244\n      jump\t// in\n    tag_243:\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC721A.sol\":5332:5539  for (uint256 curr = tokenId; curr >= lowestTokenToCheck; curr--) {... */\n      jump(tag_239)\n    tag_240:\n      pop\n        /* \"contracts/ERC721A.sol\":5545:5602  revert(\"ERC721A: unable to determine the owner of token\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":5021:5607  function ownershipOf(uint256 tokenId)... */\n    tag_230:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":14149:14816  function _checkOnERC721Received(... */\n    tag_180:\n        /* \"contracts/ERC721A.sol\":14281:14285  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":14297:14312  to.isContract() */\n      tag_248\n        /* \"contracts/ERC721A.sol\":14297:14299  to */\n      dup5\n        /* \"contracts/ERC721A.sol\":14297:14310  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_249\n        /* \"contracts/ERC721A.sol\":14297:14312  to.isContract() */\n      jump\t// in\n    tag_248:\n        /* \"contracts/ERC721A.sol\":14293:14812  if (to.isContract()) {... */\n      iszero\n      tag_250\n      jumpi\n        /* \"contracts/ERC721A.sol\":14350:14352  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":14334:14370  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"contracts/ERC721A.sol\":14371:14383  _msgSender() */\n      tag_251\n        /* \"contracts/ERC721A.sol\":14371:14381  _msgSender */\n      tag_119\n        /* \"contracts/ERC721A.sol\":14371:14383  _msgSender() */\n      jump\t// in\n    tag_251:\n        /* \"contracts/ERC721A.sol\":14385:14389  from */\n      dup8\n        /* \"contracts/ERC721A.sol\":14391:14398  tokenId */\n      dup7\n        /* \"contracts/ERC721A.sol\":14400:14405  _data */\n      dup7\n        /* \"contracts/ERC721A.sol\":14334:14406  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_254\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_254:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_255\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_256\n      swap2\n      swap1\n      tag_257\n      jump\t// in\n    tag_256:\n      0x01\n    tag_255:\n        /* \"contracts/ERC721A.sol\":14322:14774  try... */\n      tag_258\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_263\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_262)\n    tag_263:\n      0x60\n      swap2\n      pop\n    tag_262:\n      pop\n        /* \"contracts/ERC721A.sol\":14578:14579  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":14561:14567  reason */\n      dup2\n        /* \"contracts/ERC721A.sol\":14561:14574  reason.length */\n      mload\n        /* \"contracts/ERC721A.sol\":14561:14579  reason.length == 0 */\n      eq\n        /* \"contracts/ERC721A.sol\":14557:14766  if (reason.length == 0) {... */\n      iszero\n      tag_264\n      jumpi\n        /* \"contracts/ERC721A.sol\":14593:14654  revert(\"ERC721A: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap1\n      tag_183\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":14557:14766  if (reason.length == 0) {... */\n    tag_264:\n        /* \"contracts/ERC721A.sol\":14736:14742  reason */\n      dup1\n        /* \"contracts/ERC721A.sol\":14730:14743  mload(reason) */\n      mload\n        /* \"contracts/ERC721A.sol\":14721:14727  reason */\n      dup2\n        /* \"contracts/ERC721A.sol\":14717:14719  32 */\n      0x20\n        /* \"contracts/ERC721A.sol\":14713:14728  add(32, reason) */\n      add\n        /* \"contracts/ERC721A.sol\":14706:14744  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/ERC721A.sol\":14322:14774  try... */\n    tag_258:\n        /* \"contracts/ERC721A.sol\":14464:14509  IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"contracts/ERC721A.sol\":14454:14509  retval == IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ERC721A.sol\":14454:14460  retval */\n      dup2\n        /* \"contracts/ERC721A.sol\":14454:14509  retval == IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":14447:14509  return retval == IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n      jump(tag_247)\n        /* \"contracts/ERC721A.sol\":14293:14812  if (to.isContract()) {... */\n    tag_250:\n        /* \"contracts/ERC721A.sol\":14801:14805  true */\n      0x01\n        /* \"contracts/ERC721A.sol\":14794:14805  return true */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":14149:14816  function _checkOnERC721Received(... */\n    tag_247:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":6600:6686  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_190:\n        /* \"contracts/ERC721A.sol\":6651:6664  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":6672:6681  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":6600:6686  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":15264:15400  function _beforeTokenTransfers(... */\n    tag_215:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":15772:15907  function _afterTokenTransfers(... */\n    tag_227:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.3.3/utils/Address.sol\":718:1095  function isContract(address account) internal view returns (bool) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts@4.3.3/utils/Address.sol\":778:782  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.3.3/utils/Address.sol\":981:993  uint256 size */\n      dup1\n        /* \"@openzeppelin/contracts@4.3.3/utils/Address.sol\":1046:1053  account */\n      dup3\n        /* \"@openzeppelin/contracts@4.3.3/utils/Address.sol\":1034:1054  extcodesize(account) */\n      extcodesize\n        /* \"@openzeppelin/contracts@4.3.3/utils/Address.sol\":1026:1054  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.3.3/utils/Address.sol\":1087:1088  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.3.3/utils/Address.sol\":1080:1084  size */\n      dup2\n        /* \"@openzeppelin/contracts@4.3.3/utils/Address.sol\":1080:1088  size > 0 */\n      gt\n        /* \"@openzeppelin/contracts@4.3.3/utils/Address.sol\":1073:1088  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@4.3.3/utils/Address.sol\":718:1095  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_229:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:417   */\n    tag_274:\n        /* \"#utility.yul\":84:89   */\n      0x00\n        /* \"#utility.yul\":109:174   */\n      tag_276\n        /* \"#utility.yul\":125:173   */\n      tag_277\n        /* \"#utility.yul\":166:172   */\n      dup5\n        /* \"#utility.yul\":125:173   */\n      tag_278\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":109:174   */\n      tag_279\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":100:174   */\n      swap1\n      pop\n        /* \"#utility.yul\":197:203   */\n      dup3\n        /* \"#utility.yul\":190:195   */\n      dup2\n        /* \"#utility.yul\":183:204   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x20\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:240   */\n      add\n        /* \"#utility.yul\":273:276   */\n      dup5\n        /* \"#utility.yul\":264:270   */\n      dup5\n        /* \"#utility.yul\":259:262   */\n      dup5\n        /* \"#utility.yul\":255:271   */\n      add\n        /* \"#utility.yul\":252:277   */\n      gt\n        /* \"#utility.yul\":249:361   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":280:359   */\n      tag_281\n      tag_282\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":249:361   */\n    tag_280:\n        /* \"#utility.yul\":370:411   */\n      tag_283\n        /* \"#utility.yul\":404:410   */\n      dup5\n        /* \"#utility.yul\":399:402   */\n      dup3\n        /* \"#utility.yul\":394:397   */\n      dup6\n        /* \"#utility.yul\":370:411   */\n      tag_284\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":90:417   */\n      pop\n        /* \"#utility.yul\":7:417   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":423:562   */\n    tag_285:\n        /* \"#utility.yul\":469:474   */\n      0x00\n        /* \"#utility.yul\":507:513   */\n      dup2\n        /* \"#utility.yul\":494:514   */\n      calldataload\n        /* \"#utility.yul\":485:514   */\n      swap1\n      pop\n        /* \"#utility.yul\":523:556   */\n      tag_287\n        /* \"#utility.yul\":550:555   */\n      dup2\n        /* \"#utility.yul\":523:556   */\n      tag_288\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":423:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:701   */\n    tag_289:\n        /* \"#utility.yul\":611:616   */\n      0x00\n        /* \"#utility.yul\":649:655   */\n      dup2\n        /* \"#utility.yul\":636:656   */\n      calldataload\n        /* \"#utility.yul\":627:656   */\n      swap1\n      pop\n        /* \"#utility.yul\":665:695   */\n      tag_291\n        /* \"#utility.yul\":689:694   */\n      dup2\n        /* \"#utility.yul\":665:695   */\n      tag_292\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":568:701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":707:844   */\n    tag_293:\n        /* \"#utility.yul\":752:757   */\n      0x00\n        /* \"#utility.yul\":790:796   */\n      dup2\n        /* \"#utility.yul\":777:797   */\n      calldataload\n        /* \"#utility.yul\":768:797   */\n      swap1\n      pop\n        /* \"#utility.yul\":806:838   */\n      tag_295\n        /* \"#utility.yul\":832:837   */\n      dup2\n        /* \"#utility.yul\":806:838   */\n      tag_296\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":707:844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":850:991   */\n    tag_297:\n        /* \"#utility.yul\":906:911   */\n      0x00\n        /* \"#utility.yul\":937:943   */\n      dup2\n        /* \"#utility.yul\":931:944   */\n      mload\n        /* \"#utility.yul\":922:944   */\n      swap1\n      pop\n        /* \"#utility.yul\":953:985   */\n      tag_299\n        /* \"#utility.yul\":979:984   */\n      dup2\n        /* \"#utility.yul\":953:985   */\n      tag_296\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":850:991   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1010:1348   */\n    tag_300:\n        /* \"#utility.yul\":1065:1070   */\n      0x00\n        /* \"#utility.yul\":1114:1117   */\n      dup3\n        /* \"#utility.yul\":1107:1111   */\n      0x1f\n        /* \"#utility.yul\":1099:1105   */\n      dup4\n        /* \"#utility.yul\":1095:1112   */\n      add\n        /* \"#utility.yul\":1091:1118   */\n      slt\n        /* \"#utility.yul\":1081:1203   */\n      tag_302\n      jumpi\n        /* \"#utility.yul\":1122:1201   */\n      tag_303\n      tag_304\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":1081:1203   */\n    tag_302:\n        /* \"#utility.yul\":1239:1245   */\n      dup2\n        /* \"#utility.yul\":1226:1246   */\n      calldataload\n        /* \"#utility.yul\":1264:1342   */\n      tag_305\n        /* \"#utility.yul\":1338:1341   */\n      dup5\n        /* \"#utility.yul\":1330:1336   */\n      dup3\n        /* \"#utility.yul\":1323:1327   */\n      0x20\n        /* \"#utility.yul\":1315:1321   */\n      dup7\n        /* \"#utility.yul\":1311:1328   */\n      add\n        /* \"#utility.yul\":1264:1342   */\n      tag_274\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":1255:1342   */\n      swap2\n      pop\n        /* \"#utility.yul\":1071:1348   */\n      pop\n        /* \"#utility.yul\":1010:1348   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1354:1493   */\n    tag_306:\n        /* \"#utility.yul\":1400:1405   */\n      0x00\n        /* \"#utility.yul\":1438:1444   */\n      dup2\n        /* \"#utility.yul\":1425:1445   */\n      calldataload\n        /* \"#utility.yul\":1416:1445   */\n      swap1\n      pop\n        /* \"#utility.yul\":1454:1487   */\n      tag_308\n        /* \"#utility.yul\":1481:1486   */\n      dup2\n        /* \"#utility.yul\":1454:1487   */\n      tag_309\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":1354:1493   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1499:1828   */\n    tag_68:\n        /* \"#utility.yul\":1558:1564   */\n      0x00\n        /* \"#utility.yul\":1607:1609   */\n      0x20\n        /* \"#utility.yul\":1595:1604   */\n      dup3\n        /* \"#utility.yul\":1586:1593   */\n      dup5\n        /* \"#utility.yul\":1582:1605   */\n      sub\n        /* \"#utility.yul\":1578:1610   */\n      slt\n        /* \"#utility.yul\":1575:1694   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":1613:1692   */\n      tag_312\n      tag_313\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":1575:1694   */\n    tag_311:\n        /* \"#utility.yul\":1733:1734   */\n      0x00\n        /* \"#utility.yul\":1758:1811   */\n      tag_314\n        /* \"#utility.yul\":1803:1810   */\n      dup5\n        /* \"#utility.yul\":1794:1800   */\n      dup3\n        /* \"#utility.yul\":1783:1792   */\n      dup6\n        /* \"#utility.yul\":1779:1801   */\n      add\n        /* \"#utility.yul\":1758:1811   */\n      tag_285\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":1748:1811   */\n      swap2\n      pop\n        /* \"#utility.yul\":1704:1821   */\n      pop\n        /* \"#utility.yul\":1499:1828   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1834:2308   */\n    tag_91:\n        /* \"#utility.yul\":1902:1908   */\n      0x00\n        /* \"#utility.yul\":1910:1916   */\n      dup1\n        /* \"#utility.yul\":1959:1961   */\n      0x40\n        /* \"#utility.yul\":1947:1956   */\n      dup4\n        /* \"#utility.yul\":1938:1945   */\n      dup6\n        /* \"#utility.yul\":1934:1957   */\n      sub\n        /* \"#utility.yul\":1930:1962   */\n      slt\n        /* \"#utility.yul\":1927:2046   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":1965:2044   */\n      tag_317\n      tag_313\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":1927:2046   */\n    tag_316:\n        /* \"#utility.yul\":2085:2086   */\n      0x00\n        /* \"#utility.yul\":2110:2163   */\n      tag_318\n        /* \"#utility.yul\":2155:2162   */\n      dup6\n        /* \"#utility.yul\":2146:2152   */\n      dup3\n        /* \"#utility.yul\":2135:2144   */\n      dup7\n        /* \"#utility.yul\":2131:2153   */\n      add\n        /* \"#utility.yul\":2110:2163   */\n      tag_285\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":2100:2163   */\n      swap3\n      pop\n        /* \"#utility.yul\":2056:2173   */\n      pop\n        /* \"#utility.yul\":2212:2214   */\n      0x20\n        /* \"#utility.yul\":2238:2291   */\n      tag_319\n        /* \"#utility.yul\":2283:2290   */\n      dup6\n        /* \"#utility.yul\":2274:2280   */\n      dup3\n        /* \"#utility.yul\":2263:2272   */\n      dup7\n        /* \"#utility.yul\":2259:2281   */\n      add\n        /* \"#utility.yul\":2238:2291   */\n      tag_285\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":2228:2291   */\n      swap2\n      pop\n        /* \"#utility.yul\":2183:2301   */\n      pop\n        /* \"#utility.yul\":1834:2308   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2314:2933   */\n    tag_49:\n        /* \"#utility.yul\":2391:2397   */\n      0x00\n        /* \"#utility.yul\":2399:2405   */\n      dup1\n        /* \"#utility.yul\":2407:2413   */\n      0x00\n        /* \"#utility.yul\":2456:2458   */\n      0x60\n        /* \"#utility.yul\":2444:2453   */\n      dup5\n        /* \"#utility.yul\":2435:2442   */\n      dup7\n        /* \"#utility.yul\":2431:2454   */\n      sub\n        /* \"#utility.yul\":2427:2459   */\n      slt\n        /* \"#utility.yul\":2424:2543   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":2462:2541   */\n      tag_322\n      tag_313\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":2424:2543   */\n    tag_321:\n        /* \"#utility.yul\":2582:2583   */\n      0x00\n        /* \"#utility.yul\":2607:2660   */\n      tag_323\n        /* \"#utility.yul\":2652:2659   */\n      dup7\n        /* \"#utility.yul\":2643:2649   */\n      dup3\n        /* \"#utility.yul\":2632:2641   */\n      dup8\n        /* \"#utility.yul\":2628:2650   */\n      add\n        /* \"#utility.yul\":2607:2660   */\n      tag_285\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":2597:2660   */\n      swap4\n      pop\n        /* \"#utility.yul\":2553:2670   */\n      pop\n        /* \"#utility.yul\":2709:2711   */\n      0x20\n        /* \"#utility.yul\":2735:2788   */\n      tag_324\n        /* \"#utility.yul\":2780:2787   */\n      dup7\n        /* \"#utility.yul\":2771:2777   */\n      dup3\n        /* \"#utility.yul\":2760:2769   */\n      dup8\n        /* \"#utility.yul\":2756:2778   */\n      add\n        /* \"#utility.yul\":2735:2788   */\n      tag_285\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":2725:2788   */\n      swap3\n      pop\n        /* \"#utility.yul\":2680:2798   */\n      pop\n        /* \"#utility.yul\":2837:2839   */\n      0x40\n        /* \"#utility.yul\":2863:2916   */\n      tag_325\n        /* \"#utility.yul\":2908:2915   */\n      dup7\n        /* \"#utility.yul\":2899:2905   */\n      dup3\n        /* \"#utility.yul\":2888:2897   */\n      dup8\n        /* \"#utility.yul\":2884:2906   */\n      add\n        /* \"#utility.yul\":2863:2916   */\n      tag_306\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":2853:2916   */\n      swap2\n      pop\n        /* \"#utility.yul\":2808:2926   */\n      pop\n        /* \"#utility.yul\":2314:2933   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2939:3882   */\n    tag_80:\n        /* \"#utility.yul\":3034:3040   */\n      0x00\n        /* \"#utility.yul\":3042:3048   */\n      dup1\n        /* \"#utility.yul\":3050:3056   */\n      0x00\n        /* \"#utility.yul\":3058:3064   */\n      dup1\n        /* \"#utility.yul\":3107:3110   */\n      0x80\n        /* \"#utility.yul\":3095:3104   */\n      dup6\n        /* \"#utility.yul\":3086:3093   */\n      dup8\n        /* \"#utility.yul\":3082:3105   */\n      sub\n        /* \"#utility.yul\":3078:3111   */\n      slt\n        /* \"#utility.yul\":3075:3195   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":3114:3193   */\n      tag_328\n      tag_313\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":3075:3195   */\n    tag_327:\n        /* \"#utility.yul\":3234:3235   */\n      0x00\n        /* \"#utility.yul\":3259:3312   */\n      tag_329\n        /* \"#utility.yul\":3304:3311   */\n      dup8\n        /* \"#utility.yul\":3295:3301   */\n      dup3\n        /* \"#utility.yul\":3284:3293   */\n      dup9\n        /* \"#utility.yul\":3280:3302   */\n      add\n        /* \"#utility.yul\":3259:3312   */\n      tag_285\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":3249:3312   */\n      swap5\n      pop\n        /* \"#utility.yul\":3205:3322   */\n      pop\n        /* \"#utility.yul\":3361:3363   */\n      0x20\n        /* \"#utility.yul\":3387:3440   */\n      tag_330\n        /* \"#utility.yul\":3432:3439   */\n      dup8\n        /* \"#utility.yul\":3423:3429   */\n      dup3\n        /* \"#utility.yul\":3412:3421   */\n      dup9\n        /* \"#utility.yul\":3408:3430   */\n      add\n        /* \"#utility.yul\":3387:3440   */\n      tag_285\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":3377:3440   */\n      swap4\n      pop\n        /* \"#utility.yul\":3332:3450   */\n      pop\n        /* \"#utility.yul\":3489:3491   */\n      0x40\n        /* \"#utility.yul\":3515:3568   */\n      tag_331\n        /* \"#utility.yul\":3560:3567   */\n      dup8\n        /* \"#utility.yul\":3551:3557   */\n      dup3\n        /* \"#utility.yul\":3540:3549   */\n      dup9\n        /* \"#utility.yul\":3536:3558   */\n      add\n        /* \"#utility.yul\":3515:3568   */\n      tag_306\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":3505:3568   */\n      swap3\n      pop\n        /* \"#utility.yul\":3460:3578   */\n      pop\n        /* \"#utility.yul\":3645:3647   */\n      0x60\n        /* \"#utility.yul\":3634:3643   */\n      dup6\n        /* \"#utility.yul\":3630:3648   */\n      add\n        /* \"#utility.yul\":3617:3649   */\n      calldataload\n        /* \"#utility.yul\":3676:3694   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3668:3674   */\n      dup2\n        /* \"#utility.yul\":3665:3695   */\n      gt\n        /* \"#utility.yul\":3662:3779   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":3698:3777   */\n      tag_333\n      tag_334\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":3662:3779   */\n    tag_332:\n        /* \"#utility.yul\":3803:3865   */\n      tag_335\n        /* \"#utility.yul\":3857:3864   */\n      dup8\n        /* \"#utility.yul\":3848:3854   */\n      dup3\n        /* \"#utility.yul\":3837:3846   */\n      dup9\n        /* \"#utility.yul\":3833:3855   */\n      add\n        /* \"#utility.yul\":3803:3865   */\n      tag_300\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":3793:3865   */\n      swap2\n      pop\n        /* \"#utility.yul\":3588:3875   */\n      pop\n        /* \"#utility.yul\":2939:3882   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3888:4356   */\n    tag_76:\n        /* \"#utility.yul\":3953:3959   */\n      0x00\n        /* \"#utility.yul\":3961:3967   */\n      dup1\n        /* \"#utility.yul\":4010:4012   */\n      0x40\n        /* \"#utility.yul\":3998:4007   */\n      dup4\n        /* \"#utility.yul\":3989:3996   */\n      dup6\n        /* \"#utility.yul\":3985:4008   */\n      sub\n        /* \"#utility.yul\":3981:4013   */\n      slt\n        /* \"#utility.yul\":3978:4097   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":4016:4095   */\n      tag_338\n      tag_313\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":3978:4097   */\n    tag_337:\n        /* \"#utility.yul\":4136:4137   */\n      0x00\n        /* \"#utility.yul\":4161:4214   */\n      tag_339\n        /* \"#utility.yul\":4206:4213   */\n      dup6\n        /* \"#utility.yul\":4197:4203   */\n      dup3\n        /* \"#utility.yul\":4186:4195   */\n      dup7\n        /* \"#utility.yul\":4182:4204   */\n      add\n        /* \"#utility.yul\":4161:4214   */\n      tag_285\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":4151:4214   */\n      swap3\n      pop\n        /* \"#utility.yul\":4107:4224   */\n      pop\n        /* \"#utility.yul\":4263:4265   */\n      0x20\n        /* \"#utility.yul\":4289:4339   */\n      tag_340\n        /* \"#utility.yul\":4331:4338   */\n      dup6\n        /* \"#utility.yul\":4322:4328   */\n      dup3\n        /* \"#utility.yul\":4311:4320   */\n      dup7\n        /* \"#utility.yul\":4307:4329   */\n      add\n        /* \"#utility.yul\":4289:4339   */\n      tag_289\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":4279:4339   */\n      swap2\n      pop\n        /* \"#utility.yul\":4234:4349   */\n      pop\n        /* \"#utility.yul\":3888:4356   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4362:4836   */\n    tag_41:\n        /* \"#utility.yul\":4430:4436   */\n      0x00\n        /* \"#utility.yul\":4438:4444   */\n      dup1\n        /* \"#utility.yul\":4487:4489   */\n      0x40\n        /* \"#utility.yul\":4475:4484   */\n      dup4\n        /* \"#utility.yul\":4466:4473   */\n      dup6\n        /* \"#utility.yul\":4462:4485   */\n      sub\n        /* \"#utility.yul\":4458:4490   */\n      slt\n        /* \"#utility.yul\":4455:4574   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":4493:4572   */\n      tag_343\n      tag_313\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":4455:4574   */\n    tag_342:\n        /* \"#utility.yul\":4613:4614   */\n      0x00\n        /* \"#utility.yul\":4638:4691   */\n      tag_344\n        /* \"#utility.yul\":4683:4690   */\n      dup6\n        /* \"#utility.yul\":4674:4680   */\n      dup3\n        /* \"#utility.yul\":4663:4672   */\n      dup7\n        /* \"#utility.yul\":4659:4681   */\n      add\n        /* \"#utility.yul\":4638:4691   */\n      tag_285\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":4628:4691   */\n      swap3\n      pop\n        /* \"#utility.yul\":4584:4701   */\n      pop\n        /* \"#utility.yul\":4740:4742   */\n      0x20\n        /* \"#utility.yul\":4766:4819   */\n      tag_345\n        /* \"#utility.yul\":4811:4818   */\n      dup6\n        /* \"#utility.yul\":4802:4808   */\n      dup3\n        /* \"#utility.yul\":4791:4800   */\n      dup7\n        /* \"#utility.yul\":4787:4809   */\n      add\n        /* \"#utility.yul\":4766:4819   */\n      tag_306\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":4756:4819   */\n      swap2\n      pop\n        /* \"#utility.yul\":4711:4829   */\n      pop\n        /* \"#utility.yul\":4362:4836   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4842:5169   */\n    tag_25:\n        /* \"#utility.yul\":4900:4906   */\n      0x00\n        /* \"#utility.yul\":4949:4951   */\n      0x20\n        /* \"#utility.yul\":4937:4946   */\n      dup3\n        /* \"#utility.yul\":4928:4935   */\n      dup5\n        /* \"#utility.yul\":4924:4947   */\n      sub\n        /* \"#utility.yul\":4920:4952   */\n      slt\n        /* \"#utility.yul\":4917:5036   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":4955:5034   */\n      tag_348\n      tag_313\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":4917:5036   */\n    tag_347:\n        /* \"#utility.yul\":5075:5076   */\n      0x00\n        /* \"#utility.yul\":5100:5152   */\n      tag_349\n        /* \"#utility.yul\":5144:5151   */\n      dup5\n        /* \"#utility.yul\":5135:5141   */\n      dup3\n        /* \"#utility.yul\":5124:5133   */\n      dup6\n        /* \"#utility.yul\":5120:5142   */\n      add\n        /* \"#utility.yul\":5100:5152   */\n      tag_293\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":5090:5152   */\n      swap2\n      pop\n        /* \"#utility.yul\":5046:5162   */\n      pop\n        /* \"#utility.yul\":4842:5169   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5175:5524   */\n    tag_257:\n        /* \"#utility.yul\":5244:5250   */\n      0x00\n        /* \"#utility.yul\":5293:5295   */\n      0x20\n        /* \"#utility.yul\":5281:5290   */\n      dup3\n        /* \"#utility.yul\":5272:5279   */\n      dup5\n        /* \"#utility.yul\":5268:5291   */\n      sub\n        /* \"#utility.yul\":5264:5296   */\n      slt\n        /* \"#utility.yul\":5261:5380   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":5299:5378   */\n      tag_352\n      tag_313\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":5261:5380   */\n    tag_351:\n        /* \"#utility.yul\":5419:5420   */\n      0x00\n        /* \"#utility.yul\":5444:5507   */\n      tag_353\n        /* \"#utility.yul\":5499:5506   */\n      dup5\n        /* \"#utility.yul\":5490:5496   */\n      dup3\n        /* \"#utility.yul\":5479:5488   */\n      dup6\n        /* \"#utility.yul\":5475:5497   */\n      add\n        /* \"#utility.yul\":5444:5507   */\n      tag_297\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":5434:5507   */\n      swap2\n      pop\n        /* \"#utility.yul\":5390:5517   */\n      pop\n        /* \"#utility.yul\":5175:5524   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5530:5859   */\n    tag_35:\n        /* \"#utility.yul\":5589:5595   */\n      0x00\n        /* \"#utility.yul\":5638:5640   */\n      0x20\n        /* \"#utility.yul\":5626:5635   */\n      dup3\n        /* \"#utility.yul\":5617:5624   */\n      dup5\n        /* \"#utility.yul\":5613:5636   */\n      sub\n        /* \"#utility.yul\":5609:5641   */\n      slt\n        /* \"#utility.yul\":5606:5725   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":5644:5723   */\n      tag_356\n      tag_313\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":5606:5725   */\n    tag_355:\n        /* \"#utility.yul\":5764:5765   */\n      0x00\n        /* \"#utility.yul\":5789:5842   */\n      tag_357\n        /* \"#utility.yul\":5834:5841   */\n      dup5\n        /* \"#utility.yul\":5825:5831   */\n      dup3\n        /* \"#utility.yul\":5814:5823   */\n      dup6\n        /* \"#utility.yul\":5810:5832   */\n      add\n        /* \"#utility.yul\":5789:5842   */\n      tag_306\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":5779:5842   */\n      swap2\n      pop\n        /* \"#utility.yul\":5735:5852   */\n      pop\n        /* \"#utility.yul\":5530:5859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5865:5983   */\n    tag_358:\n        /* \"#utility.yul\":5952:5976   */\n      tag_360\n        /* \"#utility.yul\":5970:5975   */\n      dup2\n        /* \"#utility.yul\":5952:5976   */\n      tag_361\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":5947:5950   */\n      dup3\n        /* \"#utility.yul\":5940:5977   */\n      mstore\n        /* \"#utility.yul\":5865:5983   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5989:6098   */\n    tag_362:\n        /* \"#utility.yul\":6070:6091   */\n      tag_364\n        /* \"#utility.yul\":6085:6090   */\n      dup2\n        /* \"#utility.yul\":6070:6091   */\n      tag_365\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":6065:6068   */\n      dup3\n        /* \"#utility.yul\":6058:6092   */\n      mstore\n        /* \"#utility.yul\":5989:6098   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6104:6464   */\n    tag_366:\n        /* \"#utility.yul\":6190:6193   */\n      0x00\n        /* \"#utility.yul\":6218:6256   */\n      tag_368\n        /* \"#utility.yul\":6250:6255   */\n      dup3\n        /* \"#utility.yul\":6218:6256   */\n      tag_369\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":6272:6342   */\n      tag_370\n        /* \"#utility.yul\":6335:6341   */\n      dup2\n        /* \"#utility.yul\":6330:6333   */\n      dup6\n        /* \"#utility.yul\":6272:6342   */\n      tag_371\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":6265:6342   */\n      swap4\n      pop\n        /* \"#utility.yul\":6351:6403   */\n      tag_372\n        /* \"#utility.yul\":6396:6402   */\n      dup2\n        /* \"#utility.yul\":6391:6394   */\n      dup6\n        /* \"#utility.yul\":6384:6388   */\n      0x20\n        /* \"#utility.yul\":6377:6382   */\n      dup7\n        /* \"#utility.yul\":6373:6389   */\n      add\n        /* \"#utility.yul\":6351:6403   */\n      tag_373\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":6428:6457   */\n      tag_374\n        /* \"#utility.yul\":6450:6456   */\n      dup2\n        /* \"#utility.yul\":6428:6457   */\n      tag_375\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":6423:6426   */\n      dup5\n        /* \"#utility.yul\":6419:6458   */\n      add\n        /* \"#utility.yul\":6412:6458   */\n      swap2\n      pop\n        /* \"#utility.yul\":6194:6464   */\n      pop\n        /* \"#utility.yul\":6104:6464   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6470:6834   */\n    tag_376:\n        /* \"#utility.yul\":6558:6561   */\n      0x00\n        /* \"#utility.yul\":6586:6625   */\n      tag_378\n        /* \"#utility.yul\":6619:6624   */\n      dup3\n        /* \"#utility.yul\":6586:6625   */\n      tag_379\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":6641:6712   */\n      tag_380\n        /* \"#utility.yul\":6705:6711   */\n      dup2\n        /* \"#utility.yul\":6700:6703   */\n      dup6\n        /* \"#utility.yul\":6641:6712   */\n      tag_381\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":6634:6712   */\n      swap4\n      pop\n        /* \"#utility.yul\":6721:6773   */\n      tag_382\n        /* \"#utility.yul\":6766:6772   */\n      dup2\n        /* \"#utility.yul\":6761:6764   */\n      dup6\n        /* \"#utility.yul\":6754:6758   */\n      0x20\n        /* \"#utility.yul\":6747:6752   */\n      dup7\n        /* \"#utility.yul\":6743:6759   */\n      add\n        /* \"#utility.yul\":6721:6773   */\n      tag_373\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":6798:6827   */\n      tag_383\n        /* \"#utility.yul\":6820:6826   */\n      dup2\n        /* \"#utility.yul\":6798:6827   */\n      tag_375\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":6793:6796   */\n      dup5\n        /* \"#utility.yul\":6789:6828   */\n      add\n        /* \"#utility.yul\":6782:6828   */\n      swap2\n      pop\n        /* \"#utility.yul\":6562:6834   */\n      pop\n        /* \"#utility.yul\":6470:6834   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6840:7206   */\n    tag_384:\n        /* \"#utility.yul\":6982:6985   */\n      0x00\n        /* \"#utility.yul\":7003:7070   */\n      tag_386\n        /* \"#utility.yul\":7067:7069   */\n      0x22\n        /* \"#utility.yul\":7062:7065   */\n      dup4\n        /* \"#utility.yul\":7003:7070   */\n      tag_381\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":6996:7070   */\n      swap2\n      pop\n        /* \"#utility.yul\":7079:7172   */\n      tag_387\n        /* \"#utility.yul\":7168:7171   */\n      dup3\n        /* \"#utility.yul\":7079:7172   */\n      tag_388\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":7197:7199   */\n      0x40\n        /* \"#utility.yul\":7192:7195   */\n      dup3\n        /* \"#utility.yul\":7188:7200   */\n      add\n        /* \"#utility.yul\":7181:7200   */\n      swap1\n      pop\n        /* \"#utility.yul\":6840:7206   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7212:7578   */\n    tag_389:\n        /* \"#utility.yul\":7354:7357   */\n      0x00\n        /* \"#utility.yul\":7375:7442   */\n      tag_391\n        /* \"#utility.yul\":7439:7441   */\n      0x2a\n        /* \"#utility.yul\":7434:7437   */\n      dup4\n        /* \"#utility.yul\":7375:7442   */\n      tag_381\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":7368:7442   */\n      swap2\n      pop\n        /* \"#utility.yul\":7451:7544   */\n      tag_392\n        /* \"#utility.yul\":7540:7543   */\n      dup3\n        /* \"#utility.yul\":7451:7544   */\n      tag_393\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":7569:7571   */\n      0x40\n        /* \"#utility.yul\":7564:7567   */\n      dup3\n        /* \"#utility.yul\":7560:7572   */\n      add\n        /* \"#utility.yul\":7553:7572   */\n      swap1\n      pop\n        /* \"#utility.yul\":7212:7578   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7584:7950   */\n    tag_394:\n        /* \"#utility.yul\":7726:7729   */\n      0x00\n        /* \"#utility.yul\":7747:7814   */\n      tag_396\n        /* \"#utility.yul\":7811:7813   */\n      0x23\n        /* \"#utility.yul\":7806:7809   */\n      dup4\n        /* \"#utility.yul\":7747:7814   */\n      tag_381\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":7740:7814   */\n      swap2\n      pop\n        /* \"#utility.yul\":7823:7916   */\n      tag_397\n        /* \"#utility.yul\":7912:7915   */\n      dup3\n        /* \"#utility.yul\":7823:7916   */\n      tag_398\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":7941:7943   */\n      0x40\n        /* \"#utility.yul\":7936:7939   */\n      dup3\n        /* \"#utility.yul\":7932:7944   */\n      add\n        /* \"#utility.yul\":7925:7944   */\n      swap1\n      pop\n        /* \"#utility.yul\":7584:7950   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7956:8322   */\n    tag_399:\n        /* \"#utility.yul\":8098:8101   */\n      0x00\n        /* \"#utility.yul\":8119:8186   */\n      tag_401\n        /* \"#utility.yul\":8183:8185   */\n      0x25\n        /* \"#utility.yul\":8178:8181   */\n      dup4\n        /* \"#utility.yul\":8119:8186   */\n      tag_381\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":8112:8186   */\n      swap2\n      pop\n        /* \"#utility.yul\":8195:8288   */\n      tag_402\n        /* \"#utility.yul\":8284:8287   */\n      dup3\n        /* \"#utility.yul\":8195:8288   */\n      tag_403\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":8313:8315   */\n      0x40\n        /* \"#utility.yul\":8308:8311   */\n      dup3\n        /* \"#utility.yul\":8304:8316   */\n      add\n        /* \"#utility.yul\":8297:8316   */\n      swap1\n      pop\n        /* \"#utility.yul\":7956:8322   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8328:8694   */\n    tag_404:\n        /* \"#utility.yul\":8470:8473   */\n      0x00\n        /* \"#utility.yul\":8491:8558   */\n      tag_406\n        /* \"#utility.yul\":8555:8557   */\n      0x39\n        /* \"#utility.yul\":8550:8553   */\n      dup4\n        /* \"#utility.yul\":8491:8558   */\n      tag_381\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":8484:8558   */\n      swap2\n      pop\n        /* \"#utility.yul\":8567:8660   */\n      tag_407\n        /* \"#utility.yul\":8656:8659   */\n      dup3\n        /* \"#utility.yul\":8567:8660   */\n      tag_408\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":8685:8687   */\n      0x40\n        /* \"#utility.yul\":8680:8683   */\n      dup3\n        /* \"#utility.yul\":8676:8688   */\n      add\n        /* \"#utility.yul\":8669:8688   */\n      swap1\n      pop\n        /* \"#utility.yul\":8328:8694   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8700:9066   */\n    tag_409:\n        /* \"#utility.yul\":8842:8845   */\n      0x00\n        /* \"#utility.yul\":8863:8930   */\n      tag_411\n        /* \"#utility.yul\":8927:8929   */\n      0x2b\n        /* \"#utility.yul\":8922:8925   */\n      dup4\n        /* \"#utility.yul\":8863:8930   */\n      tag_381\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":8856:8930   */\n      swap2\n      pop\n        /* \"#utility.yul\":8939:9032   */\n      tag_412\n        /* \"#utility.yul\":9028:9031   */\n      dup3\n        /* \"#utility.yul\":8939:9032   */\n      tag_413\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":9057:9059   */\n      0x40\n        /* \"#utility.yul\":9052:9055   */\n      dup3\n        /* \"#utility.yul\":9048:9060   */\n      add\n        /* \"#utility.yul\":9041:9060   */\n      swap1\n      pop\n        /* \"#utility.yul\":8700:9066   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9072:9438   */\n    tag_414:\n        /* \"#utility.yul\":9214:9217   */\n      0x00\n        /* \"#utility.yul\":9235:9302   */\n      tag_416\n        /* \"#utility.yul\":9299:9301   */\n      0x26\n        /* \"#utility.yul\":9294:9297   */\n      dup4\n        /* \"#utility.yul\":9235:9302   */\n      tag_381\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":9228:9302   */\n      swap2\n      pop\n        /* \"#utility.yul\":9311:9404   */\n      tag_417\n        /* \"#utility.yul\":9400:9403   */\n      dup3\n        /* \"#utility.yul\":9311:9404   */\n      tag_418\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":9429:9431   */\n      0x40\n        /* \"#utility.yul\":9424:9427   */\n      dup3\n        /* \"#utility.yul\":9420:9432   */\n      add\n        /* \"#utility.yul\":9413:9432   */\n      swap1\n      pop\n        /* \"#utility.yul\":9072:9438   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9444:9810   */\n    tag_419:\n        /* \"#utility.yul\":9586:9589   */\n      0x00\n        /* \"#utility.yul\":9607:9674   */\n      tag_421\n        /* \"#utility.yul\":9671:9673   */\n      0x2f\n        /* \"#utility.yul\":9666:9669   */\n      dup4\n        /* \"#utility.yul\":9607:9674   */\n      tag_381\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":9600:9674   */\n      swap2\n      pop\n        /* \"#utility.yul\":9683:9776   */\n      tag_422\n        /* \"#utility.yul\":9772:9775   */\n      dup3\n        /* \"#utility.yul\":9683:9776   */\n      tag_423\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":9801:9803   */\n      0x40\n        /* \"#utility.yul\":9796:9799   */\n      dup3\n        /* \"#utility.yul\":9792:9804   */\n      add\n        /* \"#utility.yul\":9785:9804   */\n      swap1\n      pop\n        /* \"#utility.yul\":9444:9810   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9816:10182   */\n    tag_424:\n        /* \"#utility.yul\":9958:9961   */\n      0x00\n        /* \"#utility.yul\":9979:10046   */\n      tag_426\n        /* \"#utility.yul\":10043:10045   */\n      0x1a\n        /* \"#utility.yul\":10038:10041   */\n      dup4\n        /* \"#utility.yul\":9979:10046   */\n      tag_381\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":9972:10046   */\n      swap2\n      pop\n        /* \"#utility.yul\":10055:10148   */\n      tag_427\n        /* \"#utility.yul\":10144:10147   */\n      dup3\n        /* \"#utility.yul\":10055:10148   */\n      tag_428\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":10173:10175   */\n      0x20\n        /* \"#utility.yul\":10168:10171   */\n      dup3\n        /* \"#utility.yul\":10164:10176   */\n      add\n        /* \"#utility.yul\":10157:10176   */\n      swap1\n      pop\n        /* \"#utility.yul\":9816:10182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10188:10554   */\n    tag_429:\n        /* \"#utility.yul\":10330:10333   */\n      0x00\n        /* \"#utility.yul\":10351:10418   */\n      tag_431\n        /* \"#utility.yul\":10415:10417   */\n      0x32\n        /* \"#utility.yul\":10410:10413   */\n      dup4\n        /* \"#utility.yul\":10351:10418   */\n      tag_381\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":10344:10418   */\n      swap2\n      pop\n        /* \"#utility.yul\":10427:10520   */\n      tag_432\n        /* \"#utility.yul\":10516:10519   */\n      dup3\n        /* \"#utility.yul\":10427:10520   */\n      tag_433\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":10545:10547   */\n      0x40\n        /* \"#utility.yul\":10540:10543   */\n      dup3\n        /* \"#utility.yul\":10536:10548   */\n      add\n        /* \"#utility.yul\":10529:10548   */\n      swap1\n      pop\n        /* \"#utility.yul\":10188:10554   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10560:10926   */\n    tag_434:\n        /* \"#utility.yul\":10702:10705   */\n      0x00\n        /* \"#utility.yul\":10723:10790   */\n      tag_436\n        /* \"#utility.yul\":10787:10789   */\n      0x22\n        /* \"#utility.yul\":10782:10785   */\n      dup4\n        /* \"#utility.yul\":10723:10790   */\n      tag_381\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":10716:10790   */\n      swap2\n      pop\n        /* \"#utility.yul\":10799:10892   */\n      tag_437\n        /* \"#utility.yul\":10888:10891   */\n      dup3\n        /* \"#utility.yul\":10799:10892   */\n      tag_438\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":10917:10919   */\n      0x40\n        /* \"#utility.yul\":10912:10915   */\n      dup3\n        /* \"#utility.yul\":10908:10920   */\n      add\n        /* \"#utility.yul\":10901:10920   */\n      swap1\n      pop\n        /* \"#utility.yul\":10560:10926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10932:11298   */\n    tag_439:\n        /* \"#utility.yul\":11074:11077   */\n      0x00\n        /* \"#utility.yul\":11095:11162   */\n      tag_441\n        /* \"#utility.yul\":11159:11161   */\n      0x33\n        /* \"#utility.yul\":11154:11157   */\n      dup4\n        /* \"#utility.yul\":11095:11162   */\n      tag_381\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":11088:11162   */\n      swap2\n      pop\n        /* \"#utility.yul\":11171:11264   */\n      tag_442\n        /* \"#utility.yul\":11260:11263   */\n      dup3\n        /* \"#utility.yul\":11171:11264   */\n      tag_443\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":11289:11291   */\n      0x40\n        /* \"#utility.yul\":11284:11287   */\n      dup3\n        /* \"#utility.yul\":11280:11292   */\n      add\n        /* \"#utility.yul\":11273:11292   */\n      swap1\n      pop\n        /* \"#utility.yul\":10932:11298   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11304:11670   */\n    tag_444:\n        /* \"#utility.yul\":11446:11449   */\n      0x00\n        /* \"#utility.yul\":11467:11534   */\n      tag_446\n        /* \"#utility.yul\":11531:11533   */\n      0x2e\n        /* \"#utility.yul\":11526:11529   */\n      dup4\n        /* \"#utility.yul\":11467:11534   */\n      tag_381\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":11460:11534   */\n      swap2\n      pop\n        /* \"#utility.yul\":11543:11636   */\n      tag_447\n        /* \"#utility.yul\":11632:11635   */\n      dup3\n        /* \"#utility.yul\":11543:11636   */\n      tag_448\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":11661:11663   */\n      0x40\n        /* \"#utility.yul\":11656:11659   */\n      dup3\n        /* \"#utility.yul\":11652:11664   */\n      add\n        /* \"#utility.yul\":11645:11664   */\n      swap1\n      pop\n        /* \"#utility.yul\":11304:11670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11676:12042   */\n    tag_449:\n        /* \"#utility.yul\":11818:11821   */\n      0x00\n        /* \"#utility.yul\":11839:11906   */\n      tag_451\n        /* \"#utility.yul\":11903:11905   */\n      0x2f\n        /* \"#utility.yul\":11898:11901   */\n      dup4\n        /* \"#utility.yul\":11839:11906   */\n      tag_381\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":11832:11906   */\n      swap2\n      pop\n        /* \"#utility.yul\":11915:12008   */\n      tag_452\n        /* \"#utility.yul\":12004:12007   */\n      dup3\n        /* \"#utility.yul\":11915:12008   */\n      tag_453\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":12033:12035   */\n      0x40\n        /* \"#utility.yul\":12028:12031   */\n      dup3\n        /* \"#utility.yul\":12024:12036   */\n      add\n        /* \"#utility.yul\":12017:12036   */\n      swap1\n      pop\n        /* \"#utility.yul\":11676:12042   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12048:12414   */\n    tag_454:\n        /* \"#utility.yul\":12190:12193   */\n      0x00\n        /* \"#utility.yul\":12211:12278   */\n      tag_456\n        /* \"#utility.yul\":12275:12277   */\n      0x2d\n        /* \"#utility.yul\":12270:12273   */\n      dup4\n        /* \"#utility.yul\":12211:12278   */\n      tag_381\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":12204:12278   */\n      swap2\n      pop\n        /* \"#utility.yul\":12287:12380   */\n      tag_457\n        /* \"#utility.yul\":12376:12379   */\n      dup3\n        /* \"#utility.yul\":12287:12380   */\n      tag_458\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":12405:12407   */\n      0x40\n        /* \"#utility.yul\":12400:12403   */\n      dup3\n        /* \"#utility.yul\":12396:12408   */\n      add\n        /* \"#utility.yul\":12389:12408   */\n      swap1\n      pop\n        /* \"#utility.yul\":12048:12414   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12420:12538   */\n    tag_459:\n        /* \"#utility.yul\":12507:12531   */\n      tag_461\n        /* \"#utility.yul\":12525:12530   */\n      dup2\n        /* \"#utility.yul\":12507:12531   */\n      tag_462\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":12502:12505   */\n      dup3\n        /* \"#utility.yul\":12495:12532   */\n      mstore\n        /* \"#utility.yul\":12420:12538   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12544:12766   */\n    tag_38:\n        /* \"#utility.yul\":12637:12641   */\n      0x00\n        /* \"#utility.yul\":12675:12677   */\n      0x20\n        /* \"#utility.yul\":12664:12673   */\n      dup3\n        /* \"#utility.yul\":12660:12678   */\n      add\n        /* \"#utility.yul\":12652:12678   */\n      swap1\n      pop\n        /* \"#utility.yul\":12688:12759   */\n      tag_464\n        /* \"#utility.yul\":12756:12757   */\n      0x00\n        /* \"#utility.yul\":12745:12754   */\n      dup4\n        /* \"#utility.yul\":12741:12758   */\n      add\n        /* \"#utility.yul\":12732:12738   */\n      dup5\n        /* \"#utility.yul\":12688:12759   */\n      tag_358\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":12544:12766   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12772:13412   */\n    tag_253:\n        /* \"#utility.yul\":12967:12971   */\n      0x00\n        /* \"#utility.yul\":13005:13008   */\n      0x80\n        /* \"#utility.yul\":12994:13003   */\n      dup3\n        /* \"#utility.yul\":12990:13009   */\n      add\n        /* \"#utility.yul\":12982:13009   */\n      swap1\n      pop\n        /* \"#utility.yul\":13019:13090   */\n      tag_466\n        /* \"#utility.yul\":13087:13088   */\n      0x00\n        /* \"#utility.yul\":13076:13085   */\n      dup4\n        /* \"#utility.yul\":13072:13089   */\n      add\n        /* \"#utility.yul\":13063:13069   */\n      dup8\n        /* \"#utility.yul\":13019:13090   */\n      tag_358\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":13100:13172   */\n      tag_467\n        /* \"#utility.yul\":13168:13170   */\n      0x20\n        /* \"#utility.yul\":13157:13166   */\n      dup4\n        /* \"#utility.yul\":13153:13171   */\n      add\n        /* \"#utility.yul\":13144:13150   */\n      dup7\n        /* \"#utility.yul\":13100:13172   */\n      tag_358\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":13182:13254   */\n      tag_468\n        /* \"#utility.yul\":13250:13252   */\n      0x40\n        /* \"#utility.yul\":13239:13248   */\n      dup4\n        /* \"#utility.yul\":13235:13253   */\n      add\n        /* \"#utility.yul\":13226:13232   */\n      dup6\n        /* \"#utility.yul\":13182:13254   */\n      tag_459\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":13301:13310   */\n      dup2\n        /* \"#utility.yul\":13295:13299   */\n      dup2\n        /* \"#utility.yul\":13291:13311   */\n      sub\n        /* \"#utility.yul\":13286:13288   */\n      0x60\n        /* \"#utility.yul\":13275:13284   */\n      dup4\n        /* \"#utility.yul\":13271:13289   */\n      add\n        /* \"#utility.yul\":13264:13312   */\n      mstore\n        /* \"#utility.yul\":13329:13405   */\n      tag_469\n        /* \"#utility.yul\":13400:13404   */\n      dup2\n        /* \"#utility.yul\":13391:13397   */\n      dup5\n        /* \"#utility.yul\":13329:13405   */\n      tag_366\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":13321:13405   */\n      swap1\n      pop\n        /* \"#utility.yul\":12772:13412   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13418:13628   */\n    tag_28:\n        /* \"#utility.yul\":13505:13509   */\n      0x00\n        /* \"#utility.yul\":13543:13545   */\n      0x20\n        /* \"#utility.yul\":13532:13541   */\n      dup3\n        /* \"#utility.yul\":13528:13546   */\n      add\n        /* \"#utility.yul\":13520:13546   */\n      swap1\n      pop\n        /* \"#utility.yul\":13556:13621   */\n      tag_471\n        /* \"#utility.yul\":13618:13619   */\n      0x00\n        /* \"#utility.yul\":13607:13616   */\n      dup4\n        /* \"#utility.yul\":13603:13620   */\n      add\n        /* \"#utility.yul\":13594:13600   */\n      dup5\n        /* \"#utility.yul\":13556:13621   */\n      tag_362\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":13418:13628   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13634:13947   */\n    tag_32:\n        /* \"#utility.yul\":13747:13751   */\n      0x00\n        /* \"#utility.yul\":13785:13787   */\n      0x20\n        /* \"#utility.yul\":13774:13783   */\n      dup3\n        /* \"#utility.yul\":13770:13788   */\n      add\n        /* \"#utility.yul\":13762:13788   */\n      swap1\n      pop\n        /* \"#utility.yul\":13834:13843   */\n      dup2\n        /* \"#utility.yul\":13828:13832   */\n      dup2\n        /* \"#utility.yul\":13824:13844   */\n      sub\n        /* \"#utility.yul\":13820:13821   */\n      0x00\n        /* \"#utility.yul\":13809:13818   */\n      dup4\n        /* \"#utility.yul\":13805:13822   */\n      add\n        /* \"#utility.yul\":13798:13845   */\n      mstore\n        /* \"#utility.yul\":13862:13940   */\n      tag_473\n        /* \"#utility.yul\":13935:13939   */\n      dup2\n        /* \"#utility.yul\":13926:13932   */\n      dup5\n        /* \"#utility.yul\":13862:13940   */\n      tag_376\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":13854:13940   */\n      swap1\n      pop\n        /* \"#utility.yul\":13634:13947   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13953:14372   */\n    tag_136:\n        /* \"#utility.yul\":14119:14123   */\n      0x00\n        /* \"#utility.yul\":14157:14159   */\n      0x20\n        /* \"#utility.yul\":14146:14155   */\n      dup3\n        /* \"#utility.yul\":14142:14160   */\n      add\n        /* \"#utility.yul\":14134:14160   */\n      swap1\n      pop\n        /* \"#utility.yul\":14206:14215   */\n      dup2\n        /* \"#utility.yul\":14200:14204   */\n      dup2\n        /* \"#utility.yul\":14196:14216   */\n      sub\n        /* \"#utility.yul\":14192:14193   */\n      0x00\n        /* \"#utility.yul\":14181:14190   */\n      dup4\n        /* \"#utility.yul\":14177:14194   */\n      add\n        /* \"#utility.yul\":14170:14217   */\n      mstore\n        /* \"#utility.yul\":14234:14365   */\n      tag_475\n        /* \"#utility.yul\":14360:14364   */\n      dup2\n        /* \"#utility.yul\":14234:14365   */\n      tag_384\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":14226:14365   */\n      swap1\n      pop\n        /* \"#utility.yul\":13953:14372   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14378:14797   */\n    tag_234:\n        /* \"#utility.yul\":14544:14548   */\n      0x00\n        /* \"#utility.yul\":14582:14584   */\n      0x20\n        /* \"#utility.yul\":14571:14580   */\n      dup3\n        /* \"#utility.yul\":14567:14585   */\n      add\n        /* \"#utility.yul\":14559:14585   */\n      swap1\n      pop\n        /* \"#utility.yul\":14631:14640   */\n      dup2\n        /* \"#utility.yul\":14625:14629   */\n      dup2\n        /* \"#utility.yul\":14621:14641   */\n      sub\n        /* \"#utility.yul\":14617:14618   */\n      0x00\n        /* \"#utility.yul\":14606:14615   */\n      dup4\n        /* \"#utility.yul\":14602:14619   */\n      add\n        /* \"#utility.yul\":14595:14642   */\n      mstore\n        /* \"#utility.yul\":14659:14790   */\n      tag_477\n        /* \"#utility.yul\":14785:14789   */\n      dup2\n        /* \"#utility.yul\":14659:14790   */\n      tag_389\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":14651:14790   */\n      swap1\n      pop\n        /* \"#utility.yul\":14378:14797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14803:15222   */\n    tag_155:\n        /* \"#utility.yul\":14969:14973   */\n      0x00\n        /* \"#utility.yul\":15007:15009   */\n      0x20\n        /* \"#utility.yul\":14996:15005   */\n      dup3\n        /* \"#utility.yul\":14992:15010   */\n      add\n        /* \"#utility.yul\":14984:15010   */\n      swap1\n      pop\n        /* \"#utility.yul\":15056:15065   */\n      dup2\n        /* \"#utility.yul\":15050:15054   */\n      dup2\n        /* \"#utility.yul\":15046:15066   */\n      sub\n        /* \"#utility.yul\":15042:15043   */\n      0x00\n        /* \"#utility.yul\":15031:15040   */\n      dup4\n        /* \"#utility.yul\":15027:15044   */\n      add\n        /* \"#utility.yul\":15020:15067   */\n      mstore\n        /* \"#utility.yul\":15084:15215   */\n      tag_479\n        /* \"#utility.yul\":15210:15214   */\n      dup2\n        /* \"#utility.yul\":15084:15215   */\n      tag_394\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":15076:15215   */\n      swap1\n      pop\n        /* \"#utility.yul\":14803:15222   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15228:15647   */\n    tag_213:\n        /* \"#utility.yul\":15394:15398   */\n      0x00\n        /* \"#utility.yul\":15432:15434   */\n      0x20\n        /* \"#utility.yul\":15421:15430   */\n      dup3\n        /* \"#utility.yul\":15417:15435   */\n      add\n        /* \"#utility.yul\":15409:15435   */\n      swap1\n      pop\n        /* \"#utility.yul\":15481:15490   */\n      dup2\n        /* \"#utility.yul\":15475:15479   */\n      dup2\n        /* \"#utility.yul\":15471:15491   */\n      sub\n        /* \"#utility.yul\":15467:15468   */\n      0x00\n        /* \"#utility.yul\":15456:15465   */\n      dup4\n        /* \"#utility.yul\":15452:15469   */\n      add\n        /* \"#utility.yul\":15445:15492   */\n      mstore\n        /* \"#utility.yul\":15509:15640   */\n      tag_481\n        /* \"#utility.yul\":15635:15639   */\n      dup2\n        /* \"#utility.yul\":15509:15640   */\n      tag_399\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":15501:15640   */\n      swap1\n      pop\n        /* \"#utility.yul\":15228:15647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15653:16072   */\n    tag_125:\n        /* \"#utility.yul\":15819:15823   */\n      0x00\n        /* \"#utility.yul\":15857:15859   */\n      0x20\n        /* \"#utility.yul\":15846:15855   */\n      dup3\n        /* \"#utility.yul\":15842:15860   */\n      add\n        /* \"#utility.yul\":15834:15860   */\n      swap1\n      pop\n        /* \"#utility.yul\":15906:15915   */\n      dup2\n        /* \"#utility.yul\":15900:15904   */\n      dup2\n        /* \"#utility.yul\":15896:15916   */\n      sub\n        /* \"#utility.yul\":15892:15893   */\n      0x00\n        /* \"#utility.yul\":15881:15890   */\n      dup4\n        /* \"#utility.yul\":15877:15894   */\n      add\n        /* \"#utility.yul\":15870:15917   */\n      mstore\n        /* \"#utility.yul\":15934:16065   */\n      tag_483\n        /* \"#utility.yul\":16060:16064   */\n      dup2\n        /* \"#utility.yul\":15934:16065   */\n      tag_404\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":15926:16065   */\n      swap1\n      pop\n        /* \"#utility.yul\":15653:16072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16078:16497   */\n    tag_162:\n        /* \"#utility.yul\":16244:16248   */\n      0x00\n        /* \"#utility.yul\":16282:16284   */\n      0x20\n        /* \"#utility.yul\":16271:16280   */\n      dup3\n        /* \"#utility.yul\":16267:16285   */\n      add\n        /* \"#utility.yul\":16259:16285   */\n      swap1\n      pop\n        /* \"#utility.yul\":16331:16340   */\n      dup2\n        /* \"#utility.yul\":16325:16329   */\n      dup2\n        /* \"#utility.yul\":16321:16341   */\n      sub\n        /* \"#utility.yul\":16317:16318   */\n      0x00\n        /* \"#utility.yul\":16306:16315   */\n      dup4\n        /* \"#utility.yul\":16302:16319   */\n      add\n        /* \"#utility.yul\":16295:16342   */\n      mstore\n        /* \"#utility.yul\":16359:16490   */\n      tag_485\n        /* \"#utility.yul\":16485:16489   */\n      dup2\n        /* \"#utility.yul\":16359:16490   */\n      tag_409\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":16351:16490   */\n      swap1\n      pop\n        /* \"#utility.yul\":16078:16497   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16503:16922   */\n    tag_210:\n        /* \"#utility.yul\":16669:16673   */\n      0x00\n        /* \"#utility.yul\":16707:16709   */\n      0x20\n        /* \"#utility.yul\":16696:16705   */\n      dup3\n        /* \"#utility.yul\":16692:16710   */\n      add\n        /* \"#utility.yul\":16684:16710   */\n      swap1\n      pop\n        /* \"#utility.yul\":16756:16765   */\n      dup2\n        /* \"#utility.yul\":16750:16754   */\n      dup2\n        /* \"#utility.yul\":16746:16766   */\n      sub\n        /* \"#utility.yul\":16742:16743   */\n      0x00\n        /* \"#utility.yul\":16731:16740   */\n      dup4\n        /* \"#utility.yul\":16727:16744   */\n      add\n        /* \"#utility.yul\":16720:16767   */\n      mstore\n        /* \"#utility.yul\":16784:16915   */\n      tag_487\n        /* \"#utility.yul\":16910:16914   */\n      dup2\n        /* \"#utility.yul\":16784:16915   */\n      tag_414\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":16776:16915   */\n      swap1\n      pop\n        /* \"#utility.yul\":16503:16922   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16928:17347   */\n    tag_188:\n        /* \"#utility.yul\":17094:17098   */\n      0x00\n        /* \"#utility.yul\":17132:17134   */\n      0x20\n        /* \"#utility.yul\":17121:17130   */\n      dup3\n        /* \"#utility.yul\":17117:17135   */\n      add\n        /* \"#utility.yul\":17109:17135   */\n      swap1\n      pop\n        /* \"#utility.yul\":17181:17190   */\n      dup2\n        /* \"#utility.yul\":17175:17179   */\n      dup2\n        /* \"#utility.yul\":17171:17191   */\n      sub\n        /* \"#utility.yul\":17167:17168   */\n      0x00\n        /* \"#utility.yul\":17156:17165   */\n      dup4\n        /* \"#utility.yul\":17152:17169   */\n      add\n        /* \"#utility.yul\":17145:17192   */\n      mstore\n        /* \"#utility.yul\":17209:17340   */\n      tag_489\n        /* \"#utility.yul\":17335:17339   */\n      dup2\n        /* \"#utility.yul\":17209:17340   */\n      tag_419\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":17201:17340   */\n      swap1\n      pop\n        /* \"#utility.yul\":16928:17347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17353:17772   */\n    tag_173:\n        /* \"#utility.yul\":17519:17523   */\n      0x00\n        /* \"#utility.yul\":17557:17559   */\n      0x20\n        /* \"#utility.yul\":17546:17555   */\n      dup3\n        /* \"#utility.yul\":17542:17560   */\n      add\n        /* \"#utility.yul\":17534:17560   */\n      swap1\n      pop\n        /* \"#utility.yul\":17606:17615   */\n      dup2\n        /* \"#utility.yul\":17600:17604   */\n      dup2\n        /* \"#utility.yul\":17596:17616   */\n      sub\n        /* \"#utility.yul\":17592:17593   */\n      0x00\n        /* \"#utility.yul\":17581:17590   */\n      dup4\n        /* \"#utility.yul\":17577:17594   */\n      add\n        /* \"#utility.yul\":17570:17617   */\n      mstore\n        /* \"#utility.yul\":17634:17765   */\n      tag_491\n        /* \"#utility.yul\":17760:17764   */\n      dup2\n        /* \"#utility.yul\":17634:17765   */\n      tag_424\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":17626:17765   */\n      swap1\n      pop\n        /* \"#utility.yul\":17353:17772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17778:18197   */\n    tag_207:\n        /* \"#utility.yul\":17944:17948   */\n      0x00\n        /* \"#utility.yul\":17982:17984   */\n      0x20\n        /* \"#utility.yul\":17971:17980   */\n      dup3\n        /* \"#utility.yul\":17967:17985   */\n      add\n        /* \"#utility.yul\":17959:17985   */\n      swap1\n      pop\n        /* \"#utility.yul\":18031:18040   */\n      dup2\n        /* \"#utility.yul\":18025:18029   */\n      dup2\n        /* \"#utility.yul\":18021:18041   */\n      sub\n        /* \"#utility.yul\":18017:18018   */\n      0x00\n        /* \"#utility.yul\":18006:18015   */\n      dup4\n        /* \"#utility.yul\":18002:18019   */\n      add\n        /* \"#utility.yul\":17995:18042   */\n      mstore\n        /* \"#utility.yul\":18059:18190   */\n      tag_493\n        /* \"#utility.yul\":18185:18189   */\n      dup2\n        /* \"#utility.yul\":18059:18190   */\n      tag_429\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":18051:18190   */\n      swap1\n      pop\n        /* \"#utility.yul\":17778:18197   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18203:18622   */\n    tag_117:\n        /* \"#utility.yul\":18369:18373   */\n      0x00\n        /* \"#utility.yul\":18407:18409   */\n      0x20\n        /* \"#utility.yul\":18396:18405   */\n      dup3\n        /* \"#utility.yul\":18392:18410   */\n      add\n        /* \"#utility.yul\":18384:18410   */\n      swap1\n      pop\n        /* \"#utility.yul\":18456:18465   */\n      dup2\n        /* \"#utility.yul\":18450:18454   */\n      dup2\n        /* \"#utility.yul\":18446:18466   */\n      sub\n        /* \"#utility.yul\":18442:18443   */\n      0x00\n        /* \"#utility.yul\":18431:18440   */\n      dup4\n        /* \"#utility.yul\":18427:18444   */\n      add\n        /* \"#utility.yul\":18420:18467   */\n      mstore\n        /* \"#utility.yul\":18484:18615   */\n      tag_495\n        /* \"#utility.yul\":18610:18614   */\n      dup2\n        /* \"#utility.yul\":18484:18615   */\n      tag_434\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":18476:18615   */\n      swap1\n      pop\n        /* \"#utility.yul\":18203:18622   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18628:19047   */\n    tag_183:\n        /* \"#utility.yul\":18794:18798   */\n      0x00\n        /* \"#utility.yul\":18832:18834   */\n      0x20\n        /* \"#utility.yul\":18821:18830   */\n      dup3\n        /* \"#utility.yul\":18817:18835   */\n      add\n        /* \"#utility.yul\":18809:18835   */\n      swap1\n      pop\n        /* \"#utility.yul\":18881:18890   */\n      dup2\n        /* \"#utility.yul\":18875:18879   */\n      dup2\n        /* \"#utility.yul\":18871:18891   */\n      sub\n        /* \"#utility.yul\":18867:18868   */\n      0x00\n        /* \"#utility.yul\":18856:18865   */\n      dup4\n        /* \"#utility.yul\":18852:18869   */\n      add\n        /* \"#utility.yul\":18845:18892   */\n      mstore\n        /* \"#utility.yul\":18909:19040   */\n      tag_497\n        /* \"#utility.yul\":19035:19039   */\n      dup2\n        /* \"#utility.yul\":18909:19040   */\n      tag_439\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":18901:19040   */\n      swap1\n      pop\n        /* \"#utility.yul\":18628:19047   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19053:19472   */\n    tag_148:\n        /* \"#utility.yul\":19219:19223   */\n      0x00\n        /* \"#utility.yul\":19257:19259   */\n      0x20\n        /* \"#utility.yul\":19246:19255   */\n      dup3\n        /* \"#utility.yul\":19242:19260   */\n      add\n        /* \"#utility.yul\":19234:19260   */\n      swap1\n      pop\n        /* \"#utility.yul\":19306:19315   */\n      dup2\n        /* \"#utility.yul\":19300:19304   */\n      dup2\n        /* \"#utility.yul\":19296:19316   */\n      sub\n        /* \"#utility.yul\":19292:19293   */\n      0x00\n        /* \"#utility.yul\":19281:19290   */\n      dup4\n        /* \"#utility.yul\":19277:19294   */\n      add\n        /* \"#utility.yul\":19270:19317   */\n      mstore\n        /* \"#utility.yul\":19334:19465   */\n      tag_499\n        /* \"#utility.yul\":19460:19464   */\n      dup2\n        /* \"#utility.yul\":19334:19465   */\n      tag_444\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":19326:19465   */\n      swap1\n      pop\n        /* \"#utility.yul\":19053:19472   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19478:19897   */\n    tag_246:\n        /* \"#utility.yul\":19644:19648   */\n      0x00\n        /* \"#utility.yul\":19682:19684   */\n      0x20\n        /* \"#utility.yul\":19671:19680   */\n      dup3\n        /* \"#utility.yul\":19667:19685   */\n      add\n        /* \"#utility.yul\":19659:19685   */\n      swap1\n      pop\n        /* \"#utility.yul\":19731:19740   */\n      dup2\n        /* \"#utility.yul\":19725:19729   */\n      dup2\n        /* \"#utility.yul\":19721:19741   */\n      sub\n        /* \"#utility.yul\":19717:19718   */\n      0x00\n        /* \"#utility.yul\":19706:19715   */\n      dup4\n        /* \"#utility.yul\":19702:19719   */\n      add\n        /* \"#utility.yul\":19695:19742   */\n      mstore\n        /* \"#utility.yul\":19759:19890   */\n      tag_501\n        /* \"#utility.yul\":19885:19889   */\n      dup2\n        /* \"#utility.yul\":19759:19890   */\n      tag_449\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":19751:19890   */\n      swap1\n      pop\n        /* \"#utility.yul\":19478:19897   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19903:20322   */\n    tag_112:\n        /* \"#utility.yul\":20069:20073   */\n      0x00\n        /* \"#utility.yul\":20107:20109   */\n      0x20\n        /* \"#utility.yul\":20096:20105   */\n      dup3\n        /* \"#utility.yul\":20092:20110   */\n      add\n        /* \"#utility.yul\":20084:20110   */\n      swap1\n      pop\n        /* \"#utility.yul\":20156:20165   */\n      dup2\n        /* \"#utility.yul\":20150:20154   */\n      dup2\n        /* \"#utility.yul\":20146:20166   */\n      sub\n        /* \"#utility.yul\":20142:20143   */\n      0x00\n        /* \"#utility.yul\":20131:20140   */\n      dup4\n        /* \"#utility.yul\":20127:20144   */\n      add\n        /* \"#utility.yul\":20120:20167   */\n      mstore\n        /* \"#utility.yul\":20184:20315   */\n      tag_503\n        /* \"#utility.yul\":20310:20314   */\n      dup2\n        /* \"#utility.yul\":20184:20315   */\n      tag_454\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":20176:20315   */\n      swap1\n      pop\n        /* \"#utility.yul\":19903:20322   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20328:20550   */\n    tag_46:\n        /* \"#utility.yul\":20421:20425   */\n      0x00\n        /* \"#utility.yul\":20459:20461   */\n      0x20\n        /* \"#utility.yul\":20448:20457   */\n      dup3\n        /* \"#utility.yul\":20444:20462   */\n      add\n        /* \"#utility.yul\":20436:20462   */\n      swap1\n      pop\n        /* \"#utility.yul\":20472:20543   */\n      tag_505\n        /* \"#utility.yul\":20540:20541   */\n      0x00\n        /* \"#utility.yul\":20529:20538   */\n      dup4\n        /* \"#utility.yul\":20525:20542   */\n      add\n        /* \"#utility.yul\":20516:20522   */\n      dup5\n        /* \"#utility.yul\":20472:20543   */\n      tag_459\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":20328:20550   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20556:20685   */\n    tag_279:\n        /* \"#utility.yul\":20590:20596   */\n      0x00\n        /* \"#utility.yul\":20617:20637   */\n      tag_507\n      tag_508\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":20607:20637   */\n      swap1\n      pop\n        /* \"#utility.yul\":20646:20679   */\n      tag_509\n        /* \"#utility.yul\":20674:20678   */\n      dup3\n        /* \"#utility.yul\":20666:20672   */\n      dup3\n        /* \"#utility.yul\":20646:20679   */\n      tag_510\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":20556:20685   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20691:20766   */\n    tag_508:\n        /* \"#utility.yul\":20724:20730   */\n      0x00\n        /* \"#utility.yul\":20757:20759   */\n      0x40\n        /* \"#utility.yul\":20751:20760   */\n      mload\n        /* \"#utility.yul\":20741:20760   */\n      swap1\n      pop\n        /* \"#utility.yul\":20691:20766   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":20772:21079   */\n    tag_278:\n        /* \"#utility.yul\":20833:20837   */\n      0x00\n        /* \"#utility.yul\":20923:20941   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":20915:20921   */\n      dup3\n        /* \"#utility.yul\":20912:20942   */\n      gt\n        /* \"#utility.yul\":20909:20965   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":20945:20963   */\n      tag_514\n      tag_515\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":20909:20965   */\n    tag_513:\n        /* \"#utility.yul\":20983:21012   */\n      tag_516\n        /* \"#utility.yul\":21005:21011   */\n      dup3\n        /* \"#utility.yul\":20983:21012   */\n      tag_375\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":20975:21012   */\n      swap1\n      pop\n        /* \"#utility.yul\":21067:21071   */\n      0x20\n        /* \"#utility.yul\":21061:21065   */\n      dup2\n        /* \"#utility.yul\":21057:21072   */\n      add\n        /* \"#utility.yul\":21049:21072   */\n      swap1\n      pop\n        /* \"#utility.yul\":20772:21079   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21085:21183   */\n    tag_369:\n        /* \"#utility.yul\":21136:21142   */\n      0x00\n        /* \"#utility.yul\":21170:21175   */\n      dup2\n        /* \"#utility.yul\":21164:21176   */\n      mload\n        /* \"#utility.yul\":21154:21176   */\n      swap1\n      pop\n        /* \"#utility.yul\":21085:21183   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21189:21288   */\n    tag_379:\n        /* \"#utility.yul\":21241:21247   */\n      0x00\n        /* \"#utility.yul\":21275:21280   */\n      dup2\n        /* \"#utility.yul\":21269:21281   */\n      mload\n        /* \"#utility.yul\":21259:21281   */\n      swap1\n      pop\n        /* \"#utility.yul\":21189:21288   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21294:21462   */\n    tag_371:\n        /* \"#utility.yul\":21377:21388   */\n      0x00\n        /* \"#utility.yul\":21411:21417   */\n      dup3\n        /* \"#utility.yul\":21406:21409   */\n      dup3\n        /* \"#utility.yul\":21399:21418   */\n      mstore\n        /* \"#utility.yul\":21451:21455   */\n      0x20\n        /* \"#utility.yul\":21446:21449   */\n      dup3\n        /* \"#utility.yul\":21442:21456   */\n      add\n        /* \"#utility.yul\":21427:21456   */\n      swap1\n      pop\n        /* \"#utility.yul\":21294:21462   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21468:21637   */\n    tag_381:\n        /* \"#utility.yul\":21552:21563   */\n      0x00\n        /* \"#utility.yul\":21586:21592   */\n      dup3\n        /* \"#utility.yul\":21581:21584   */\n      dup3\n        /* \"#utility.yul\":21574:21593   */\n      mstore\n        /* \"#utility.yul\":21626:21630   */\n      0x20\n        /* \"#utility.yul\":21621:21624   */\n      dup3\n        /* \"#utility.yul\":21617:21631   */\n      add\n        /* \"#utility.yul\":21602:21631   */\n      swap1\n      pop\n        /* \"#utility.yul\":21468:21637   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21643:21916   */\n    tag_220:\n        /* \"#utility.yul\":21683:21686   */\n      0x00\n        /* \"#utility.yul\":21702:21722   */\n      tag_522\n        /* \"#utility.yul\":21720:21721   */\n      dup3\n        /* \"#utility.yul\":21702:21722   */\n      tag_523\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":21697:21722   */\n      swap2\n      pop\n        /* \"#utility.yul\":21736:21756   */\n      tag_524\n        /* \"#utility.yul\":21754:21755   */\n      dup4\n        /* \"#utility.yul\":21736:21756   */\n      tag_523\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":21731:21756   */\n      swap3\n      pop\n        /* \"#utility.yul\":21858:21859   */\n      dup3\n        /* \"#utility.yul\":21822:21856   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":21818:21860   */\n      sub\n        /* \"#utility.yul\":21815:21816   */\n      dup3\n        /* \"#utility.yul\":21812:21861   */\n      gt\n        /* \"#utility.yul\":21809:21884   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":21864:21882   */\n      tag_526\n      tag_527\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":21809:21884   */\n    tag_525:\n        /* \"#utility.yul\":21908:21909   */\n      dup3\n        /* \"#utility.yul\":21905:21906   */\n      dup3\n        /* \"#utility.yul\":21901:21910   */\n      add\n        /* \"#utility.yul\":21894:21910   */\n      swap1\n      pop\n        /* \"#utility.yul\":21643:21916   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21922:22227   */\n    tag_222:\n        /* \"#utility.yul\":21962:21965   */\n      0x00\n        /* \"#utility.yul\":21981:22001   */\n      tag_529\n        /* \"#utility.yul\":21999:22000   */\n      dup3\n        /* \"#utility.yul\":21981:22001   */\n      tag_462\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":21976:22001   */\n      swap2\n      pop\n        /* \"#utility.yul\":22015:22035   */\n      tag_530\n        /* \"#utility.yul\":22033:22034   */\n      dup4\n        /* \"#utility.yul\":22015:22035   */\n      tag_462\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":22010:22035   */\n      swap3\n      pop\n        /* \"#utility.yul\":22169:22170   */\n      dup3\n        /* \"#utility.yul\":22101:22167   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":22097:22171   */\n      sub\n        /* \"#utility.yul\":22094:22095   */\n      dup3\n        /* \"#utility.yul\":22091:22172   */\n      gt\n        /* \"#utility.yul\":22088:22195   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":22175:22193   */\n      tag_532\n      tag_527\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":22088:22195   */\n    tag_531:\n        /* \"#utility.yul\":22219:22220   */\n      dup3\n        /* \"#utility.yul\":22216:22217   */\n      dup3\n        /* \"#utility.yul\":22212:22221   */\n      add\n        /* \"#utility.yul\":22205:22221   */\n      swap1\n      pop\n        /* \"#utility.yul\":21922:22227   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22233:22424   */\n    tag_218:\n        /* \"#utility.yul\":22273:22277   */\n      0x00\n        /* \"#utility.yul\":22293:22313   */\n      tag_534\n        /* \"#utility.yul\":22311:22312   */\n      dup3\n        /* \"#utility.yul\":22293:22313   */\n      tag_523\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":22288:22313   */\n      swap2\n      pop\n        /* \"#utility.yul\":22327:22347   */\n      tag_535\n        /* \"#utility.yul\":22345:22346   */\n      dup4\n        /* \"#utility.yul\":22327:22347   */\n      tag_523\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":22322:22347   */\n      swap3\n      pop\n        /* \"#utility.yul\":22366:22367   */\n      dup3\n        /* \"#utility.yul\":22363:22364   */\n      dup3\n        /* \"#utility.yul\":22360:22368   */\n      lt\n        /* \"#utility.yul\":22357:22391   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":22371:22389   */\n      tag_537\n      tag_527\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":22357:22391   */\n    tag_536:\n        /* \"#utility.yul\":22416:22417   */\n      dup3\n        /* \"#utility.yul\":22413:22414   */\n      dup3\n        /* \"#utility.yul\":22409:22418   */\n      sub\n        /* \"#utility.yul\":22401:22418   */\n      swap1\n      pop\n        /* \"#utility.yul\":22233:22424   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22430:22621   */\n    tag_237:\n        /* \"#utility.yul\":22470:22474   */\n      0x00\n        /* \"#utility.yul\":22490:22510   */\n      tag_539\n        /* \"#utility.yul\":22508:22509   */\n      dup3\n        /* \"#utility.yul\":22490:22510   */\n      tag_462\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":22485:22510   */\n      swap2\n      pop\n        /* \"#utility.yul\":22524:22544   */\n      tag_540\n        /* \"#utility.yul\":22542:22543   */\n      dup4\n        /* \"#utility.yul\":22524:22544   */\n      tag_462\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":22519:22544   */\n      swap3\n      pop\n        /* \"#utility.yul\":22563:22564   */\n      dup3\n        /* \"#utility.yul\":22560:22561   */\n      dup3\n        /* \"#utility.yul\":22557:22565   */\n      lt\n        /* \"#utility.yul\":22554:22588   */\n      iszero\n      tag_541\n      jumpi\n        /* \"#utility.yul\":22568:22586   */\n      tag_542\n      tag_527\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":22554:22588   */\n    tag_541:\n        /* \"#utility.yul\":22613:22614   */\n      dup3\n        /* \"#utility.yul\":22610:22611   */\n      dup3\n        /* \"#utility.yul\":22606:22615   */\n      sub\n        /* \"#utility.yul\":22598:22615   */\n      swap1\n      pop\n        /* \"#utility.yul\":22430:22621   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22627:22723   */\n    tag_361:\n        /* \"#utility.yul\":22664:22671   */\n      0x00\n        /* \"#utility.yul\":22693:22717   */\n      tag_544\n        /* \"#utility.yul\":22711:22716   */\n      dup3\n        /* \"#utility.yul\":22693:22717   */\n      tag_545\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":22682:22717   */\n      swap1\n      pop\n        /* \"#utility.yul\":22627:22723   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22729:22819   */\n    tag_365:\n        /* \"#utility.yul\":22763:22770   */\n      0x00\n        /* \"#utility.yul\":22806:22811   */\n      dup2\n        /* \"#utility.yul\":22799:22812   */\n      iszero\n        /* \"#utility.yul\":22792:22813   */\n      iszero\n        /* \"#utility.yul\":22781:22813   */\n      swap1\n      pop\n        /* \"#utility.yul\":22729:22819   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22825:22974   */\n    tag_547:\n        /* \"#utility.yul\":22861:22868   */\n      0x00\n        /* \"#utility.yul\":22901:22967   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22894:22899   */\n      dup3\n        /* \"#utility.yul\":22890:22968   */\n      and\n        /* \"#utility.yul\":22879:22968   */\n      swap1\n      pop\n        /* \"#utility.yul\":22825:22974   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22980:23098   */\n    tag_523:\n        /* \"#utility.yul\":23017:23024   */\n      0x00\n        /* \"#utility.yul\":23057:23091   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23050:23055   */\n      dup3\n        /* \"#utility.yul\":23046:23092   */\n      and\n        /* \"#utility.yul\":23035:23092   */\n      swap1\n      pop\n        /* \"#utility.yul\":22980:23098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23104:23230   */\n    tag_545:\n        /* \"#utility.yul\":23141:23148   */\n      0x00\n        /* \"#utility.yul\":23181:23223   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23174:23179   */\n      dup3\n        /* \"#utility.yul\":23170:23224   */\n      and\n        /* \"#utility.yul\":23159:23224   */\n      swap1\n      pop\n        /* \"#utility.yul\":23104:23230   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23236:23313   */\n    tag_462:\n        /* \"#utility.yul\":23273:23280   */\n      0x00\n        /* \"#utility.yul\":23302:23307   */\n      dup2\n        /* \"#utility.yul\":23291:23307   */\n      swap1\n      pop\n        /* \"#utility.yul\":23236:23313   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23319:23473   */\n    tag_284:\n        /* \"#utility.yul\":23403:23409   */\n      dup3\n        /* \"#utility.yul\":23398:23401   */\n      dup2\n        /* \"#utility.yul\":23393:23396   */\n      dup4\n        /* \"#utility.yul\":23380:23410   */\n      calldatacopy\n        /* \"#utility.yul\":23465:23466   */\n      0x00\n        /* \"#utility.yul\":23456:23462   */\n      dup4\n        /* \"#utility.yul\":23451:23454   */\n      dup4\n        /* \"#utility.yul\":23447:23463   */\n      add\n        /* \"#utility.yul\":23440:23467   */\n      mstore\n        /* \"#utility.yul\":23319:23473   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23479:23786   */\n    tag_373:\n        /* \"#utility.yul\":23547:23548   */\n      0x00\n        /* \"#utility.yul\":23557:23670   */\n    tag_554:\n        /* \"#utility.yul\":23571:23577   */\n      dup4\n        /* \"#utility.yul\":23568:23569   */\n      dup2\n        /* \"#utility.yul\":23565:23578   */\n      lt\n        /* \"#utility.yul\":23557:23670   */\n      iszero\n      tag_556\n      jumpi\n        /* \"#utility.yul\":23656:23657   */\n      dup1\n        /* \"#utility.yul\":23651:23654   */\n      dup3\n        /* \"#utility.yul\":23647:23658   */\n      add\n        /* \"#utility.yul\":23641:23659   */\n      mload\n        /* \"#utility.yul\":23637:23638   */\n      dup2\n        /* \"#utility.yul\":23632:23635   */\n      dup5\n        /* \"#utility.yul\":23628:23639   */\n      add\n        /* \"#utility.yul\":23621:23660   */\n      mstore\n        /* \"#utility.yul\":23593:23595   */\n      0x20\n        /* \"#utility.yul\":23590:23591   */\n      dup2\n        /* \"#utility.yul\":23586:23596   */\n      add\n        /* \"#utility.yul\":23581:23596   */\n      swap1\n      pop\n        /* \"#utility.yul\":23557:23670   */\n      jump(tag_554)\n    tag_556:\n        /* \"#utility.yul\":23688:23694   */\n      dup4\n        /* \"#utility.yul\":23685:23686   */\n      dup2\n        /* \"#utility.yul\":23682:23695   */\n      gt\n        /* \"#utility.yul\":23679:23780   */\n      iszero\n      tag_557\n      jumpi\n        /* \"#utility.yul\":23768:23769   */\n      0x00\n        /* \"#utility.yul\":23759:23765   */\n      dup5\n        /* \"#utility.yul\":23754:23757   */\n      dup5\n        /* \"#utility.yul\":23750:23766   */\n      add\n        /* \"#utility.yul\":23743:23770   */\n      mstore\n        /* \"#utility.yul\":23679:23780   */\n    tag_557:\n        /* \"#utility.yul\":23528:23786   */\n      pop\n        /* \"#utility.yul\":23479:23786   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23792:23963   */\n    tag_244:\n        /* \"#utility.yul\":23831:23834   */\n      0x00\n        /* \"#utility.yul\":23854:23878   */\n      tag_559\n        /* \"#utility.yul\":23872:23877   */\n      dup3\n        /* \"#utility.yul\":23854:23878   */\n      tag_462\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":23845:23878   */\n      swap2\n      pop\n        /* \"#utility.yul\":23900:23904   */\n      0x00\n        /* \"#utility.yul\":23893:23898   */\n      dup3\n        /* \"#utility.yul\":23890:23905   */\n      eq\n        /* \"#utility.yul\":23887:23928   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":23908:23926   */\n      tag_561\n      tag_527\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":23887:23928   */\n    tag_560:\n        /* \"#utility.yul\":23955:23956   */\n      0x01\n        /* \"#utility.yul\":23948:23953   */\n      dup3\n        /* \"#utility.yul\":23944:23957   */\n      sub\n        /* \"#utility.yul\":23937:23957   */\n      swap1\n      pop\n        /* \"#utility.yul\":23792:23963   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23969:24289   */\n    tag_102:\n        /* \"#utility.yul\":24013:24019   */\n      0x00\n        /* \"#utility.yul\":24050:24051   */\n      0x02\n        /* \"#utility.yul\":24044:24048   */\n      dup3\n        /* \"#utility.yul\":24040:24052   */\n      div\n        /* \"#utility.yul\":24030:24052   */\n      swap1\n      pop\n        /* \"#utility.yul\":24097:24098   */\n      0x01\n        /* \"#utility.yul\":24091:24095   */\n      dup3\n        /* \"#utility.yul\":24087:24099   */\n      and\n        /* \"#utility.yul\":24118:24136   */\n      dup1\n        /* \"#utility.yul\":24108:24189   */\n      tag_563\n      jumpi\n        /* \"#utility.yul\":24174:24178   */\n      0x7f\n        /* \"#utility.yul\":24166:24172   */\n      dup3\n        /* \"#utility.yul\":24162:24179   */\n      and\n        /* \"#utility.yul\":24152:24179   */\n      swap2\n      pop\n        /* \"#utility.yul\":24108:24189   */\n    tag_563:\n        /* \"#utility.yul\":24236:24238   */\n      0x20\n        /* \"#utility.yul\":24228:24234   */\n      dup3\n        /* \"#utility.yul\":24225:24239   */\n      lt\n        /* \"#utility.yul\":24205:24223   */\n      dup2\n        /* \"#utility.yul\":24202:24240   */\n      eq\n        /* \"#utility.yul\":24199:24283   */\n      iszero\n      tag_564\n      jumpi\n        /* \"#utility.yul\":24255:24273   */\n      tag_565\n      tag_566\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":24199:24283   */\n    tag_564:\n        /* \"#utility.yul\":24020:24289   */\n      pop\n        /* \"#utility.yul\":23969:24289   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24295:24576   */\n    tag_510:\n        /* \"#utility.yul\":24378:24405   */\n      tag_568\n        /* \"#utility.yul\":24400:24404   */\n      dup3\n        /* \"#utility.yul\":24378:24405   */\n      tag_375\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":24370:24376   */\n      dup2\n        /* \"#utility.yul\":24366:24406   */\n      add\n        /* \"#utility.yul\":24508:24514   */\n      dup2\n        /* \"#utility.yul\":24496:24506   */\n      dup2\n        /* \"#utility.yul\":24493:24515   */\n      lt\n        /* \"#utility.yul\":24472:24490   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":24460:24470   */\n      dup3\n        /* \"#utility.yul\":24457:24491   */\n      gt\n        /* \"#utility.yul\":24454:24516   */\n      or\n        /* \"#utility.yul\":24451:24539   */\n      iszero\n      tag_569\n      jumpi\n        /* \"#utility.yul\":24519:24537   */\n      tag_570\n      tag_515\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":24451:24539   */\n    tag_569:\n        /* \"#utility.yul\":24559:24569   */\n      dup1\n        /* \"#utility.yul\":24555:24557   */\n      0x40\n        /* \"#utility.yul\":24548:24570   */\n      mstore\n        /* \"#utility.yul\":24338:24576   */\n      pop\n        /* \"#utility.yul\":24295:24576   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24582:24815   */\n    tag_145:\n        /* \"#utility.yul\":24621:24624   */\n      0x00\n        /* \"#utility.yul\":24644:24668   */\n      tag_572\n        /* \"#utility.yul\":24662:24667   */\n      dup3\n        /* \"#utility.yul\":24644:24668   */\n      tag_462\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":24635:24668   */\n      swap2\n      pop\n        /* \"#utility.yul\":24690:24756   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":24683:24688   */\n      dup3\n        /* \"#utility.yul\":24680:24757   */\n      eq\n        /* \"#utility.yul\":24677:24780   */\n      iszero\n      tag_573\n      jumpi\n        /* \"#utility.yul\":24760:24778   */\n      tag_574\n      tag_527\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":24677:24780   */\n    tag_573:\n        /* \"#utility.yul\":24807:24808   */\n      0x01\n        /* \"#utility.yul\":24800:24805   */\n      dup3\n        /* \"#utility.yul\":24796:24809   */\n      add\n        /* \"#utility.yul\":24789:24809   */\n      swap1\n      pop\n        /* \"#utility.yul\":24582:24815   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24821:25001   */\n    tag_527:\n        /* \"#utility.yul\":24869:24946   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24866:24867   */\n      0x00\n        /* \"#utility.yul\":24859:24947   */\n      mstore\n        /* \"#utility.yul\":24966:24970   */\n      0x11\n        /* \"#utility.yul\":24963:24964   */\n      0x04\n        /* \"#utility.yul\":24956:24971   */\n      mstore\n        /* \"#utility.yul\":24990:24994   */\n      0x24\n        /* \"#utility.yul\":24987:24988   */\n      0x00\n        /* \"#utility.yul\":24980:24995   */\n      revert\n        /* \"#utility.yul\":25007:25187   */\n    tag_566:\n        /* \"#utility.yul\":25055:25132   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25052:25053   */\n      0x00\n        /* \"#utility.yul\":25045:25133   */\n      mstore\n        /* \"#utility.yul\":25152:25156   */\n      0x22\n        /* \"#utility.yul\":25149:25150   */\n      0x04\n        /* \"#utility.yul\":25142:25157   */\n      mstore\n        /* \"#utility.yul\":25176:25180   */\n      0x24\n        /* \"#utility.yul\":25173:25174   */\n      0x00\n        /* \"#utility.yul\":25166:25181   */\n      revert\n        /* \"#utility.yul\":25193:25373   */\n    tag_515:\n        /* \"#utility.yul\":25241:25318   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25238:25239   */\n      0x00\n        /* \"#utility.yul\":25231:25319   */\n      mstore\n        /* \"#utility.yul\":25338:25342   */\n      0x41\n        /* \"#utility.yul\":25335:25336   */\n      0x04\n        /* \"#utility.yul\":25328:25343   */\n      mstore\n        /* \"#utility.yul\":25362:25366   */\n      0x24\n        /* \"#utility.yul\":25359:25360   */\n      0x00\n        /* \"#utility.yul\":25352:25367   */\n      revert\n        /* \"#utility.yul\":25379:25496   */\n    tag_304:\n        /* \"#utility.yul\":25488:25489   */\n      0x00\n        /* \"#utility.yul\":25485:25486   */\n      dup1\n        /* \"#utility.yul\":25478:25490   */\n      revert\n        /* \"#utility.yul\":25502:25619   */\n    tag_282:\n        /* \"#utility.yul\":25611:25612   */\n      0x00\n        /* \"#utility.yul\":25608:25609   */\n      dup1\n        /* \"#utility.yul\":25601:25613   */\n      revert\n        /* \"#utility.yul\":25625:25742   */\n    tag_334:\n        /* \"#utility.yul\":25734:25735   */\n      0x00\n        /* \"#utility.yul\":25731:25732   */\n      dup1\n        /* \"#utility.yul\":25724:25736   */\n      revert\n        /* \"#utility.yul\":25748:25865   */\n    tag_313:\n        /* \"#utility.yul\":25857:25858   */\n      0x00\n        /* \"#utility.yul\":25854:25855   */\n      dup1\n        /* \"#utility.yul\":25847:25859   */\n      revert\n        /* \"#utility.yul\":25871:25973   */\n    tag_375:\n        /* \"#utility.yul\":25912:25918   */\n      0x00\n        /* \"#utility.yul\":25963:25965   */\n      0x1f\n        /* \"#utility.yul\":25959:25966   */\n      not\n        /* \"#utility.yul\":25954:25956   */\n      0x1f\n        /* \"#utility.yul\":25947:25952   */\n      dup4\n        /* \"#utility.yul\":25943:25957   */\n      add\n        /* \"#utility.yul\":25939:25967   */\n      and\n        /* \"#utility.yul\":25929:25967   */\n      swap1\n      pop\n        /* \"#utility.yul\":25871:25973   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25979:26200   */\n    tag_388:\n        /* \"#utility.yul\":26119:26153   */\n      0x455243373231413a206f776e657220696e646578206f7574206f6620626f756e\n        /* \"#utility.yul\":26115:26116   */\n      0x00\n        /* \"#utility.yul\":26107:26113   */\n      dup3\n        /* \"#utility.yul\":26103:26117   */\n      add\n        /* \"#utility.yul\":26096:26154   */\n      mstore\n        /* \"#utility.yul\":26188:26192   */\n      0x6473000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26183:26185   */\n      0x20\n        /* \"#utility.yul\":26175:26181   */\n      dup3\n        /* \"#utility.yul\":26171:26186   */\n      add\n        /* \"#utility.yul\":26164:26193   */\n      mstore\n        /* \"#utility.yul\":25979:26200   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26206:26435   */\n    tag_393:\n        /* \"#utility.yul\":26346:26380   */\n      0x455243373231413a206f776e657220717565727920666f72206e6f6e65786973\n        /* \"#utility.yul\":26342:26343   */\n      0x00\n        /* \"#utility.yul\":26334:26340   */\n      dup3\n        /* \"#utility.yul\":26330:26344   */\n      add\n        /* \"#utility.yul\":26323:26381   */\n      mstore\n        /* \"#utility.yul\":26415:26427   */\n      0x74656e7420746f6b656e00000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26410:26412   */\n      0x20\n        /* \"#utility.yul\":26402:26408   */\n      dup3\n        /* \"#utility.yul\":26398:26413   */\n      add\n        /* \"#utility.yul\":26391:26428   */\n      mstore\n        /* \"#utility.yul\":26206:26435   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26441:26663   */\n    tag_398:\n        /* \"#utility.yul\":26581:26615   */\n      0x455243373231413a20676c6f62616c20696e646578206f7574206f6620626f75\n        /* \"#utility.yul\":26577:26578   */\n      0x00\n        /* \"#utility.yul\":26569:26575   */\n      dup3\n        /* \"#utility.yul\":26565:26579   */\n      add\n        /* \"#utility.yul\":26558:26616   */\n      mstore\n        /* \"#utility.yul\":26650:26655   */\n      0x6e64730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26645:26647   */\n      0x20\n        /* \"#utility.yul\":26637:26643   */\n      dup3\n        /* \"#utility.yul\":26633:26648   */\n      add\n        /* \"#utility.yul\":26626:26656   */\n      mstore\n        /* \"#utility.yul\":26441:26663   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26669:26893   */\n    tag_403:\n        /* \"#utility.yul\":26809:26843   */\n      0x455243373231413a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":26805:26806   */\n      0x00\n        /* \"#utility.yul\":26797:26803   */\n      dup3\n        /* \"#utility.yul\":26793:26807   */\n      add\n        /* \"#utility.yul\":26786:26844   */\n      mstore\n        /* \"#utility.yul\":26878:26885   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26873:26875   */\n      0x20\n        /* \"#utility.yul\":26865:26871   */\n      dup3\n        /* \"#utility.yul\":26861:26876   */\n      add\n        /* \"#utility.yul\":26854:26886   */\n      mstore\n        /* \"#utility.yul\":26669:26893   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26899:27143   */\n    tag_408:\n        /* \"#utility.yul\":27039:27073   */\n      0x455243373231413a20617070726f76652063616c6c6572206973206e6f74206f\n        /* \"#utility.yul\":27035:27036   */\n      0x00\n        /* \"#utility.yul\":27027:27033   */\n      dup3\n        /* \"#utility.yul\":27023:27037   */\n      add\n        /* \"#utility.yul\":27016:27074   */\n      mstore\n        /* \"#utility.yul\":27108:27135   */\n      0x776e6572206e6f7220617070726f76656420666f7220616c6c00000000000000\n        /* \"#utility.yul\":27103:27105   */\n      0x20\n        /* \"#utility.yul\":27095:27101   */\n      dup3\n        /* \"#utility.yul\":27091:27106   */\n      add\n        /* \"#utility.yul\":27084:27136   */\n      mstore\n        /* \"#utility.yul\":26899:27143   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27149:27379   */\n    tag_413:\n        /* \"#utility.yul\":27289:27323   */\n      0x455243373231413a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":27285:27286   */\n      0x00\n        /* \"#utility.yul\":27277:27283   */\n      dup3\n        /* \"#utility.yul\":27273:27287   */\n      add\n        /* \"#utility.yul\":27266:27324   */\n      mstore\n        /* \"#utility.yul\":27358:27371   */\n      0x65726f2061646472657373000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27353:27355   */\n      0x20\n        /* \"#utility.yul\":27345:27351   */\n      dup3\n        /* \"#utility.yul\":27341:27356   */\n      add\n        /* \"#utility.yul\":27334:27372   */\n      mstore\n        /* \"#utility.yul\":27149:27379   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27385:27610   */\n    tag_418:\n        /* \"#utility.yul\":27525:27559   */\n      0x455243373231413a207472616e736665722066726f6d20696e636f7272656374\n        /* \"#utility.yul\":27521:27522   */\n      0x00\n        /* \"#utility.yul\":27513:27519   */\n      dup3\n        /* \"#utility.yul\":27509:27523   */\n      add\n        /* \"#utility.yul\":27502:27560   */\n      mstore\n        /* \"#utility.yul\":27594:27602   */\n      0x206f776e65720000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27589:27591   */\n      0x20\n        /* \"#utility.yul\":27581:27587   */\n      dup3\n        /* \"#utility.yul\":27577:27592   */\n      add\n        /* \"#utility.yul\":27570:27603   */\n      mstore\n        /* \"#utility.yul\":27385:27610   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27616:27850   */\n    tag_423:\n        /* \"#utility.yul\":27756:27790   */\n      0x4552433732314d657461646174613a2055524920717565727920666f72206e6f\n        /* \"#utility.yul\":27752:27753   */\n      0x00\n        /* \"#utility.yul\":27744:27750   */\n      dup3\n        /* \"#utility.yul\":27740:27754   */\n      add\n        /* \"#utility.yul\":27733:27791   */\n      mstore\n        /* \"#utility.yul\":27825:27842   */\n      0x6e6578697374656e7420746f6b656e0000000000000000000000000000000000\n        /* \"#utility.yul\":27820:27822   */\n      0x20\n        /* \"#utility.yul\":27812:27818   */\n      dup3\n        /* \"#utility.yul\":27808:27823   */\n      add\n        /* \"#utility.yul\":27801:27843   */\n      mstore\n        /* \"#utility.yul\":27616:27850   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27856:28032   */\n    tag_428:\n        /* \"#utility.yul\":27996:28024   */\n      0x455243373231413a20617070726f766520746f2063616c6c6572000000000000\n        /* \"#utility.yul\":27992:27993   */\n      0x00\n        /* \"#utility.yul\":27984:27990   */\n      dup3\n        /* \"#utility.yul\":27980:27994   */\n      add\n        /* \"#utility.yul\":27973:28025   */\n      mstore\n        /* \"#utility.yul\":27856:28032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28038:28275   */\n    tag_433:\n        /* \"#utility.yul\":28178:28212   */\n      0x455243373231413a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":28174:28175   */\n      0x00\n        /* \"#utility.yul\":28166:28172   */\n      dup3\n        /* \"#utility.yul\":28162:28176   */\n      add\n        /* \"#utility.yul\":28155:28213   */\n      mstore\n        /* \"#utility.yul\":28247:28267   */\n      0x6f776e6572206e6f7220617070726f7665640000000000000000000000000000\n        /* \"#utility.yul\":28242:28244   */\n      0x20\n        /* \"#utility.yul\":28234:28240   */\n      dup3\n        /* \"#utility.yul\":28230:28245   */\n      add\n        /* \"#utility.yul\":28223:28268   */\n      mstore\n        /* \"#utility.yul\":28038:28275   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28281:28502   */\n    tag_438:\n        /* \"#utility.yul\":28421:28455   */\n      0x455243373231413a20617070726f76616c20746f2063757272656e74206f776e\n        /* \"#utility.yul\":28417:28418   */\n      0x00\n        /* \"#utility.yul\":28409:28415   */\n      dup3\n        /* \"#utility.yul\":28405:28419   */\n      add\n        /* \"#utility.yul\":28398:28456   */\n      mstore\n        /* \"#utility.yul\":28490:28494   */\n      0x6572000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28485:28487   */\n      0x20\n        /* \"#utility.yul\":28477:28483   */\n      dup3\n        /* \"#utility.yul\":28473:28488   */\n      add\n        /* \"#utility.yul\":28466:28495   */\n      mstore\n        /* \"#utility.yul\":28281:28502   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28508:28746   */\n    tag_443:\n        /* \"#utility.yul\":28648:28682   */\n      0x455243373231413a207472616e7366657220746f206e6f6e2045524337323152\n        /* \"#utility.yul\":28644:28645   */\n      0x00\n        /* \"#utility.yul\":28636:28642   */\n      dup3\n        /* \"#utility.yul\":28632:28646   */\n      add\n        /* \"#utility.yul\":28625:28683   */\n      mstore\n        /* \"#utility.yul\":28717:28738   */\n      0x6563656976657220696d706c656d656e74657200000000000000000000000000\n        /* \"#utility.yul\":28712:28714   */\n      0x20\n        /* \"#utility.yul\":28704:28710   */\n      dup3\n        /* \"#utility.yul\":28700:28715   */\n      add\n        /* \"#utility.yul\":28693:28739   */\n      mstore\n        /* \"#utility.yul\":28508:28746   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28752:28985   */\n    tag_448:\n        /* \"#utility.yul\":28892:28926   */\n      0x455243373231413a20756e61626c6520746f2067657420746f6b656e206f6620\n        /* \"#utility.yul\":28888:28889   */\n      0x00\n        /* \"#utility.yul\":28880:28886   */\n      dup3\n        /* \"#utility.yul\":28876:28890   */\n      add\n        /* \"#utility.yul\":28869:28927   */\n      mstore\n        /* \"#utility.yul\":28961:28977   */\n      0x6f776e657220627920696e646578000000000000000000000000000000000000\n        /* \"#utility.yul\":28956:28958   */\n      0x20\n        /* \"#utility.yul\":28948:28954   */\n      dup3\n        /* \"#utility.yul\":28944:28959   */\n      add\n        /* \"#utility.yul\":28937:28978   */\n      mstore\n        /* \"#utility.yul\":28752:28985   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28991:29225   */\n    tag_453:\n        /* \"#utility.yul\":29131:29165   */\n      0x455243373231413a20756e61626c6520746f2064657465726d696e6520746865\n        /* \"#utility.yul\":29127:29128   */\n      0x00\n        /* \"#utility.yul\":29119:29125   */\n      dup3\n        /* \"#utility.yul\":29115:29129   */\n      add\n        /* \"#utility.yul\":29108:29166   */\n      mstore\n        /* \"#utility.yul\":29200:29217   */\n      0x206f776e6572206f6620746f6b656e0000000000000000000000000000000000\n        /* \"#utility.yul\":29195:29197   */\n      0x20\n        /* \"#utility.yul\":29187:29193   */\n      dup3\n        /* \"#utility.yul\":29183:29198   */\n      add\n        /* \"#utility.yul\":29176:29218   */\n      mstore\n        /* \"#utility.yul\":28991:29225   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29231:29463   */\n    tag_458:\n        /* \"#utility.yul\":29371:29405   */\n      0x455243373231413a20617070726f76656420717565727920666f72206e6f6e65\n        /* \"#utility.yul\":29367:29368   */\n      0x00\n        /* \"#utility.yul\":29359:29365   */\n      dup3\n        /* \"#utility.yul\":29355:29369   */\n      add\n        /* \"#utility.yul\":29348:29406   */\n      mstore\n        /* \"#utility.yul\":29440:29455   */\n      0x78697374656e7420746f6b656e00000000000000000000000000000000000000\n        /* \"#utility.yul\":29435:29437   */\n      0x20\n        /* \"#utility.yul\":29427:29433   */\n      dup3\n        /* \"#utility.yul\":29423:29438   */\n      add\n        /* \"#utility.yul\":29416:29456   */\n      mstore\n        /* \"#utility.yul\":29231:29463   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29469:29591   */\n    tag_288:\n        /* \"#utility.yul\":29542:29566   */\n      tag_599\n        /* \"#utility.yul\":29560:29565   */\n      dup2\n        /* \"#utility.yul\":29542:29566   */\n      tag_361\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":29535:29540   */\n      dup2\n        /* \"#utility.yul\":29532:29567   */\n      eq\n        /* \"#utility.yul\":29522:29585   */\n      tag_600\n      jumpi\n        /* \"#utility.yul\":29581:29582   */\n      0x00\n        /* \"#utility.yul\":29578:29579   */\n      dup1\n        /* \"#utility.yul\":29571:29583   */\n      revert\n        /* \"#utility.yul\":29522:29585   */\n    tag_600:\n        /* \"#utility.yul\":29469:29591   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29597:29713   */\n    tag_292:\n        /* \"#utility.yul\":29667:29688   */\n      tag_602\n        /* \"#utility.yul\":29682:29687   */\n      dup2\n        /* \"#utility.yul\":29667:29688   */\n      tag_365\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":29660:29665   */\n      dup2\n        /* \"#utility.yul\":29657:29689   */\n      eq\n        /* \"#utility.yul\":29647:29707   */\n      tag_603\n      jumpi\n        /* \"#utility.yul\":29703:29704   */\n      0x00\n        /* \"#utility.yul\":29700:29701   */\n      dup1\n        /* \"#utility.yul\":29693:29705   */\n      revert\n        /* \"#utility.yul\":29647:29707   */\n    tag_603:\n        /* \"#utility.yul\":29597:29713   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29719:29839   */\n    tag_296:\n        /* \"#utility.yul\":29791:29814   */\n      tag_605\n        /* \"#utility.yul\":29808:29813   */\n      dup2\n        /* \"#utility.yul\":29791:29814   */\n      tag_547\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":29784:29789   */\n      dup2\n        /* \"#utility.yul\":29781:29815   */\n      eq\n        /* \"#utility.yul\":29771:29833   */\n      tag_606\n      jumpi\n        /* \"#utility.yul\":29829:29830   */\n      0x00\n        /* \"#utility.yul\":29826:29827   */\n      dup1\n        /* \"#utility.yul\":29819:29831   */\n      revert\n        /* \"#utility.yul\":29771:29833   */\n    tag_606:\n        /* \"#utility.yul\":29719:29839   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29845:29967   */\n    tag_309:\n        /* \"#utility.yul\":29918:29942   */\n      tag_608\n        /* \"#utility.yul\":29936:29941   */\n      dup2\n        /* \"#utility.yul\":29918:29942   */\n      tag_462\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":29911:29916   */\n      dup2\n        /* \"#utility.yul\":29908:29943   */\n      eq\n        /* \"#utility.yul\":29898:29961   */\n      tag_609\n      jumpi\n        /* \"#utility.yul\":29957:29958   */\n      0x00\n        /* \"#utility.yul\":29954:29955   */\n      dup1\n        /* \"#utility.yul\":29947:29959   */\n      revert\n        /* \"#utility.yul\":29898:29961   */\n    tag_609:\n        /* \"#utility.yul\":29845:29967   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209ca65088c2dabf463ab340529072e7aaf3e25df99d79cbe8c6dda1172339010f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_860": {
									"entryPoint": null,
									"id": 860,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 456,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256_fromMemory": {
									"entryPoint": 605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_stringliteral_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 958,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 1049,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1211,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1258,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1305,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1310,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1315,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1320,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b": {
									"entryPoint": 1342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a": {
									"entryPoint": 1421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7006:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:326:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:75:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "137:41:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:49:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "121:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:66:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "203:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "210:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "196:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "196:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "226:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "241:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "230:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "293:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "272:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:16:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "286:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "265:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:25:10"
															},
															"nodeType": "YulIf",
															"src": "262:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "405:3:10"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "410:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "415:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "383:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "383:39:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:10",
														"type": ""
													}
												],
												"src": "7:421:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "521:282:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "572:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "549:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "557:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "545:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "545:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "564:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "541:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "534:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:35:10"
															},
															"nodeType": "YulIf",
															"src": "531:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "662:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "682:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "666:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "698:99:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "778:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "793:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "707:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:90:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "698:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "499:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "507:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "515:5:10",
														"type": ""
													}
												],
												"src": "448:355:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "872:80:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "882:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "897:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "891:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "891:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "882:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "940:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "913:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "913:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "850:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "858:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "866:5:10",
														"type": ""
													}
												],
												"src": "809:143:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1106:1018:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1153:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1155:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1155:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1155:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1127:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1136:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1123:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1123:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1148:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1119:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1119:33:10"
															},
															"nodeType": "YulIf",
															"src": "1116:120:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "1246:291:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1261:38:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1285:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1296:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1281:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1281:17:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1275:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1275:24:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1265:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1346:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1348:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1348:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1348:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1318:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1326:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1315:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1315:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "1312:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1443:84:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1499:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1510:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1495:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1495:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1519:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1453:41:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1453:74:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1443:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1547:292:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1562:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1586:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1597:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1582:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1582:18:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1576:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1576:25:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1566:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1648:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1650:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1650:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1650:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1620:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1628:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1617:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1617:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "1614:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1745:84:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1801:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1812:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1797:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1797:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1821:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1755:41:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1755:74:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1745:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1849:129:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1864:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1878:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1868:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1894:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1940:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1951:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1936:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1936:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1960:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1904:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1904:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1894:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1988:129:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2003:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2017:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2007:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2033:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2079:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2090:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2075:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2075:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2099:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2043:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2043:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "2033:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1052:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1063:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1075:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1083:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1091:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1099:6:10",
														"type": ""
													}
												],
												"src": "958:1166:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2276:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2286:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2352:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2357:2:10",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2293:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2293:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2286:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2458:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b",
																	"nodeType": "YulIdentifier",
																	"src": "2369:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2369:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2369:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2471:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2482:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2487:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2478:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2471:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2264:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2272:3:10",
														"type": ""
													}
												],
												"src": "2130:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2648:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2658:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2724:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2729:2:10",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2665:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2665:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2658:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2830:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a",
																	"nodeType": "YulIdentifier",
																	"src": "2741:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2741:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2741:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2843:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2854:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2859:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2850:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2850:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2843:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2636:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2644:3:10",
														"type": ""
													}
												],
												"src": "2502:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3045:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3055:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3067:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3078:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3063:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3063:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3055:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3102:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3113:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3098:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3098:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3121:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3127:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3117:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3117:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3091:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3091:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3091:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3147:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3281:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3155:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3155:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3147:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3025:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3040:4:10",
														"type": ""
													}
												],
												"src": "2874:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3470:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3480:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3492:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3503:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3488:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3488:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3480:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3527:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3538:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3523:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3523:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3546:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3552:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3542:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3542:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3516:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3516:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3516:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3572:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3706:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3580:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3580:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3572:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3450:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3465:4:10",
														"type": ""
													}
												],
												"src": "3299:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3765:88:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3775:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "3785:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3785:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3775:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3834:6:10"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3842:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3814:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3814:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3814:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3749:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3758:6:10",
														"type": ""
													}
												],
												"src": "3724:129:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3899:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3909:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3925:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3919:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3919:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3909:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3892:6:10",
														"type": ""
													}
												],
												"src": "3859:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:241:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4112:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4114:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4114:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4114:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4084:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4092:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4081:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4081:30:10"
															},
															"nodeType": "YulIf",
															"src": "4078:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4144:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4174:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "4152:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4152:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "4144:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4218:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "4230:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4236:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4226:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4226:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "4218:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3991:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4002:4:10",
														"type": ""
													}
												],
												"src": "3940:308:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4350:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4367:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4372:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4360:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4360:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4360:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4388:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4407:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4412:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4403:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4403:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4388:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4322:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4327:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4338:11:10",
														"type": ""
													}
												],
												"src": "4254:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4474:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4484:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4495:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4484:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4456:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4466:7:10",
														"type": ""
													}
												],
												"src": "4429:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4561:258:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4571:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4580:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4575:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4640:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "4665:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4670:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4661:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4661:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "4684:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4689:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4680:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4680:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4674:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4674:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4654:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4654:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4654:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4601:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4604:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4598:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4598:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4612:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4614:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4623:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4626:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4619:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4619:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4614:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4594:3:10",
																"statements": []
															},
															"src": "4590:113:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4737:76:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "4787:3:10"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "4792:6:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4783:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4783:16:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4801:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4776:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4776:27:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4776:27:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4718:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4721:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4715:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4715:13:10"
															},
															"nodeType": "YulIf",
															"src": "4712:101:10"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4543:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "4548:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4553:6:10",
														"type": ""
													}
												],
												"src": "4512:307:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4876:269:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4886:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4900:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4906:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4896:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4886:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4917:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4947:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4953:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4943:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4943:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4921:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4994:51:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5008:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5022:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5030:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5018:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5018:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5008:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4974:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4967:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4967:26:10"
															},
															"nodeType": "YulIf",
															"src": "4964:81:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5097:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "5111:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5111:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5111:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5061:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5084:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5092:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5081:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5081:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5058:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5058:38:10"
															},
															"nodeType": "YulIf",
															"src": "5055:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4860:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4869:6:10",
														"type": ""
													}
												],
												"src": "4825:320:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5194:238:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5204:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5226:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "5256:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5234:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5234:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5222:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5222:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "5208:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5373:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5375:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5375:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5375:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5316:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5328:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5313:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5313:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5352:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5364:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5349:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5349:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5310:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5310:62:10"
															},
															"nodeType": "YulIf",
															"src": "5307:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5411:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "5415:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5404:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5404:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5404:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5180:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5188:4:10",
														"type": ""
													}
												],
												"src": "5151:281:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5466:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5483:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5486:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5476:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5476:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5476:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5580:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5583:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5573:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5573:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5573:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5604:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5607:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5597:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5597:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5597:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "5438:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5652:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5669:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5672:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5662:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5662:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5662:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5766:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5769:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5759:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5759:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5759:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5790:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5793:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5783:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5783:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5783:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5624:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5899:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5916:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5919:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5909:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5909:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5909:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "5810:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6022:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6039:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6042:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6032:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6032:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6032:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "5933:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6145:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6162:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6165:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6155:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6155:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6155:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "6056:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6268:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6285:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6288:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6278:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6278:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6278:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "6179:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6350:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6360:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6378:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6385:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6374:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6374:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6394:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6390:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6390:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6370:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6370:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6360:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6333:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6343:6:10",
														"type": ""
													}
												],
												"src": "6302:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6516:120:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6538:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6546:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6534:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6534:14:10"
																	},
																	{
																		"hexValue": "455243373231413a206d61782062617463682073697a65206d75737420626520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6550:34:10",
																		"type": "",
																		"value": "ERC721A: max batch size must be "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6527:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6527:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6527:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6606:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6614:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6602:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6602:15:10"
																	},
																	{
																		"hexValue": "6e6f6e7a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6619:9:10",
																		"type": "",
																		"value": "nonzero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6595:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6595:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6595:34:10"
														}
													]
												},
												"name": "store_literal_in_memory_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6508:6:10",
														"type": ""
													}
												],
												"src": "6410:226:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6748:127:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6770:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6778:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6766:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6766:14:10"
																	},
																	{
																		"hexValue": "455243373231413a20636f6c6c656374696f6e206d7573742068617665206120",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6782:34:10",
																		"type": "",
																		"value": "ERC721A: collection must have a "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6759:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6759:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6759:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6838:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6846:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6834:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6834:15:10"
																	},
																	{
																		"hexValue": "6e6f6e7a65726f20737570706c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6851:16:10",
																		"type": "",
																		"value": "nonzero supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6827:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6827:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6827:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6740:6:10",
														"type": ""
													}
												],
												"src": "6642:233:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6924:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6981:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6990:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6993:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6983:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6983:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6983:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6947:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6972:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "6954:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6954:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6944:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6944:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6937:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6937:43:10"
															},
															"nodeType": "YulIf",
															"src": "6934:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6917:5:10",
														"type": ""
													}
												],
												"src": "6881:122:10"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: max batch size must be \")\n\n        mstore(add(memPtr, 32), \"nonzero\")\n\n    }\n\n    function store_literal_in_memory_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: collection must have a \")\n\n        mstore(add(memPtr, 32), \"nonzero supply\")\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c06040526000805560006007553480156200001a57600080fd5b50604051620030743803806200307483398181016040528101906200004091906200025d565b6000811162000086576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200007d906200037d565b60405180910390fd5b60008211620000cc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000c3906200035b565b60405180910390fd5b8360019080519060200190620000e492919062000118565b508260029080519060200190620000fd92919062000118565b508160a08181525050806080818152505050505050620005f6565b82805462000126906200044f565b90600052602060002090601f0160209004810192826200014a576000855562000196565b82601f106200016557805160ff191683800117855562000196565b8280016001018555821562000196579182015b828111156200019557825182559160200191906001019062000178565b5b509050620001a59190620001a9565b5090565b5b80821115620001c4576000816000905550600101620001aa565b5090565b6000620001df620001d984620003c8565b6200039f565b905082815260208101848484011115620001fe57620001fd6200051e565b5b6200020b84828562000419565b509392505050565b600082601f8301126200022b576200022a62000519565b5b81516200023d848260208601620001c8565b91505092915050565b6000815190506200025781620005dc565b92915050565b600080600080608085870312156200027a576200027962000528565b5b600085015167ffffffffffffffff8111156200029b576200029a62000523565b5b620002a98782880162000213565b945050602085015167ffffffffffffffff811115620002cd57620002cc62000523565b5b620002db8782880162000213565b9350506040620002ee8782880162000246565b9250506060620003018782880162000246565b91505092959194509250565b60006200031c602783620003fe565b915062000329826200053e565b604082019050919050565b600062000343602e83620003fe565b915062000350826200058d565b604082019050919050565b6000602082019050818103600083015262000376816200030d565b9050919050565b60006020820190508181036000830152620003988162000334565b9050919050565b6000620003ab620003be565b9050620003b9828262000485565b919050565b6000604051905090565b600067ffffffffffffffff821115620003e657620003e5620004ea565b5b620003f1826200052d565b9050602081019050919050565b600082825260208201905092915050565b6000819050919050565b60005b83811015620004395780820151818401526020810190506200041c565b8381111562000449576000848401525b50505050565b600060028204905060018216806200046857607f821691505b602082108114156200047f576200047e620004bb565b5b50919050565b62000490826200052d565b810181811067ffffffffffffffff82111715620004b257620004b1620004ea565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f455243373231413a206d61782062617463682073697a65206d7573742062652060008201527f6e6f6e7a65726f00000000000000000000000000000000000000000000000000602082015250565b7f455243373231413a20636f6c6c656374696f6e206d757374206861766520612060008201527f6e6f6e7a65726f20737570706c79000000000000000000000000000000000000602082015250565b620005e7816200040f565b8114620005f357600080fd5b50565b60805160a051612a5462000620600039600081816115370152611560015260005050612a546000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80634f6ccce7116100a2578063a22cb46511610071578063a22cb465146102de578063b88d4fde146102fa578063c87b56dd14610316578063d7224ba014610346578063e985e9c5146103645761010b565b80634f6ccce7146102305780636352211e1461026057806370a082311461029057806395d89b41146102c05761010b565b806318160ddd116100de57806318160ddd146101aa57806323b872dd146101c85780632f745c59146101e457806342842e0e146102145761010b565b806301ffc9a71461011057806306fdde0314610140578063081812fc1461015e578063095ea7b31461018e575b600080fd5b61012a60048036038101906101259190611b89565b610394565b6040516101379190611f23565b60405180910390f35b6101486104de565b6040516101559190611f3e565b60405180910390f35b61017860048036038101906101739190611be3565b610570565b6040516101859190611ebc565b60405180910390f35b6101a860048036038101906101a39190611b49565b6105f5565b005b6101b261070e565b6040516101bf9190612140565b60405180910390f35b6101e260048036038101906101dd9190611a33565b610717565b005b6101fe60048036038101906101f99190611b49565b610727565b60405161020b9190612140565b60405180910390f35b61022e60048036038101906102299190611a33565b610925565b005b61024a60048036038101906102459190611be3565b610945565b6040516102579190612140565b60405180910390f35b61027a60048036038101906102759190611be3565b610998565b6040516102879190611ebc565b60405180910390f35b6102aa60048036038101906102a591906119c6565b6109ae565b6040516102b79190612140565b60405180910390f35b6102c8610a97565b6040516102d59190611f3e565b60405180910390f35b6102f860048036038101906102f39190611b09565b610b29565b005b610314600480360381019061030f9190611a86565b610caa565b005b610330600480360381019061032b9190611be3565b610d06565b60405161033d9190611f3e565b60405180910390f35b61034e610d5f565b60405161035b9190612140565b60405180910390f35b61037e600480360381019061037991906119f3565b610d65565b60405161038b9190611f23565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061045f57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104c757507f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104d757506104d682610df9565b5b9050919050565b6060600180546104ed906123e9565b80601f0160208091040260200160405190810160405280929190818152602001828054610519906123e9565b80156105665780601f1061053b57610100808354040283529160200191610566565b820191906000526020600020905b81548152906001019060200180831161054957829003601f168201915b5050505050905090565b600061057b82610e63565b6105ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b190612120565b60405180910390fd5b6005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061060082610998565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610671576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610668906120a0565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610690610e70565b73ffffffffffffffffffffffffffffffffffffffff1614806106bf57506106be816106b9610e70565b610d65565b5b6106fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f590611fe0565b60405180910390fd5b610709838383610e78565b505050565b60008054905090565b610722838383610f2a565b505050565b6000610732836109ae565b8210610773576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076a90611f60565b60405180910390fd5b600061077d61070e565b905060008060005b838110156108e3576000600360008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161461087757806000015192505b8773ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108cf57868414156108c057819550505050505061091f565b83806108cb9061244c565b9450505b5080806108db9061244c565b915050610785565b506040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610916906120e0565b60405180910390fd5b92915050565b61094083838360405180602001604052806000815250610caa565b505050565b600061094f61070e565b8210610990576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098790611fa0565b60405180910390fd5b819050919050565b60006109a3826114e3565b600001519050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1690612000565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff169050919050565b606060028054610aa6906123e9565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad2906123e9565b8015610b1f5780601f10610af457610100808354040283529160200191610b1f565b820191906000526020600020905b815481529060010190602001808311610b0257829003601f168201915b5050505050905090565b610b31610e70565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9690612060565b60405180910390fd5b8060066000610bac610e70565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610c59610e70565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c9e9190611f23565b60405180910390a35050565b610cb5848484610f2a565b610cc1848484846116e6565b610d00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf7906120c0565b60405180910390fd5b50505050565b6060610d1182610e63565b610d50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4790612040565b60405180910390fd5b610d5861187d565b9050919050565b60075481565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000805482109050919050565b600033905090565b826005600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000610f35826114e3565b90506000816000015173ffffffffffffffffffffffffffffffffffffffff16610f5c610e70565b73ffffffffffffffffffffffffffffffffffffffff161480610fb85750610f81610e70565b73ffffffffffffffffffffffffffffffffffffffff16610fa084610570565b73ffffffffffffffffffffffffffffffffffffffff16145b80610fd45750610fd38260000151610fce610e70565b610d65565b5b905080611016576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100d90612080565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff1614611088576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107f90612020565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156110f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ef90611fc0565b60405180910390fd5b6111058585856001611894565b6111156000848460000151610e78565b6001600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a90046fffffffffffffffffffffffffffffffff166111839190612285565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506001600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a90046fffffffffffffffffffffffffffffffff1661122791906121e9565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060405180604001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020014267ffffffffffffffff168152506003600085815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550905050600060018461132d919061222f565b9050600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611473576113a381610e63565b15611472576040518060400160405280846000015173ffffffffffffffffffffffffffffffffffffffff168152602001846020015167ffffffffffffffff168152506003600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050505b5b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46114db868686600161189a565b505050505050565b6114eb6118b3565b6114f482610e63565b611533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152a90611f80565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000083106115975760017f00000000000000000000000000000000000000000000000000000000000000008461158a91906122b9565b611594919061222f565b90505b60008390505b8181106116a5576000600360008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614611691578093505050506116e1565b50808061169d906123bf565b91505061159d565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116d890612100565b60405180910390fd5b919050565b60006117078473ffffffffffffffffffffffffffffffffffffffff166118a0565b15611870578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611730610e70565b8786866040518563ffffffff1660e01b81526004016117529493929190611ed7565b602060405180830381600087803b15801561176c57600080fd5b505af192505050801561179d57506040513d601f19601f8201168201806040525081019061179a9190611bb6565b60015b611820573d80600081146117cd576040519150601f19603f3d011682016040523d82523d6000602084013e6117d2565b606091505b50600081511415611818576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161180f906120c0565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611875565b600190505b949350505050565b606060405180602001604052806000815250905090565b50505050565b50505050565b600080823b905060008111915050919050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff1681525090565b60006119006118fb84612180565b61215b565b90508281526020810184848401111561191c5761191b612527565b5b61192784828561237d565b509392505050565b60008135905061193e816129c2565b92915050565b600081359050611953816129d9565b92915050565b600081359050611968816129f0565b92915050565b60008151905061197d816129f0565b92915050565b600082601f83011261199857611997612522565b5b81356119a88482602086016118ed565b91505092915050565b6000813590506119c081612a07565b92915050565b6000602082840312156119dc576119db612531565b5b60006119ea8482850161192f565b91505092915050565b60008060408385031215611a0a57611a09612531565b5b6000611a188582860161192f565b9250506020611a298582860161192f565b9150509250929050565b600080600060608486031215611a4c57611a4b612531565b5b6000611a5a8682870161192f565b9350506020611a6b8682870161192f565b9250506040611a7c868287016119b1565b9150509250925092565b60008060008060808587031215611aa057611a9f612531565b5b6000611aae8782880161192f565b9450506020611abf8782880161192f565b9350506040611ad0878288016119b1565b925050606085013567ffffffffffffffff811115611af157611af061252c565b5b611afd87828801611983565b91505092959194509250565b60008060408385031215611b2057611b1f612531565b5b6000611b2e8582860161192f565b9250506020611b3f85828601611944565b9150509250929050565b60008060408385031215611b6057611b5f612531565b5b6000611b6e8582860161192f565b9250506020611b7f858286016119b1565b9150509250929050565b600060208284031215611b9f57611b9e612531565b5b6000611bad84828501611959565b91505092915050565b600060208284031215611bcc57611bcb612531565b5b6000611bda8482850161196e565b91505092915050565b600060208284031215611bf957611bf8612531565b5b6000611c07848285016119b1565b91505092915050565b611c19816122ed565b82525050565b611c28816122ff565b82525050565b6000611c39826121b1565b611c4381856121c7565b9350611c5381856020860161238c565b611c5c81612536565b840191505092915050565b6000611c72826121bc565b611c7c81856121d8565b9350611c8c81856020860161238c565b611c9581612536565b840191505092915050565b6000611cad6022836121d8565b9150611cb882612547565b604082019050919050565b6000611cd0602a836121d8565b9150611cdb82612596565b604082019050919050565b6000611cf36023836121d8565b9150611cfe826125e5565b604082019050919050565b6000611d166025836121d8565b9150611d2182612634565b604082019050919050565b6000611d396039836121d8565b9150611d4482612683565b604082019050919050565b6000611d5c602b836121d8565b9150611d67826126d2565b604082019050919050565b6000611d7f6026836121d8565b9150611d8a82612721565b604082019050919050565b6000611da2602f836121d8565b9150611dad82612770565b604082019050919050565b6000611dc5601a836121d8565b9150611dd0826127bf565b602082019050919050565b6000611de86032836121d8565b9150611df3826127e8565b604082019050919050565b6000611e0b6022836121d8565b9150611e1682612837565b604082019050919050565b6000611e2e6033836121d8565b9150611e3982612886565b604082019050919050565b6000611e51602e836121d8565b9150611e5c826128d5565b604082019050919050565b6000611e74602f836121d8565b9150611e7f82612924565b604082019050919050565b6000611e97602d836121d8565b9150611ea282612973565b604082019050919050565b611eb681612373565b82525050565b6000602082019050611ed16000830184611c10565b92915050565b6000608082019050611eec6000830187611c10565b611ef96020830186611c10565b611f066040830185611ead565b8181036060830152611f188184611c2e565b905095945050505050565b6000602082019050611f386000830184611c1f565b92915050565b60006020820190508181036000830152611f588184611c67565b905092915050565b60006020820190508181036000830152611f7981611ca0565b9050919050565b60006020820190508181036000830152611f9981611cc3565b9050919050565b60006020820190508181036000830152611fb981611ce6565b9050919050565b60006020820190508181036000830152611fd981611d09565b9050919050565b60006020820190508181036000830152611ff981611d2c565b9050919050565b6000602082019050818103600083015261201981611d4f565b9050919050565b6000602082019050818103600083015261203981611d72565b9050919050565b6000602082019050818103600083015261205981611d95565b9050919050565b6000602082019050818103600083015261207981611db8565b9050919050565b6000602082019050818103600083015261209981611ddb565b9050919050565b600060208201905081810360008301526120b981611dfe565b9050919050565b600060208201905081810360008301526120d981611e21565b9050919050565b600060208201905081810360008301526120f981611e44565b9050919050565b6000602082019050818103600083015261211981611e67565b9050919050565b6000602082019050818103600083015261213981611e8a565b9050919050565b60006020820190506121556000830184611ead565b92915050565b6000612165612176565b9050612171828261241b565b919050565b6000604051905090565b600067ffffffffffffffff82111561219b5761219a6124f3565b5b6121a482612536565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006121f482612337565b91506121ff83612337565b9250826fffffffffffffffffffffffffffffffff0382111561222457612223612495565b5b828201905092915050565b600061223a82612373565b915061224583612373565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561227a57612279612495565b5b828201905092915050565b600061229082612337565b915061229b83612337565b9250828210156122ae576122ad612495565b5b828203905092915050565b60006122c482612373565b91506122cf83612373565b9250828210156122e2576122e1612495565b5b828203905092915050565b60006122f882612353565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156123aa57808201518184015260208101905061238f565b838111156123b9576000848401525b50505050565b60006123ca82612373565b915060008214156123de576123dd612495565b5b600182039050919050565b6000600282049050600182168061240157607f821691505b60208210811415612415576124146124c4565b5b50919050565b61242482612536565b810181811067ffffffffffffffff82111715612443576124426124f3565b5b80604052505050565b600061245782612373565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561248a57612489612495565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f455243373231413a206f776e657220696e646578206f7574206f6620626f756e60008201527f6473000000000000000000000000000000000000000000000000000000000000602082015250565b7f455243373231413a206f776e657220717565727920666f72206e6f6e6578697360008201527f74656e7420746f6b656e00000000000000000000000000000000000000000000602082015250565b7f455243373231413a20676c6f62616c20696e646578206f7574206f6620626f7560008201527f6e64730000000000000000000000000000000000000000000000000000000000602082015250565b7f455243373231413a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f455243373231413a20617070726f76652063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f76656420666f7220616c6c00000000000000602082015250565b7f455243373231413a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b7f455243373231413a207472616e736665722066726f6d20696e636f727265637460008201527f206f776e65720000000000000000000000000000000000000000000000000000602082015250565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b7f455243373231413a20617070726f766520746f2063616c6c6572000000000000600082015250565b7f455243373231413a207472616e736665722063616c6c6572206973206e6f742060008201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000602082015250565b7f455243373231413a20617070726f76616c20746f2063757272656e74206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b7f455243373231413a207472616e7366657220746f206e6f6e204552433732315260008201527f6563656976657220696d706c656d656e74657200000000000000000000000000602082015250565b7f455243373231413a20756e61626c6520746f2067657420746f6b656e206f662060008201527f6f776e657220627920696e646578000000000000000000000000000000000000602082015250565b7f455243373231413a20756e61626c6520746f2064657465726d696e652074686560008201527f206f776e6572206f6620746f6b656e0000000000000000000000000000000000602082015250565b7f455243373231413a20617070726f76656420717565727920666f72206e6f6e6560008201527f78697374656e7420746f6b656e00000000000000000000000000000000000000602082015250565b6129cb816122ed565b81146129d657600080fd5b50565b6129e2816122ff565b81146129ed57600080fd5b50565b6129f98161230b565b8114612a0457600080fd5b50565b612a1081612373565b8114612a1b57600080fd5b5056fea26469706673582212209ca65088c2dabf463ab340529072e7aaf3e25df99d79cbe8c6dda1172339010f64736f6c63430008070033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SSTORE PUSH1 0x0 PUSH1 0x7 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3074 CODESIZE SUB DUP1 PUSH3 0x3074 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x40 SWAP2 SWAP1 PUSH3 0x25D JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH3 0x86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7D SWAP1 PUSH3 0x37D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH3 0xCC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC3 SWAP1 PUSH3 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xE4 SWAP3 SWAP2 SWAP1 PUSH3 0x118 JUMP JUMPDEST POP DUP3 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xFD SWAP3 SWAP2 SWAP1 PUSH3 0x118 JUMP JUMPDEST POP DUP2 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP POP POP POP POP PUSH3 0x5F6 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x126 SWAP1 PUSH3 0x44F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x14A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x196 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x165 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x196 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x196 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x195 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x178 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x1A5 SWAP2 SWAP1 PUSH3 0x1A9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1C4 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x1AA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1DF PUSH3 0x1D9 DUP5 PUSH3 0x3C8 JUMP JUMPDEST PUSH3 0x39F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1FE JUMPI PUSH3 0x1FD PUSH3 0x51E JUMP JUMPDEST JUMPDEST PUSH3 0x20B DUP5 DUP3 DUP6 PUSH3 0x419 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x22B JUMPI PUSH3 0x22A PUSH3 0x519 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x23D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x1C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x257 DUP2 PUSH3 0x5DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x27A JUMPI PUSH3 0x279 PUSH3 0x528 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x29B JUMPI PUSH3 0x29A PUSH3 0x523 JUMP JUMPDEST JUMPDEST PUSH3 0x2A9 DUP8 DUP3 DUP9 ADD PUSH3 0x213 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2CD JUMPI PUSH3 0x2CC PUSH3 0x523 JUMP JUMPDEST JUMPDEST PUSH3 0x2DB DUP8 DUP3 DUP9 ADD PUSH3 0x213 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x2EE DUP8 DUP3 DUP9 ADD PUSH3 0x246 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x301 DUP8 DUP3 DUP9 ADD PUSH3 0x246 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x31C PUSH1 0x27 DUP4 PUSH3 0x3FE JUMP JUMPDEST SWAP2 POP PUSH3 0x329 DUP3 PUSH3 0x53E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x343 PUSH1 0x2E DUP4 PUSH3 0x3FE JUMP JUMPDEST SWAP2 POP PUSH3 0x350 DUP3 PUSH3 0x58D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x376 DUP2 PUSH3 0x30D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x398 DUP2 PUSH3 0x334 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3AB PUSH3 0x3BE JUMP JUMPDEST SWAP1 POP PUSH3 0x3B9 DUP3 DUP3 PUSH3 0x485 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x3E6 JUMPI PUSH3 0x3E5 PUSH3 0x4EA JUMP JUMPDEST JUMPDEST PUSH3 0x3F1 DUP3 PUSH3 0x52D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x439 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x41C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x449 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x468 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x47F JUMPI PUSH3 0x47E PUSH3 0x4BB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x490 DUP3 PUSH3 0x52D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x4B2 JUMPI PUSH3 0x4B1 PUSH3 0x4EA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A206D61782062617463682073697A65206D75737420626520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6F6E7A65726F00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231413A20636F6C6C656374696F6E206D7573742068617665206120 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6F6E7A65726F20737570706C79000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH3 0x5E7 DUP2 PUSH3 0x40F JUMP JUMPDEST DUP2 EQ PUSH3 0x5F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x2A54 PUSH3 0x620 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x1537 ADD MSTORE PUSH2 0x1560 ADD MSTORE PUSH1 0x0 POP POP PUSH2 0x2A54 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F6CCCE7 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0xD7224BA0 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x364 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2C0 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x214 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH2 0x394 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1F3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1BE3 JUMP JUMPDEST PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x1EBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1B49 JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B2 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x2140 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1B49 JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x2140 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH2 0x925 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1BE3 JUMP JUMPDEST PUSH2 0x945 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x2140 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x1BE3 JUMP JUMPDEST PUSH2 0x998 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1EBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x19C6 JUMP JUMPDEST PUSH2 0x9AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x2140 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x1F3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x1B09 JUMP JUMPDEST PUSH2 0xB29 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH2 0xCAA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x1BE3 JUMP JUMPDEST PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x1F3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34E PUSH2 0xD5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x2140 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0xD65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x45F JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4C7 JUMPI POP PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4D7 JUMPI POP PUSH2 0x4D6 DUP3 PUSH2 0xDF9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x4ED SWAP1 PUSH2 0x23E9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x519 SWAP1 PUSH2 0x23E9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x566 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x53B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x566 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x549 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57B DUP3 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B1 SWAP1 PUSH2 0x2120 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x600 DUP3 PUSH2 0x998 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x671 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x668 SWAP1 PUSH2 0x20A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x690 PUSH2 0xE70 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6BF JUMPI POP PUSH2 0x6BE DUP2 PUSH2 0x6B9 PUSH2 0xE70 JUMP JUMPDEST PUSH2 0xD65 JUMP JUMPDEST JUMPDEST PUSH2 0x6FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F5 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x709 DUP4 DUP4 DUP4 PUSH2 0xE78 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x722 DUP4 DUP4 DUP4 PUSH2 0xF2A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x732 DUP4 PUSH2 0x9AE JUMP JUMPDEST DUP3 LT PUSH2 0x773 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76A SWAP1 PUSH2 0x1F60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x77D PUSH2 0x70E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x877 JUMPI DUP1 PUSH1 0x0 ADD MLOAD SWAP3 POP JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8CF JUMPI DUP7 DUP5 EQ ISZERO PUSH2 0x8C0 JUMPI DUP2 SWAP6 POP POP POP POP POP POP PUSH2 0x91F JUMP JUMPDEST DUP4 DUP1 PUSH2 0x8CB SWAP1 PUSH2 0x244C JUMP JUMPDEST SWAP5 POP POP JUMPDEST POP DUP1 DUP1 PUSH2 0x8DB SWAP1 PUSH2 0x244C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x785 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x916 SWAP1 PUSH2 0x20E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x940 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xCAA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94F PUSH2 0x70E JUMP JUMPDEST DUP3 LT PUSH2 0x990 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x987 SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A3 DUP3 PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA16 SWAP1 PUSH2 0x2000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0xAA6 SWAP1 PUSH2 0x23E9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAD2 SWAP1 PUSH2 0x23E9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB1F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAF4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB1F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB02 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB31 PUSH2 0xE70 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB96 SWAP1 PUSH2 0x2060 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0xBAC PUSH2 0xE70 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC59 PUSH2 0xE70 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC9E SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCB5 DUP5 DUP5 DUP5 PUSH2 0xF2A JUMP JUMPDEST PUSH2 0xCC1 DUP5 DUP5 DUP5 DUP5 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0xD00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF7 SWAP1 PUSH2 0x20C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD11 DUP3 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD47 SWAP1 PUSH2 0x2040 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD58 PUSH2 0x187D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF35 DUP3 PUSH2 0x14E3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF5C PUSH2 0xE70 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xFB8 JUMPI POP PUSH2 0xF81 PUSH2 0xE70 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFA0 DUP5 PUSH2 0x570 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xFD4 JUMPI POP PUSH2 0xFD3 DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0xFCE PUSH2 0xE70 JUMP JUMPDEST PUSH2 0xD65 JUMP JUMPDEST JUMPDEST SWAP1 POP DUP1 PUSH2 0x1016 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100D SWAP1 PUSH2 0x2080 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1088 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107F SWAP1 PUSH2 0x2020 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x10F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10EF SWAP1 PUSH2 0x1FC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1105 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x1115 PUSH1 0x0 DUP5 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0xE78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1183 SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1227 SWAP2 SWAP1 PUSH2 0x21E9 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x132D SWAP2 SWAP1 PUSH2 0x222F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1473 JUMPI PUSH2 0x13A3 DUP2 PUSH2 0xE63 JUMP JUMPDEST ISZERO PUSH2 0x1472 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP JUMPDEST JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x14DB DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x189A JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14EB PUSH2 0x18B3 JUMP JUMPDEST PUSH2 0x14F4 DUP3 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x1533 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152A SWAP1 PUSH2 0x1F80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP4 LT PUSH2 0x1597 JUMPI PUSH1 0x1 PUSH32 0x0 DUP5 PUSH2 0x158A SWAP2 SWAP1 PUSH2 0x22B9 JUMP JUMPDEST PUSH2 0x1594 SWAP2 SWAP1 PUSH2 0x222F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP JUMPDEST DUP2 DUP2 LT PUSH2 0x16A5 JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1691 JUMPI DUP1 SWAP4 POP POP POP POP PUSH2 0x16E1 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x169D SWAP1 PUSH2 0x23BF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x159D JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D8 SWAP1 PUSH2 0x2100 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1707 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18A0 JUMP JUMPDEST ISZERO PUSH2 0x1870 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1730 PUSH2 0xE70 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1752 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ED7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x176C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x179D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x179A SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1820 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x17CD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17D2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1818 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x180F SWAP1 PUSH2 0x20C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1900 PUSH2 0x18FB DUP5 PUSH2 0x2180 JUMP JUMPDEST PUSH2 0x215B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x191C JUMPI PUSH2 0x191B PUSH2 0x2527 JUMP JUMPDEST JUMPDEST PUSH2 0x1927 DUP5 DUP3 DUP6 PUSH2 0x237D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x193E DUP2 PUSH2 0x29C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1953 DUP2 PUSH2 0x29D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1968 DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x197D DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1998 JUMPI PUSH2 0x1997 PUSH2 0x2522 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19A8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x18ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19C0 DUP2 PUSH2 0x2A07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19DC JUMPI PUSH2 0x19DB PUSH2 0x2531 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19EA DUP5 DUP3 DUP6 ADD PUSH2 0x192F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A0A JUMPI PUSH2 0x1A09 PUSH2 0x2531 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A18 DUP6 DUP3 DUP7 ADD PUSH2 0x192F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A29 DUP6 DUP3 DUP7 ADD PUSH2 0x192F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A4C JUMPI PUSH2 0x1A4B PUSH2 0x2531 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A5A DUP7 DUP3 DUP8 ADD PUSH2 0x192F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A6B DUP7 DUP3 DUP8 ADD PUSH2 0x192F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A7C DUP7 DUP3 DUP8 ADD PUSH2 0x19B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1AA0 JUMPI PUSH2 0x1A9F PUSH2 0x2531 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AAE DUP8 DUP3 DUP9 ADD PUSH2 0x192F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1ABF DUP8 DUP3 DUP9 ADD PUSH2 0x192F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1AD0 DUP8 DUP3 DUP9 ADD PUSH2 0x19B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AF1 JUMPI PUSH2 0x1AF0 PUSH2 0x252C JUMP JUMPDEST JUMPDEST PUSH2 0x1AFD DUP8 DUP3 DUP9 ADD PUSH2 0x1983 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B20 JUMPI PUSH2 0x1B1F PUSH2 0x2531 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B2E DUP6 DUP3 DUP7 ADD PUSH2 0x192F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B3F DUP6 DUP3 DUP7 ADD PUSH2 0x1944 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B60 JUMPI PUSH2 0x1B5F PUSH2 0x2531 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B6E DUP6 DUP3 DUP7 ADD PUSH2 0x192F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B7F DUP6 DUP3 DUP7 ADD PUSH2 0x19B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B9F JUMPI PUSH2 0x1B9E PUSH2 0x2531 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BAD DUP5 DUP3 DUP6 ADD PUSH2 0x1959 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BCC JUMPI PUSH2 0x1BCB PUSH2 0x2531 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BDA DUP5 DUP3 DUP6 ADD PUSH2 0x196E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BF9 JUMPI PUSH2 0x1BF8 PUSH2 0x2531 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C07 DUP5 DUP3 DUP6 ADD PUSH2 0x19B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C19 DUP2 PUSH2 0x22ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1C28 DUP2 PUSH2 0x22FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C39 DUP3 PUSH2 0x21B1 JUMP JUMPDEST PUSH2 0x1C43 DUP2 DUP6 PUSH2 0x21C7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C53 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x238C JUMP JUMPDEST PUSH2 0x1C5C DUP2 PUSH2 0x2536 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C72 DUP3 PUSH2 0x21BC JUMP JUMPDEST PUSH2 0x1C7C DUP2 DUP6 PUSH2 0x21D8 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C8C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x238C JUMP JUMPDEST PUSH2 0x1C95 DUP2 PUSH2 0x2536 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CAD PUSH1 0x22 DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB8 DUP3 PUSH2 0x2547 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD0 PUSH1 0x2A DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CDB DUP3 PUSH2 0x2596 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF3 PUSH1 0x23 DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CFE DUP3 PUSH2 0x25E5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D16 PUSH1 0x25 DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D21 DUP3 PUSH2 0x2634 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D39 PUSH1 0x39 DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D44 DUP3 PUSH2 0x2683 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5C PUSH1 0x2B DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D67 DUP3 PUSH2 0x26D2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7F PUSH1 0x26 DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D8A DUP3 PUSH2 0x2721 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA2 PUSH1 0x2F DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAD DUP3 PUSH2 0x2770 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC5 PUSH1 0x1A DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD0 DUP3 PUSH2 0x27BF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DE8 PUSH1 0x32 DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF3 DUP3 PUSH2 0x27E8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0B PUSH1 0x22 DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E16 DUP3 PUSH2 0x2837 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E2E PUSH1 0x33 DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E39 DUP3 PUSH2 0x2886 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E51 PUSH1 0x2E DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E5C DUP3 PUSH2 0x28D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E74 PUSH1 0x2F DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E7F DUP3 PUSH2 0x2924 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E97 PUSH1 0x2D DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EA2 DUP3 PUSH2 0x2973 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EB6 DUP2 PUSH2 0x2373 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ED1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1EEC PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1C10 JUMP JUMPDEST PUSH2 0x1EF9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1C10 JUMP JUMPDEST PUSH2 0x1F06 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1EAD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1F18 DUP2 DUP5 PUSH2 0x1C2E JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F38 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F58 DUP2 DUP5 PUSH2 0x1C67 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F79 DUP2 PUSH2 0x1CA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F99 DUP2 PUSH2 0x1CC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FB9 DUP2 PUSH2 0x1CE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FD9 DUP2 PUSH2 0x1D09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FF9 DUP2 PUSH2 0x1D2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2019 DUP2 PUSH2 0x1D4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2039 DUP2 PUSH2 0x1D72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2059 DUP2 PUSH2 0x1D95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2079 DUP2 PUSH2 0x1DB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2099 DUP2 PUSH2 0x1DDB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20B9 DUP2 PUSH2 0x1DFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20D9 DUP2 PUSH2 0x1E21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20F9 DUP2 PUSH2 0x1E44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2119 DUP2 PUSH2 0x1E67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2139 DUP2 PUSH2 0x1E8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2155 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2165 PUSH2 0x2176 JUMP JUMPDEST SWAP1 POP PUSH2 0x2171 DUP3 DUP3 PUSH2 0x241B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x219B JUMPI PUSH2 0x219A PUSH2 0x24F3 JUMP JUMPDEST JUMPDEST PUSH2 0x21A4 DUP3 PUSH2 0x2536 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21F4 DUP3 PUSH2 0x2337 JUMP JUMPDEST SWAP2 POP PUSH2 0x21FF DUP4 PUSH2 0x2337 JUMP JUMPDEST SWAP3 POP DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2224 JUMPI PUSH2 0x2223 PUSH2 0x2495 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x223A DUP3 PUSH2 0x2373 JUMP JUMPDEST SWAP2 POP PUSH2 0x2245 DUP4 PUSH2 0x2373 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x227A JUMPI PUSH2 0x2279 PUSH2 0x2495 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2290 DUP3 PUSH2 0x2337 JUMP JUMPDEST SWAP2 POP PUSH2 0x229B DUP4 PUSH2 0x2337 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x22AE JUMPI PUSH2 0x22AD PUSH2 0x2495 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22C4 DUP3 PUSH2 0x2373 JUMP JUMPDEST SWAP2 POP PUSH2 0x22CF DUP4 PUSH2 0x2373 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x22E2 JUMPI PUSH2 0x22E1 PUSH2 0x2495 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22F8 DUP3 PUSH2 0x2353 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23AA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x238F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x23B9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23CA DUP3 PUSH2 0x2373 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x23DE JUMPI PUSH2 0x23DD PUSH2 0x2495 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2401 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2415 JUMPI PUSH2 0x2414 PUSH2 0x24C4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2424 DUP3 PUSH2 0x2536 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2443 JUMPI PUSH2 0x2442 PUSH2 0x24F3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2457 DUP3 PUSH2 0x2373 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x248A JUMPI PUSH2 0x2489 PUSH2 0x2495 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A206F776E657220696E646578206F7574206F6620626F756E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6473000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231413A206F776E657220717565727920666F72206E6F6E65786973 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74656E7420746F6B656E00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231413A20676C6F62616C20696E646578206F7574206F6620626F75 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E64730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231413A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231413A20617070726F76652063616C6C6572206973206E6F74206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F76656420666F7220616C6C00000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231413A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231413A207472616E736665722066726F6D20696E636F7272656374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206F776E65720000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231413A20617070726F766520746F2063616C6C6572000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231413A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231413A20617070726F76616C20746F2063757272656E74206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231413A207472616E7366657220746F206E6F6E2045524337323152 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6563656976657220696D706C656D656E74657200000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231413A20756E61626C6520746F2067657420746F6B656E206F6620 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E657220627920696E646578000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231413A20756E61626C6520746F2064657465726D696E6520746865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206F776E6572206F6620746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231413A20617070726F76656420717565727920666F72206E6F6E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x78697374656E7420746F6B656E00000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x29CB DUP2 PUSH2 0x22ED JUMP JUMPDEST DUP2 EQ PUSH2 0x29D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x29E2 DUP2 PUSH2 0x22FF JUMP JUMPDEST DUP2 EQ PUSH2 0x29ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x29F9 DUP2 PUSH2 0x230B JUMP JUMPDEST DUP2 EQ PUSH2 0x2A04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2A10 DUP2 PUSH2 0x2373 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xA6 POP DUP9 0xC2 0xDA 0xBF CHAINID GASPRICE 0xB3 BLOCKHASH MSTORE SWAP1 PUSH19 0xE7AAF3E25DF99D79CBE8C6DDA1172339010F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "1055:14854:9:-:0;;;1391:1;1360:32;;12690:1;12648:43;;2285:420;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2448:1;2430:15;:19;2415:96;;;;;;;;;;;;:::i;:::-;;;;;;;;;2541:1;2525:13;:17;2517:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2600:5;2592;:13;;;;;;;;;;;;:::i;:::-;;2621:7;2611;:17;;;;;;;;;;;;:::i;:::-;;2649:13;2634:28;;;;;;2685:15;2668:32;;;;;;2285:420;;;;1055:14854;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:10:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:143::-;866:5;897:6;891:13;882:22;;913:33;940:5;913:33;:::i;:::-;809:143;;;;:::o;958:1166::-;1075:6;1083;1091;1099;1148:3;1136:9;1127:7;1123:23;1119:33;1116:120;;;1155:79;;:::i;:::-;1116:120;1296:1;1285:9;1281:17;1275:24;1326:18;1318:6;1315:30;1312:117;;;1348:79;;:::i;:::-;1312:117;1453:74;1519:7;1510:6;1499:9;1495:22;1453:74;:::i;:::-;1443:84;;1246:291;1597:2;1586:9;1582:18;1576:25;1628:18;1620:6;1617:30;1614:117;;;1650:79;;:::i;:::-;1614:117;1755:74;1821:7;1812:6;1801:9;1797:22;1755:74;:::i;:::-;1745:84;;1547:292;1878:2;1904:64;1960:7;1951:6;1940:9;1936:22;1904:64;:::i;:::-;1894:74;;1849:129;2017:2;2043:64;2099:7;2090:6;2079:9;2075:22;2043:64;:::i;:::-;2033:74;;1988:129;958:1166;;;;;;;:::o;2130:366::-;2272:3;2293:67;2357:2;2352:3;2293:67;:::i;:::-;2286:74;;2369:93;2458:3;2369:93;:::i;:::-;2487:2;2482:3;2478:12;2471:19;;2130:366;;;:::o;2502:::-;2644:3;2665:67;2729:2;2724:3;2665:67;:::i;:::-;2658:74;;2741:93;2830:3;2741:93;:::i;:::-;2859:2;2854:3;2850:12;2843:19;;2502:366;;;:::o;2874:419::-;3040:4;3078:2;3067:9;3063:18;3055:26;;3127:9;3121:4;3117:20;3113:1;3102:9;3098:17;3091:47;3155:131;3281:4;3155:131;:::i;:::-;3147:139;;2874:419;;;:::o;3299:::-;3465:4;3503:2;3492:9;3488:18;3480:26;;3552:9;3546:4;3542:20;3538:1;3527:9;3523:17;3516:47;3580:131;3706:4;3580:131;:::i;:::-;3572:139;;3299:419;;;:::o;3724:129::-;3758:6;3785:20;;:::i;:::-;3775:30;;3814:33;3842:4;3834:6;3814:33;:::i;:::-;3724:129;;;:::o;3859:75::-;3892:6;3925:2;3919:9;3909:19;;3859:75;:::o;3940:308::-;4002:4;4092:18;4084:6;4081:30;4078:56;;;4114:18;;:::i;:::-;4078:56;4152:29;4174:6;4152:29;:::i;:::-;4144:37;;4236:4;4230;4226:15;4218:23;;3940:308;;;:::o;4254:169::-;4338:11;4372:6;4367:3;4360:19;4412:4;4407:3;4403:14;4388:29;;4254:169;;;;:::o;4429:77::-;4466:7;4495:5;4484:16;;4429:77;;;:::o;4512:307::-;4580:1;4590:113;4604:6;4601:1;4598:13;4590:113;;;4689:1;4684:3;4680:11;4674:18;4670:1;4665:3;4661:11;4654:39;4626:2;4623:1;4619:10;4614:15;;4590:113;;;4721:6;4718:1;4715:13;4712:101;;;4801:1;4792:6;4787:3;4783:16;4776:27;4712:101;4561:258;4512:307;;;:::o;4825:320::-;4869:6;4906:1;4900:4;4896:12;4886:22;;4953:1;4947:4;4943:12;4974:18;4964:81;;5030:4;5022:6;5018:17;5008:27;;4964:81;5092:2;5084:6;5081:14;5061:18;5058:38;5055:84;;;5111:18;;:::i;:::-;5055:84;4876:269;4825:320;;;:::o;5151:281::-;5234:27;5256:4;5234:27;:::i;:::-;5226:6;5222:40;5364:6;5352:10;5349:22;5328:18;5316:10;5313:34;5310:62;5307:88;;;5375:18;;:::i;:::-;5307:88;5415:10;5411:2;5404:22;5194:238;5151:281;;:::o;5438:180::-;5486:77;5483:1;5476:88;5583:4;5580:1;5573:15;5607:4;5604:1;5597:15;5624:180;5672:77;5669:1;5662:88;5769:4;5766:1;5759:15;5793:4;5790:1;5783:15;5810:117;5919:1;5916;5909:12;5933:117;6042:1;6039;6032:12;6056:117;6165:1;6162;6155:12;6179:117;6288:1;6285;6278:12;6302:102;6343:6;6394:2;6390:7;6385:2;6378:5;6374:14;6370:28;6360:38;;6302:102;;;:::o;6410:226::-;6550:34;6546:1;6538:6;6534:14;6527:58;6619:9;6614:2;6606:6;6602:15;6595:34;6410:226;:::o;6642:233::-;6782:34;6778:1;6770:6;6766:14;6759:58;6851:16;6846:2;6838:6;6834:15;6827:41;6642:233;:::o;6881:122::-;6954:24;6972:5;6954:24;:::i;:::-;6947:5;6944:35;6934:63;;6993:1;6990;6983:12;6934:63;6881:122;:::o;1055:14854:9:-;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1921": {
									"entryPoint": 6298,
									"id": 1921,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_1735": {
									"entryPoint": 3704,
									"id": 1735,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_1201": {
									"entryPoint": 6269,
									"id": 1201,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1908": {
									"entryPoint": 6292,
									"id": 1908,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1895": {
									"entryPoint": 5862,
									"id": 1895,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_1398": {
									"entryPoint": 3683,
									"id": 1398,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_500": {
									"entryPoint": 3696,
									"id": 500,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_1712": {
									"entryPoint": 3882,
									"id": 1712,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_1245": {
									"entryPoint": 1525,
									"id": 1245,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1045": {
									"entryPoint": 2478,
									"id": 1045,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_1266": {
									"entryPoint": 1392,
									"id": 1266,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1318": {
									"entryPoint": 3429,
									"id": 1318,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_211": {
									"entryPoint": 6304,
									"id": 211,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_1162": {
									"entryPoint": 1246,
									"id": 1162,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nextOwnerToExplicitlySet_1738": {
									"entryPoint": 3423,
									"id": 1738,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerOf_1152": {
									"entryPoint": 2456,
									"id": 1152,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ownershipOf_1137": {
									"entryPoint": 5347,
									"id": 1137,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1355": {
									"entryPoint": 2341,
									"id": 1355,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1385": {
									"entryPoint": 3242,
									"id": 1385,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1300": {
									"entryPoint": 2857,
									"id": 1300,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1017": {
									"entryPoint": 916,
									"id": 1017,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_736": {
									"entryPoint": 3577,
									"id": 736,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1172": {
									"entryPoint": 2711,
									"id": 1172,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenByIndex_890": {
									"entryPoint": 2373,
									"id": 890,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenOfOwnerByIndex_979": {
									"entryPoint": 1831,
									"id": 979,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tokenURI_1192": {
									"entryPoint": 3334,
									"id": 1192,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_870": {
									"entryPoint": 1806,
									"id": 870,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1336": {
									"entryPoint": 1815,
									"id": 1336,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6381,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 6510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6577,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 6790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 7094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7895,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 8566,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 8576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint128": {
									"entryPoint": 8681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint128": {
									"entryPoint": 8837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 8971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint128": {
									"entryPoint": 9015,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 9075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 9085,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 9100,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 9151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 9193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 9243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 9292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9365,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9412,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9459,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 9506,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 9511,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 9516,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 9521,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 9526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3": {
									"entryPoint": 9543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79": {
									"entryPoint": 9622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a": {
									"entryPoint": 9701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b": {
									"entryPoint": 9780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c": {
									"entryPoint": 9859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e": {
									"entryPoint": 9938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8": {
									"entryPoint": 10017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb": {
									"entryPoint": 10096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57": {
									"entryPoint": 10175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c": {
									"entryPoint": 10216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a": {
									"entryPoint": 10295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed": {
									"entryPoint": 10374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c": {
									"entryPoint": 10453,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040": {
									"entryPoint": 10532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94": {
									"entryPoint": 10611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 10690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 10736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:29970:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:327:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:74:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "125:40:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:48:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "109:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:65:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "190:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "217:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "280:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "280:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "280:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "259:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "255:16:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "252:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:25:10"
															},
															"nodeType": "YulIf",
															"src": "249:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "394:3:10"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "399:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "404:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "370:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "370:41:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:10",
														"type": ""
													}
												],
												"src": "7:410:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "507:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "494:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "485:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "523:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "453:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "461:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:10",
														"type": ""
													}
												],
												"src": "423:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "617:84:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "627:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "649:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "636:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "665:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "665:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "603:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:10",
														"type": ""
													}
												],
												"src": "568:133:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "758:86:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "768:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "790:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "777:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "777:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "768:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "832:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "806:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "806:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "806:32:10"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "736:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "744:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "752:5:10",
														"type": ""
													}
												],
												"src": "707:137:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "912:79:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "922:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "937:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "931:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "931:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "922:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "979:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "953:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "953:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "953:32:10"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "890:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "898:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "906:5:10",
														"type": ""
													}
												],
												"src": "850:141:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1071:277:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1120:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1122:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1122:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1122:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1099:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1107:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1095:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1095:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1114:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1091:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1091:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1084:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1084:35:10"
															},
															"nodeType": "YulIf",
															"src": "1081:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1212:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1239:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1226:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1226:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1216:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1255:87:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1315:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1323:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1311:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1330:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1338:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1264:46:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1264:78:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1255:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1049:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1057:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1065:5:10",
														"type": ""
													}
												],
												"src": "1010:338:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1406:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1416:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1438:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1425:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1425:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1416:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1481:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1454:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1454:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1384:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1392:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1400:5:10",
														"type": ""
													}
												],
												"src": "1354:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1565:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1611:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1613:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1613:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1613:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1586:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1595:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1582:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1582:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1607:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1578:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1578:32:10"
															},
															"nodeType": "YulIf",
															"src": "1575:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "1704:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1719:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1733:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1723:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1748:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1783:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1794:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1779:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1779:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1803:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1758:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1758:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1748:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1535:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1546:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1558:6:10",
														"type": ""
													}
												],
												"src": "1499:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1917:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1963:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1965:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1965:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1938:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1947:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1934:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1934:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1959:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1930:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1930:32:10"
															},
															"nodeType": "YulIf",
															"src": "1927:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "2056:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2071:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2085:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2075:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2100:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2135:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2146:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2131:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2131:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2155:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2110:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2110:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2100:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2183:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2198:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2212:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2202:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2228:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2263:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2274:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2259:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2259:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2283:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2238:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2238:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2228:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1879:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1890:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1902:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1910:6:10",
														"type": ""
													}
												],
												"src": "1834:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2414:519:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2460:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2462:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2462:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2462:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2435:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2444:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2431:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2431:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2456:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2427:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2427:32:10"
															},
															"nodeType": "YulIf",
															"src": "2424:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "2553:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2568:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2582:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2572:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2597:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2632:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2643:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2628:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2628:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2652:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2607:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2607:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2597:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2680:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2695:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2709:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2699:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2725:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2760:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2771:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2756:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2756:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2780:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2735:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2735:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2725:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2808:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2823:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2837:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2827:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2853:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2888:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2899:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2884:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2884:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2908:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2863:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2863:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2853:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2368:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2379:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2391:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2399:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2407:6:10",
														"type": ""
													}
												],
												"src": "2314:619:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3065:817:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3112:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3114:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3114:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3114:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3086:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3095:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3082:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3082:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3107:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3078:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3078:33:10"
															},
															"nodeType": "YulIf",
															"src": "3075:120:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "3205:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3220:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3234:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3224:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3249:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3284:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3295:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3280:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3280:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3304:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3259:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3259:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3249:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3332:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3347:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3361:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3351:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3377:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3412:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3423:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3408:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3408:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3432:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3387:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3387:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3377:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3460:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3475:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3489:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3479:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3505:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3540:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3551:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3536:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3536:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3560:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3515:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3515:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3505:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3588:287:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3603:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3634:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3645:2:10",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3630:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3630:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3617:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3617:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3607:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3696:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3698:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3698:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3698:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3668:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3676:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3665:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3665:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "3662:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3793:72:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3837:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3848:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3833:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3833:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3857:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3803:29:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3803:62:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3793:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3011:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3022:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3034:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3042:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3050:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3058:6:10",
														"type": ""
													}
												],
												"src": "2939:943:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3968:388:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4014:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4016:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4016:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4016:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3989:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3998:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3985:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3985:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4010:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3981:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:32:10"
															},
															"nodeType": "YulIf",
															"src": "3978:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "4107:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4122:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4136:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4126:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4151:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4186:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4197:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4182:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4182:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4206:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4161:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4161:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4151:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4234:115:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4249:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4263:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4253:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4279:60:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4311:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4322:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4307:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4307:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4331:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4289:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4289:50:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4279:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3930:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3941:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3953:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3961:6:10",
														"type": ""
													}
												],
												"src": "3888:468:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4445:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4491:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4493:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4493:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4493:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4466:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4475:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4462:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4462:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4487:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4458:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4458:32:10"
															},
															"nodeType": "YulIf",
															"src": "4455:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "4584:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4599:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4613:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4603:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4628:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4663:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4674:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4659:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4659:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4683:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4638:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4638:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4628:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4711:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4726:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4740:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4730:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4756:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4791:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4802:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4787:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4787:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4811:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4766:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4766:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4756:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4407:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4418:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4430:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4438:6:10",
														"type": ""
													}
												],
												"src": "4362:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4907:262:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4953:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4955:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4955:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4955:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4928:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4937:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4924:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4924:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4949:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4920:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4920:32:10"
															},
															"nodeType": "YulIf",
															"src": "4917:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "5046:116:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5061:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5075:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5065:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5090:62:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5124:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5135:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5120:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5120:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5144:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "5100:19:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5100:52:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5090:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4877:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4888:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4900:6:10",
														"type": ""
													}
												],
												"src": "4842:327:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5251:273:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5297:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5299:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5299:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5299:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5272:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5268:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5268:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5293:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5264:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5264:32:10"
															},
															"nodeType": "YulIf",
															"src": "5261:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "5390:127:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5405:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5419:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5409:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5434:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5479:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5490:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5475:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5475:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5499:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5444:30:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5444:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5434:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5221:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5232:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5244:6:10",
														"type": ""
													}
												],
												"src": "5175:349:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5596:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5642:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5644:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5644:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5644:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5617:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5626:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5613:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5613:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5638:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5609:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5609:32:10"
															},
															"nodeType": "YulIf",
															"src": "5606:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "5735:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5750:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5764:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5754:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5779:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5814:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5825:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5810:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5810:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5834:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5789:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5789:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5779:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5566:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5577:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5589:6:10",
														"type": ""
													}
												],
												"src": "5530:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5930:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5947:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5970:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5952:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5952:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5940:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5940:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5940:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5918:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5925:3:10",
														"type": ""
													}
												],
												"src": "5865:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6048:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6065:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6085:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6070:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6070:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6058:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6058:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6058:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6036:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6043:3:10",
														"type": ""
													}
												],
												"src": "5989:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6194:270:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6204:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6250:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6218:31:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6218:38:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6208:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6265:77:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6330:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6335:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6272:57:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6272:70:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6265:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6377:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6384:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6373:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6373:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6391:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6396:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6351:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6351:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6351:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6412:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6423:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6450:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6428:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6428:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6419:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6419:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6412:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6175:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6182:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6190:3:10",
														"type": ""
													}
												],
												"src": "6104:360:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6562:272:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6572:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6619:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6586:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6586:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6576:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6634:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6700:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6705:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6641:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6641:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6634:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6747:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6754:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6743:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6743:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6761:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6766:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6721:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6721:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6721:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6782:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6793:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6820:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6798:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6798:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6789:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6789:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6782:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6543:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6550:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6558:3:10",
														"type": ""
													}
												],
												"src": "6470:364:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6986:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6996:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7062:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7067:2:10",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7003:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7003:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6996:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7168:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3",
																	"nodeType": "YulIdentifier",
																	"src": "7079:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7079:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7079:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7181:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7192:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7197:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7188:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7188:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7181:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6974:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6982:3:10",
														"type": ""
													}
												],
												"src": "6840:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7358:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7368:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7434:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7439:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7375:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7375:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7368:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7540:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79",
																	"nodeType": "YulIdentifier",
																	"src": "7451:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7451:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7451:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7553:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7564:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7569:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7560:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7560:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7553:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7346:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7354:3:10",
														"type": ""
													}
												],
												"src": "7212:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7730:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7740:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7806:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7811:2:10",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7747:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7747:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7740:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7912:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a",
																	"nodeType": "YulIdentifier",
																	"src": "7823:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7823:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7823:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7925:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7936:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7941:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7932:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7932:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7925:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7718:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7726:3:10",
														"type": ""
													}
												],
												"src": "7584:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8102:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8112:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8178:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8183:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8119:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8119:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8112:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8284:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b",
																	"nodeType": "YulIdentifier",
																	"src": "8195:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8195:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8195:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8297:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8308:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8313:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8304:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8304:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8297:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8090:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8098:3:10",
														"type": ""
													}
												],
												"src": "7956:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8474:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8484:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8550:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8555:2:10",
																		"type": "",
																		"value": "57"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8491:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8491:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8484:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c",
																	"nodeType": "YulIdentifier",
																	"src": "8567:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8567:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8567:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8669:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8680:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8685:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8676:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8676:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8669:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8462:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8470:3:10",
														"type": ""
													}
												],
												"src": "8328:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8846:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8856:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8922:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8927:2:10",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8863:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8863:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8856:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9028:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e",
																	"nodeType": "YulIdentifier",
																	"src": "8939:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8939:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8939:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9041:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9052:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9057:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9048:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9048:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9041:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8834:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8842:3:10",
														"type": ""
													}
												],
												"src": "8700:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9218:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9228:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9294:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9299:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9235:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9235:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9228:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9400:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8",
																	"nodeType": "YulIdentifier",
																	"src": "9311:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9311:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9311:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9413:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9424:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9429:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9420:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9420:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9413:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9206:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9214:3:10",
														"type": ""
													}
												],
												"src": "9072:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9590:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9600:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9666:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9671:2:10",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9607:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9607:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9600:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9772:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																	"nodeType": "YulIdentifier",
																	"src": "9683:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9683:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9683:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9785:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9796:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9801:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9792:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9792:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9785:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9578:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9586:3:10",
														"type": ""
													}
												],
												"src": "9444:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9962:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9972:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10038:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10043:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9979:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9979:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9972:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10144:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57",
																	"nodeType": "YulIdentifier",
																	"src": "10055:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10055:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10055:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10157:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10168:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10173:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10164:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10164:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10157:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9950:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9958:3:10",
														"type": ""
													}
												],
												"src": "9816:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10334:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10344:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10410:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10415:2:10",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10351:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10351:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10344:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10516:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c",
																	"nodeType": "YulIdentifier",
																	"src": "10427:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10427:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10427:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10529:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10540:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10545:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10536:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10536:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10529:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10322:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10330:3:10",
														"type": ""
													}
												],
												"src": "10188:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10706:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10716:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10782:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10787:2:10",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10723:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10723:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10716:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10888:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a",
																	"nodeType": "YulIdentifier",
																	"src": "10799:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10799:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10799:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10901:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10912:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10917:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10908:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10908:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10901:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10694:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10702:3:10",
														"type": ""
													}
												],
												"src": "10560:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11078:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11088:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11154:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11159:2:10",
																		"type": "",
																		"value": "51"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11095:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11095:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11088:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11260:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
																	"nodeType": "YulIdentifier",
																	"src": "11171:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11171:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11171:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11273:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11284:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11289:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11280:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11280:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11273:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11066:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11074:3:10",
														"type": ""
													}
												],
												"src": "10932:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11450:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11460:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11526:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11531:2:10",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11467:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11467:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11460:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11632:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c",
																	"nodeType": "YulIdentifier",
																	"src": "11543:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11543:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11543:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11645:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11656:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11661:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11652:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11652:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11645:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11438:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11446:3:10",
														"type": ""
													}
												],
												"src": "11304:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11822:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11832:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11898:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11903:2:10",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11839:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11839:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11832:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12004:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040",
																	"nodeType": "YulIdentifier",
																	"src": "11915:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11915:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11915:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12017:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12028:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12033:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12024:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12024:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12017:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11810:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11818:3:10",
														"type": ""
													}
												],
												"src": "11676:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12194:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12204:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12270:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12275:2:10",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12211:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12211:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12204:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12376:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94",
																	"nodeType": "YulIdentifier",
																	"src": "12287:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12287:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12287:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12389:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12400:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12405:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12396:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12396:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12389:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12182:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12190:3:10",
														"type": ""
													}
												],
												"src": "12048:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12485:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12502:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12525:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12507:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12507:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12495:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12495:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12495:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12473:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12480:3:10",
														"type": ""
													}
												],
												"src": "12420:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12642:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12652:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12664:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12675:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12660:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12660:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12652:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12732:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12745:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12756:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12741:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12741:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12688:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12688:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12688:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12614:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12626:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12637:4:10",
														"type": ""
													}
												],
												"src": "12544:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12972:440:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12982:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12994:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13005:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12990:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12990:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12982:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13063:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13076:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13087:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13072:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13072:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13019:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13019:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13019:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13144:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13157:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13168:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13153:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13153:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13100:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13100:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13100:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13226:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13239:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13250:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13235:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13235:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13182:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13182:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13182:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13275:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13286:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13271:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13271:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13295:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13301:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13291:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13291:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13264:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13264:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13264:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13321:84:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13391:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13400:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13329:61:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13329:76:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13321:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12920:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12932:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12940:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12948:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12956:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12967:4:10",
														"type": ""
													}
												],
												"src": "12772:640:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13510:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13520:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13532:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13543:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13528:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13528:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13520:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13594:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13607:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13618:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13603:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13603:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13556:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13556:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13556:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13482:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13494:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13505:4:10",
														"type": ""
													}
												],
												"src": "13418:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13752:195:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13762:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13774:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13785:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13770:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13770:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13762:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13809:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13820:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13805:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13805:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13828:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13834:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13824:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13824:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13798:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13798:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13798:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13854:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13926:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13935:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13862:63:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13862:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13854:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13724:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13736:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13747:4:10",
														"type": ""
													}
												],
												"src": "13634:313:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14124:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14134:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14146:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14157:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14142:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14142:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14134:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14181:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14192:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14177:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14177:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14200:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14206:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14196:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14196:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14170:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14170:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14170:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14226:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14360:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14234:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14234:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14226:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14104:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14119:4:10",
														"type": ""
													}
												],
												"src": "13953:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14549:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14559:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14571:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14582:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14567:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14567:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14559:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14606:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14617:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14602:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14602:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14625:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14631:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14621:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14621:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14595:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14595:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14595:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14651:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14785:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14659:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14659:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14651:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14529:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14544:4:10",
														"type": ""
													}
												],
												"src": "14378:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14974:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14984:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14996:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15007:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14992:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14992:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14984:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15031:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15042:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15027:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15027:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15050:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15056:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15046:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15046:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15020:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15020:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15020:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15076:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15210:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15084:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15084:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15076:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14954:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14969:4:10",
														"type": ""
													}
												],
												"src": "14803:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15399:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15409:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15421:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15432:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15417:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15417:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15409:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15456:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15467:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15452:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15452:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15475:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15481:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15471:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15471:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15445:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15445:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15445:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15501:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15635:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15509:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15509:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15501:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15379:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15394:4:10",
														"type": ""
													}
												],
												"src": "15228:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15824:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15834:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15846:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15857:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15842:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15842:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15834:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15881:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15892:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15877:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15877:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15900:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15906:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15896:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15896:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15870:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15870:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15870:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15926:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16060:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15934:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15934:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15926:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15804:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15819:4:10",
														"type": ""
													}
												],
												"src": "15653:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16249:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16259:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16271:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16282:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16267:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16267:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16259:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16306:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16317:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16302:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16302:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16325:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16331:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16321:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16321:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16295:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16295:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16295:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16351:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16485:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16359:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16359:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16351:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16229:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16244:4:10",
														"type": ""
													}
												],
												"src": "16078:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16674:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16684:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16696:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16707:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16692:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16692:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16684:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16731:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16742:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16727:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16727:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16750:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16756:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16746:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16746:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16720:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16720:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16720:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16776:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16910:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16784:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16784:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16776:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16654:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16669:4:10",
														"type": ""
													}
												],
												"src": "16503:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17099:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17109:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17121:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17132:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17117:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17117:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17109:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17156:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17167:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17152:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17152:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17175:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17181:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17171:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17171:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17145:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17145:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17145:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17201:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17335:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17209:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17209:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17201:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17079:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17094:4:10",
														"type": ""
													}
												],
												"src": "16928:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17524:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17534:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17546:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17557:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17542:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17542:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17534:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17581:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17592:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17577:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17577:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17600:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17606:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17596:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17596:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17570:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17570:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17570:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17626:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17760:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17634:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17634:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17626:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17504:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17519:4:10",
														"type": ""
													}
												],
												"src": "17353:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17949:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17959:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17971:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17982:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17967:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17967:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17959:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18006:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18017:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18002:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18002:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18025:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18031:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18021:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18021:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17995:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17995:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17995:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18051:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18185:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18059:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18059:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18051:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17929:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17944:4:10",
														"type": ""
													}
												],
												"src": "17778:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18374:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18384:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18396:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18407:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18392:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18392:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18384:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18431:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18442:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18427:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18427:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18450:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18456:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18446:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18446:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18420:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18420:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18420:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18476:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18610:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18484:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18484:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18476:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18354:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18369:4:10",
														"type": ""
													}
												],
												"src": "18203:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18799:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18809:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18821:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18832:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18817:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18817:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18809:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18856:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18867:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18852:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18852:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18875:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18881:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18871:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18871:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18845:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18845:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18845:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18901:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19035:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18909:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18909:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18901:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18779:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18794:4:10",
														"type": ""
													}
												],
												"src": "18628:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19224:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19234:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19246:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19257:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19242:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19242:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19234:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19281:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19292:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19277:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19277:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19300:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19306:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19296:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19296:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19270:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19270:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19270:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19326:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19460:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19334:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19334:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19326:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19204:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19219:4:10",
														"type": ""
													}
												],
												"src": "19053:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19649:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19659:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19671:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19682:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19667:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19667:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19659:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19706:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19717:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19702:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19702:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19725:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19731:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19721:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19721:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19695:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19695:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19695:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19751:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19885:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19759:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19759:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19751:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19629:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19644:4:10",
														"type": ""
													}
												],
												"src": "19478:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20074:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20084:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20096:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20107:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20092:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20092:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20084:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20131:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20142:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20127:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20127:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20150:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20156:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20146:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20146:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20120:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20120:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20120:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20176:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20310:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20184:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20184:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20176:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20054:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20069:4:10",
														"type": ""
													}
												],
												"src": "19903:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20426:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20436:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20448:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20459:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20444:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20444:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20436:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20516:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20529:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20540:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20525:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20525:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20472:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20472:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20472:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20398:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20410:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20421:4:10",
														"type": ""
													}
												],
												"src": "20328:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20597:88:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20607:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "20617:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20617:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "20607:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "20666:6:10"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "20674:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "20646:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20646:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20646:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "20581:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20590:6:10",
														"type": ""
													}
												],
												"src": "20556:129:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20731:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20741:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20757:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20751:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20751:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "20741:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20724:6:10",
														"type": ""
													}
												],
												"src": "20691:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20838:241:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20943:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "20945:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20945:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20945:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20915:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20923:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20912:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20912:30:10"
															},
															"nodeType": "YulIf",
															"src": "20909:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20975:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21005:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "20983:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20983:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "20975:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21049:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "21061:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21067:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21057:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21057:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "21049:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20822:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "20833:4:10",
														"type": ""
													}
												],
												"src": "20772:307:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21143:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21154:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21170:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "21164:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21164:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "21154:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21126:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21136:6:10",
														"type": ""
													}
												],
												"src": "21085:98:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21248:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21259:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21275:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "21269:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21269:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "21259:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21231:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21241:6:10",
														"type": ""
													}
												],
												"src": "21189:99:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21389:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21406:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21411:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21399:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21399:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21399:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21427:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21446:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21451:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21442:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21442:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "21427:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21361:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21366:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "21377:11:10",
														"type": ""
													}
												],
												"src": "21294:168:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21564:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21581:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21586:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21574:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21574:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21574:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21602:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21621:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21626:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21617:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21617:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "21602:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21536:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21541:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "21552:11:10",
														"type": ""
													}
												],
												"src": "21468:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21687:229:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21697:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "21720:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "21702:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21702:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "21697:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21731:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "21754:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "21736:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21736:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "21731:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21862:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "21864:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21864:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21864:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "21815:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21822:34:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "21858:1:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21818:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21818:42:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "21812:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21812:49:10"
															},
															"nodeType": "YulIf",
															"src": "21809:75:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21894:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "21905:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "21908:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21901:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21901:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "21894:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "21674:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "21677:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "21683:3:10",
														"type": ""
													}
												],
												"src": "21643:273:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21966:261:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21976:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "21999:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "21981:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21981:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "21976:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22010:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22033:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22015:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22015:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "22010:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22173:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "22175:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22175:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22175:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22094:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22101:66:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "22169:1:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22097:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22097:74:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "22091:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22091:81:10"
															},
															"nodeType": "YulIf",
															"src": "22088:107:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22205:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22216:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22219:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22212:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22212:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "22205:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "21953:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "21956:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "21962:3:10",
														"type": ""
													}
												],
												"src": "21922:305:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22278:146:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22288:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22311:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "22293:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22293:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "22288:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22322:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22345:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "22327:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22327:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "22322:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22369:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "22371:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22371:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22371:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22363:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22366:1:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "22360:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22360:8:10"
															},
															"nodeType": "YulIf",
															"src": "22357:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22401:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22413:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22416:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "22409:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22409:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "22401:4:10"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "22264:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "22267:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "22273:4:10",
														"type": ""
													}
												],
												"src": "22233:191:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22475:146:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22485:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22508:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22490:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22490:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "22485:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22519:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22542:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22524:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22524:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "22519:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22566:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "22568:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22568:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22568:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22560:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22563:1:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "22557:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22557:8:10"
															},
															"nodeType": "YulIf",
															"src": "22554:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22598:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22610:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22613:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "22606:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22606:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "22598:4:10"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "22461:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "22464:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "22470:4:10",
														"type": ""
													}
												],
												"src": "22430:191:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22672:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22682:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22711:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "22693:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22693:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "22682:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22654:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "22664:7:10",
														"type": ""
													}
												],
												"src": "22627:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22771:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22781:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22806:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "22799:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22799:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22792:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22792:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "22781:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22753:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "22763:7:10",
														"type": ""
													}
												],
												"src": "22729:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22869:105:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22879:89:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22894:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22901:66:10",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "22890:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22890:78:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "22879:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22851:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "22861:7:10",
														"type": ""
													}
												],
												"src": "22825:149:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23025:73:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23035:57:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23050:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23057:34:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "23046:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23046:46:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "23035:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23007:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "23017:7:10",
														"type": ""
													}
												],
												"src": "22980:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23149:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23159:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23174:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23181:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "23170:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23170:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "23159:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23131:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "23141:7:10",
														"type": ""
													}
												],
												"src": "23104:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23281:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23291:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "23302:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "23291:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23263:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "23273:7:10",
														"type": ""
													}
												],
												"src": "23236:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23370:103:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "23393:3:10"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "23398:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23403:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "23380:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23380:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23380:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "23451:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "23456:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23447:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23447:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23465:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23440:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23440:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23440:27:10"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "23352:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "23357:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23362:6:10",
														"type": ""
													}
												],
												"src": "23319:154:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23528:258:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23538:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "23547:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "23542:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23607:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "23632:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "23637:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "23628:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "23628:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "23651:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "23656:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "23647:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "23647:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "23641:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "23641:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "23621:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23621:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23621:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "23568:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23571:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "23565:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23565:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "23579:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "23581:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "23590:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23593:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "23586:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23586:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "23581:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "23561:3:10",
																"statements": []
															},
															"src": "23557:113:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23704:76:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "23754:3:10"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "23759:6:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "23750:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "23750:16:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23768:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "23743:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23743:27:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23743:27:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "23685:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23688:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "23682:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23682:13:10"
															},
															"nodeType": "YulIf",
															"src": "23679:101:10"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "23510:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "23515:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23520:6:10",
														"type": ""
													}
												],
												"src": "23479:307:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23835:128:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23845:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23872:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "23854:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23854:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "23845:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23906:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "23908:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23908:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23908:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23893:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23900:4:10",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "23890:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23890:15:10"
															},
															"nodeType": "YulIf",
															"src": "23887:41:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23937:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23948:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23955:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "23944:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23944:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "23937:3:10"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23821:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "23831:3:10",
														"type": ""
													}
												],
												"src": "23792:171:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24020:269:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24030:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "24044:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24050:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "24040:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24040:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "24030:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24061:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "24091:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24097:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "24087:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24087:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "24065:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24138:51:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "24152:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "24166:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24174:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "24162:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24162:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "24152:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "24118:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "24111:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24111:26:10"
															},
															"nodeType": "YulIf",
															"src": "24108:81:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24241:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "24255:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24255:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24255:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "24205:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "24228:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24236:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "24225:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24225:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "24202:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24202:38:10"
															},
															"nodeType": "YulIf",
															"src": "24199:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "24004:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24013:6:10",
														"type": ""
													}
												],
												"src": "23969:320:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24338:238:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24348:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "24370:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "24400:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "24378:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24378:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24366:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24366:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "24352:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24517:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "24519:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24519:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24519:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "24460:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24472:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "24457:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24457:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "24496:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24508:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "24493:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24493:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "24454:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24454:62:10"
															},
															"nodeType": "YulIf",
															"src": "24451:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24555:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "24559:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24548:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24548:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24548:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24324:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "24332:4:10",
														"type": ""
													}
												],
												"src": "24295:281:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24625:190:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24635:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24662:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24644:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24644:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "24635:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24758:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "24760:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24760:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24760:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24683:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24690:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "24680:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24680:77:10"
															},
															"nodeType": "YulIf",
															"src": "24677:103:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24789:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24800:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24807:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24796:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24796:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "24789:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24611:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "24621:3:10",
														"type": ""
													}
												],
												"src": "24582:233:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24849:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24866:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24869:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24859:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24859:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24859:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24963:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24966:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24956:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24956:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24956:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24987:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24990:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "24980:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24980:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24980:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "24821:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25035:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25052:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25055:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25045:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25045:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25045:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25149:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25152:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25142:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25142:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25142:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25173:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25176:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "25166:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25166:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25166:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "25007:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25221:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25238:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25241:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25231:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25231:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25231:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25335:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25338:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25328:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25328:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25328:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25359:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25362:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "25352:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25352:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25352:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "25193:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25468:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25485:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25488:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "25478:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25478:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25478:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "25379:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25591:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25608:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25611:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "25601:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25601:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25601:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "25502:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25714:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25731:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25734:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "25724:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25724:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25724:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "25625:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25837:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25854:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25857:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "25847:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25847:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25847:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "25748:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25919:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25929:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "25947:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25954:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25943:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25943:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25963:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "25959:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25959:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "25939:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25939:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "25929:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25902:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "25912:6:10",
														"type": ""
													}
												],
												"src": "25871:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26085:115:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26107:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26115:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26103:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26103:14:10"
																	},
																	{
																		"hexValue": "455243373231413a206f776e657220696e646578206f7574206f6620626f756e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26119:34:10",
																		"type": "",
																		"value": "ERC721A: owner index out of boun"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26096:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26096:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26096:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26175:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26183:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26171:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26171:15:10"
																	},
																	{
																		"hexValue": "6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26188:4:10",
																		"type": "",
																		"value": "ds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26164:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26164:29:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26164:29:10"
														}
													]
												},
												"name": "store_literal_in_memory_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26077:6:10",
														"type": ""
													}
												],
												"src": "25979:221:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26312:123:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26334:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26342:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26330:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26330:14:10"
																	},
																	{
																		"hexValue": "455243373231413a206f776e657220717565727920666f72206e6f6e65786973",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26346:34:10",
																		"type": "",
																		"value": "ERC721A: owner query for nonexis"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26323:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26323:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26323:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26402:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26410:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26398:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26398:15:10"
																	},
																	{
																		"hexValue": "74656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26415:12:10",
																		"type": "",
																		"value": "tent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26391:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26391:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26391:37:10"
														}
													]
												},
												"name": "store_literal_in_memory_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26304:6:10",
														"type": ""
													}
												],
												"src": "26206:229:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26547:116:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26569:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26577:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26565:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26565:14:10"
																	},
																	{
																		"hexValue": "455243373231413a20676c6f62616c20696e646578206f7574206f6620626f75",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26581:34:10",
																		"type": "",
																		"value": "ERC721A: global index out of bou"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26558:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26558:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26558:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26637:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26645:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26633:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26633:15:10"
																	},
																	{
																		"hexValue": "6e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26650:5:10",
																		"type": "",
																		"value": "nds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26626:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26626:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26626:30:10"
														}
													]
												},
												"name": "store_literal_in_memory_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26539:6:10",
														"type": ""
													}
												],
												"src": "26441:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26775:118:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26797:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26805:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26793:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26793:14:10"
																	},
																	{
																		"hexValue": "455243373231413a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26809:34:10",
																		"type": "",
																		"value": "ERC721A: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26786:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26786:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26786:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26865:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26873:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26861:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26861:15:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26878:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26854:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26854:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26854:32:10"
														}
													]
												},
												"name": "store_literal_in_memory_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26767:6:10",
														"type": ""
													}
												],
												"src": "26669:224:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27005:138:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27027:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27035:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27023:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27023:14:10"
																	},
																	{
																		"hexValue": "455243373231413a20617070726f76652063616c6c6572206973206e6f74206f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27039:34:10",
																		"type": "",
																		"value": "ERC721A: approve caller is not o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27016:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27016:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27016:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27095:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27103:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27091:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27091:15:10"
																	},
																	{
																		"hexValue": "776e6572206e6f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27108:27:10",
																		"type": "",
																		"value": "wner nor approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27084:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27084:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27084:52:10"
														}
													]
												},
												"name": "store_literal_in_memory_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26997:6:10",
														"type": ""
													}
												],
												"src": "26899:244:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27255:124:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27277:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27285:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27273:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27273:14:10"
																	},
																	{
																		"hexValue": "455243373231413a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27289:34:10",
																		"type": "",
																		"value": "ERC721A: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27266:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27266:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27266:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27345:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27353:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27341:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27341:15:10"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27358:13:10",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27334:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27334:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27334:38:10"
														}
													]
												},
												"name": "store_literal_in_memory_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27247:6:10",
														"type": ""
													}
												],
												"src": "27149:230:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27491:119:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27513:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27521:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27509:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27509:14:10"
																	},
																	{
																		"hexValue": "455243373231413a207472616e736665722066726f6d20696e636f7272656374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27525:34:10",
																		"type": "",
																		"value": "ERC721A: transfer from incorrect"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27502:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27502:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27502:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27581:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27589:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27577:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27577:15:10"
																	},
																	{
																		"hexValue": "206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27594:8:10",
																		"type": "",
																		"value": " owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27570:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27570:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27570:33:10"
														}
													]
												},
												"name": "store_literal_in_memory_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27483:6:10",
														"type": ""
													}
												],
												"src": "27385:225:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27722:128:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27744:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27752:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27740:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27740:14:10"
																	},
																	{
																		"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27756:34:10",
																		"type": "",
																		"value": "ERC721Metadata: URI query for no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27733:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27733:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27733:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27812:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27820:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27808:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27808:15:10"
																	},
																	{
																		"hexValue": "6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27825:17:10",
																		"type": "",
																		"value": "nexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27801:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27801:42:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27801:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27714:6:10",
														"type": ""
													}
												],
												"src": "27616:234:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27962:70:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27984:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27992:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27980:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27980:14:10"
																	},
																	{
																		"hexValue": "455243373231413a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27996:28:10",
																		"type": "",
																		"value": "ERC721A: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27973:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27973:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27973:52:10"
														}
													]
												},
												"name": "store_literal_in_memory_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27954:6:10",
														"type": ""
													}
												],
												"src": "27856:176:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28144:131:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28166:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28174:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28162:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28162:14:10"
																	},
																	{
																		"hexValue": "455243373231413a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28178:34:10",
																		"type": "",
																		"value": "ERC721A: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28155:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28155:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28155:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28234:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28242:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28230:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28230:15:10"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28247:20:10",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28223:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28223:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28223:45:10"
														}
													]
												},
												"name": "store_literal_in_memory_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28136:6:10",
														"type": ""
													}
												],
												"src": "28038:237:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28387:115:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28409:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28417:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28405:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28405:14:10"
																	},
																	{
																		"hexValue": "455243373231413a20617070726f76616c20746f2063757272656e74206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28421:34:10",
																		"type": "",
																		"value": "ERC721A: approval to current own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28398:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28398:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28398:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28477:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28485:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28473:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28473:15:10"
																	},
																	{
																		"hexValue": "6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28490:4:10",
																		"type": "",
																		"value": "er"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28466:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28466:29:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28466:29:10"
														}
													]
												},
												"name": "store_literal_in_memory_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28379:6:10",
														"type": ""
													}
												],
												"src": "28281:221:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28614:132:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28636:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28644:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28632:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28632:14:10"
																	},
																	{
																		"hexValue": "455243373231413a207472616e7366657220746f206e6f6e2045524337323152",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28648:34:10",
																		"type": "",
																		"value": "ERC721A: transfer to non ERC721R"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28625:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28625:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28625:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28704:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28712:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28700:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28700:15:10"
																	},
																	{
																		"hexValue": "6563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28717:21:10",
																		"type": "",
																		"value": "eceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28693:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28693:46:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28693:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28606:6:10",
														"type": ""
													}
												],
												"src": "28508:238:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28858:127:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28880:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28888:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28876:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28876:14:10"
																	},
																	{
																		"hexValue": "455243373231413a20756e61626c6520746f2067657420746f6b656e206f6620",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28892:34:10",
																		"type": "",
																		"value": "ERC721A: unable to get token of "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28869:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28869:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28869:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28948:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28956:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28944:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28944:15:10"
																	},
																	{
																		"hexValue": "6f776e657220627920696e646578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28961:16:10",
																		"type": "",
																		"value": "owner by index"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28937:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28937:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28937:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28850:6:10",
														"type": ""
													}
												],
												"src": "28752:233:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29097:128:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29119:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29127:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29115:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29115:14:10"
																	},
																	{
																		"hexValue": "455243373231413a20756e61626c6520746f2064657465726d696e6520746865",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29131:34:10",
																		"type": "",
																		"value": "ERC721A: unable to determine the"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29108:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29108:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29108:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29187:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29195:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29183:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29183:15:10"
																	},
																	{
																		"hexValue": "206f776e6572206f6620746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29200:17:10",
																		"type": "",
																		"value": " owner of token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29176:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29176:42:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29176:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29089:6:10",
														"type": ""
													}
												],
												"src": "28991:234:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29337:126:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29359:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29367:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29355:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29355:14:10"
																	},
																	{
																		"hexValue": "455243373231413a20617070726f76656420717565727920666f72206e6f6e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29371:34:10",
																		"type": "",
																		"value": "ERC721A: approved query for none"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29348:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29348:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29348:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29427:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29435:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29423:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29423:15:10"
																	},
																	{
																		"hexValue": "78697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29440:15:10",
																		"type": "",
																		"value": "xistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29416:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29416:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29416:40:10"
														}
													]
												},
												"name": "store_literal_in_memory_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29329:6:10",
														"type": ""
													}
												],
												"src": "29231:232:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29512:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29569:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "29578:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "29581:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "29571:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29571:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29571:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "29535:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "29560:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "29542:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29542:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "29532:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29532:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "29525:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29525:43:10"
															},
															"nodeType": "YulIf",
															"src": "29522:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29505:5:10",
														"type": ""
													}
												],
												"src": "29469:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29637:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29691:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "29700:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "29703:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "29693:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29693:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29693:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "29660:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "29682:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "29667:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29667:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "29657:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29657:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "29650:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29650:40:10"
															},
															"nodeType": "YulIf",
															"src": "29647:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29630:5:10",
														"type": ""
													}
												],
												"src": "29597:116:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29761:78:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29817:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "29826:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "29829:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "29819:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29819:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29819:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "29784:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "29808:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "29791:16:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29791:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "29781:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29781:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "29774:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29774:42:10"
															},
															"nodeType": "YulIf",
															"src": "29771:62:10"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29754:5:10",
														"type": ""
													}
												],
												"src": "29719:120:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29888:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29945:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "29954:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "29957:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "29947:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29947:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29947:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "29911:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "29936:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "29918:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29918:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "29908:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29908:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "29901:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29901:43:10"
															},
															"nodeType": "YulIf",
															"src": "29898:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29881:5:10",
														"type": ""
													}
												],
												"src": "29845:122:10"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 57)\n        store_literal_in_memory_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 51)\n        store_literal_in_memory_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint128(x, y) -> sum {\n        x := cleanup_t_uint128(x)\n        y := cleanup_t_uint128(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint128(x, y) -> diff {\n        x := cleanup_t_uint128(x)\n        y := cleanup_t_uint128(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: owner index out of boun\")\n\n        mstore(add(memPtr, 32), \"ds\")\n\n    }\n\n    function store_literal_in_memory_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: owner query for nonexis\")\n\n        mstore(add(memPtr, 32), \"tent token\")\n\n    }\n\n    function store_literal_in_memory_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: global index out of bou\")\n\n        mstore(add(memPtr, 32), \"nds\")\n\n    }\n\n    function store_literal_in_memory_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: transfer to the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: approve caller is not o\")\n\n        mstore(add(memPtr, 32), \"wner nor approved for all\")\n\n    }\n\n    function store_literal_in_memory_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: balance query for the z\")\n\n        mstore(add(memPtr, 32), \"ero address\")\n\n    }\n\n    function store_literal_in_memory_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: transfer from incorrect\")\n\n        mstore(add(memPtr, 32), \" owner\")\n\n    }\n\n    function store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Metadata: URI query for no\")\n\n        mstore(add(memPtr, 32), \"nexistent token\")\n\n    }\n\n    function store_literal_in_memory_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: approve to caller\")\n\n    }\n\n    function store_literal_in_memory_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: transfer caller is not \")\n\n        mstore(add(memPtr, 32), \"owner nor approved\")\n\n    }\n\n    function store_literal_in_memory_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: approval to current own\")\n\n        mstore(add(memPtr, 32), \"er\")\n\n    }\n\n    function store_literal_in_memory_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: transfer to non ERC721R\")\n\n        mstore(add(memPtr, 32), \"eceiver implementer\")\n\n    }\n\n    function store_literal_in_memory_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: unable to get token of \")\n\n        mstore(add(memPtr, 32), \"owner by index\")\n\n    }\n\n    function store_literal_in_memory_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: unable to determine the\")\n\n        mstore(add(memPtr, 32), \" owner of token\")\n\n    }\n\n    function store_literal_in_memory_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: approved query for none\")\n\n        mstore(add(memPtr, 32), \"xistent token\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"793": [
									{
										"length": 32,
										"start": 5431
									},
									{
										"length": 32,
										"start": 5472
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061010b5760003560e01c80634f6ccce7116100a2578063a22cb46511610071578063a22cb465146102de578063b88d4fde146102fa578063c87b56dd14610316578063d7224ba014610346578063e985e9c5146103645761010b565b80634f6ccce7146102305780636352211e1461026057806370a082311461029057806395d89b41146102c05761010b565b806318160ddd116100de57806318160ddd146101aa57806323b872dd146101c85780632f745c59146101e457806342842e0e146102145761010b565b806301ffc9a71461011057806306fdde0314610140578063081812fc1461015e578063095ea7b31461018e575b600080fd5b61012a60048036038101906101259190611b89565b610394565b6040516101379190611f23565b60405180910390f35b6101486104de565b6040516101559190611f3e565b60405180910390f35b61017860048036038101906101739190611be3565b610570565b6040516101859190611ebc565b60405180910390f35b6101a860048036038101906101a39190611b49565b6105f5565b005b6101b261070e565b6040516101bf9190612140565b60405180910390f35b6101e260048036038101906101dd9190611a33565b610717565b005b6101fe60048036038101906101f99190611b49565b610727565b60405161020b9190612140565b60405180910390f35b61022e60048036038101906102299190611a33565b610925565b005b61024a60048036038101906102459190611be3565b610945565b6040516102579190612140565b60405180910390f35b61027a60048036038101906102759190611be3565b610998565b6040516102879190611ebc565b60405180910390f35b6102aa60048036038101906102a591906119c6565b6109ae565b6040516102b79190612140565b60405180910390f35b6102c8610a97565b6040516102d59190611f3e565b60405180910390f35b6102f860048036038101906102f39190611b09565b610b29565b005b610314600480360381019061030f9190611a86565b610caa565b005b610330600480360381019061032b9190611be3565b610d06565b60405161033d9190611f3e565b60405180910390f35b61034e610d5f565b60405161035b9190612140565b60405180910390f35b61037e600480360381019061037991906119f3565b610d65565b60405161038b9190611f23565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061045f57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104c757507f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104d757506104d682610df9565b5b9050919050565b6060600180546104ed906123e9565b80601f0160208091040260200160405190810160405280929190818152602001828054610519906123e9565b80156105665780601f1061053b57610100808354040283529160200191610566565b820191906000526020600020905b81548152906001019060200180831161054957829003601f168201915b5050505050905090565b600061057b82610e63565b6105ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b190612120565b60405180910390fd5b6005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061060082610998565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610671576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610668906120a0565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610690610e70565b73ffffffffffffffffffffffffffffffffffffffff1614806106bf57506106be816106b9610e70565b610d65565b5b6106fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f590611fe0565b60405180910390fd5b610709838383610e78565b505050565b60008054905090565b610722838383610f2a565b505050565b6000610732836109ae565b8210610773576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076a90611f60565b60405180910390fd5b600061077d61070e565b905060008060005b838110156108e3576000600360008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161461087757806000015192505b8773ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108cf57868414156108c057819550505050505061091f565b83806108cb9061244c565b9450505b5080806108db9061244c565b915050610785565b506040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610916906120e0565b60405180910390fd5b92915050565b61094083838360405180602001604052806000815250610caa565b505050565b600061094f61070e565b8210610990576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098790611fa0565b60405180910390fd5b819050919050565b60006109a3826114e3565b600001519050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1690612000565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff169050919050565b606060028054610aa6906123e9565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad2906123e9565b8015610b1f5780601f10610af457610100808354040283529160200191610b1f565b820191906000526020600020905b815481529060010190602001808311610b0257829003601f168201915b5050505050905090565b610b31610e70565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9690612060565b60405180910390fd5b8060066000610bac610e70565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610c59610e70565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c9e9190611f23565b60405180910390a35050565b610cb5848484610f2a565b610cc1848484846116e6565b610d00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf7906120c0565b60405180910390fd5b50505050565b6060610d1182610e63565b610d50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4790612040565b60405180910390fd5b610d5861187d565b9050919050565b60075481565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000805482109050919050565b600033905090565b826005600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000610f35826114e3565b90506000816000015173ffffffffffffffffffffffffffffffffffffffff16610f5c610e70565b73ffffffffffffffffffffffffffffffffffffffff161480610fb85750610f81610e70565b73ffffffffffffffffffffffffffffffffffffffff16610fa084610570565b73ffffffffffffffffffffffffffffffffffffffff16145b80610fd45750610fd38260000151610fce610e70565b610d65565b5b905080611016576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100d90612080565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff1614611088576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107f90612020565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156110f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ef90611fc0565b60405180910390fd5b6111058585856001611894565b6111156000848460000151610e78565b6001600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a90046fffffffffffffffffffffffffffffffff166111839190612285565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506001600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a90046fffffffffffffffffffffffffffffffff1661122791906121e9565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060405180604001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020014267ffffffffffffffff168152506003600085815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550905050600060018461132d919061222f565b9050600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611473576113a381610e63565b15611472576040518060400160405280846000015173ffffffffffffffffffffffffffffffffffffffff168152602001846020015167ffffffffffffffff168152506003600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050505b5b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46114db868686600161189a565b505050505050565b6114eb6118b3565b6114f482610e63565b611533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152a90611f80565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000083106115975760017f00000000000000000000000000000000000000000000000000000000000000008461158a91906122b9565b611594919061222f565b90505b60008390505b8181106116a5576000600360008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614611691578093505050506116e1565b50808061169d906123bf565b91505061159d565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116d890612100565b60405180910390fd5b919050565b60006117078473ffffffffffffffffffffffffffffffffffffffff166118a0565b15611870578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611730610e70565b8786866040518563ffffffff1660e01b81526004016117529493929190611ed7565b602060405180830381600087803b15801561176c57600080fd5b505af192505050801561179d57506040513d601f19601f8201168201806040525081019061179a9190611bb6565b60015b611820573d80600081146117cd576040519150601f19603f3d011682016040523d82523d6000602084013e6117d2565b606091505b50600081511415611818576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161180f906120c0565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611875565b600190505b949350505050565b606060405180602001604052806000815250905090565b50505050565b50505050565b600080823b905060008111915050919050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff1681525090565b60006119006118fb84612180565b61215b565b90508281526020810184848401111561191c5761191b612527565b5b61192784828561237d565b509392505050565b60008135905061193e816129c2565b92915050565b600081359050611953816129d9565b92915050565b600081359050611968816129f0565b92915050565b60008151905061197d816129f0565b92915050565b600082601f83011261199857611997612522565b5b81356119a88482602086016118ed565b91505092915050565b6000813590506119c081612a07565b92915050565b6000602082840312156119dc576119db612531565b5b60006119ea8482850161192f565b91505092915050565b60008060408385031215611a0a57611a09612531565b5b6000611a188582860161192f565b9250506020611a298582860161192f565b9150509250929050565b600080600060608486031215611a4c57611a4b612531565b5b6000611a5a8682870161192f565b9350506020611a6b8682870161192f565b9250506040611a7c868287016119b1565b9150509250925092565b60008060008060808587031215611aa057611a9f612531565b5b6000611aae8782880161192f565b9450506020611abf8782880161192f565b9350506040611ad0878288016119b1565b925050606085013567ffffffffffffffff811115611af157611af061252c565b5b611afd87828801611983565b91505092959194509250565b60008060408385031215611b2057611b1f612531565b5b6000611b2e8582860161192f565b9250506020611b3f85828601611944565b9150509250929050565b60008060408385031215611b6057611b5f612531565b5b6000611b6e8582860161192f565b9250506020611b7f858286016119b1565b9150509250929050565b600060208284031215611b9f57611b9e612531565b5b6000611bad84828501611959565b91505092915050565b600060208284031215611bcc57611bcb612531565b5b6000611bda8482850161196e565b91505092915050565b600060208284031215611bf957611bf8612531565b5b6000611c07848285016119b1565b91505092915050565b611c19816122ed565b82525050565b611c28816122ff565b82525050565b6000611c39826121b1565b611c4381856121c7565b9350611c5381856020860161238c565b611c5c81612536565b840191505092915050565b6000611c72826121bc565b611c7c81856121d8565b9350611c8c81856020860161238c565b611c9581612536565b840191505092915050565b6000611cad6022836121d8565b9150611cb882612547565b604082019050919050565b6000611cd0602a836121d8565b9150611cdb82612596565b604082019050919050565b6000611cf36023836121d8565b9150611cfe826125e5565b604082019050919050565b6000611d166025836121d8565b9150611d2182612634565b604082019050919050565b6000611d396039836121d8565b9150611d4482612683565b604082019050919050565b6000611d5c602b836121d8565b9150611d67826126d2565b604082019050919050565b6000611d7f6026836121d8565b9150611d8a82612721565b604082019050919050565b6000611da2602f836121d8565b9150611dad82612770565b604082019050919050565b6000611dc5601a836121d8565b9150611dd0826127bf565b602082019050919050565b6000611de86032836121d8565b9150611df3826127e8565b604082019050919050565b6000611e0b6022836121d8565b9150611e1682612837565b604082019050919050565b6000611e2e6033836121d8565b9150611e3982612886565b604082019050919050565b6000611e51602e836121d8565b9150611e5c826128d5565b604082019050919050565b6000611e74602f836121d8565b9150611e7f82612924565b604082019050919050565b6000611e97602d836121d8565b9150611ea282612973565b604082019050919050565b611eb681612373565b82525050565b6000602082019050611ed16000830184611c10565b92915050565b6000608082019050611eec6000830187611c10565b611ef96020830186611c10565b611f066040830185611ead565b8181036060830152611f188184611c2e565b905095945050505050565b6000602082019050611f386000830184611c1f565b92915050565b60006020820190508181036000830152611f588184611c67565b905092915050565b60006020820190508181036000830152611f7981611ca0565b9050919050565b60006020820190508181036000830152611f9981611cc3565b9050919050565b60006020820190508181036000830152611fb981611ce6565b9050919050565b60006020820190508181036000830152611fd981611d09565b9050919050565b60006020820190508181036000830152611ff981611d2c565b9050919050565b6000602082019050818103600083015261201981611d4f565b9050919050565b6000602082019050818103600083015261203981611d72565b9050919050565b6000602082019050818103600083015261205981611d95565b9050919050565b6000602082019050818103600083015261207981611db8565b9050919050565b6000602082019050818103600083015261209981611ddb565b9050919050565b600060208201905081810360008301526120b981611dfe565b9050919050565b600060208201905081810360008301526120d981611e21565b9050919050565b600060208201905081810360008301526120f981611e44565b9050919050565b6000602082019050818103600083015261211981611e67565b9050919050565b6000602082019050818103600083015261213981611e8a565b9050919050565b60006020820190506121556000830184611ead565b92915050565b6000612165612176565b9050612171828261241b565b919050565b6000604051905090565b600067ffffffffffffffff82111561219b5761219a6124f3565b5b6121a482612536565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006121f482612337565b91506121ff83612337565b9250826fffffffffffffffffffffffffffffffff0382111561222457612223612495565b5b828201905092915050565b600061223a82612373565b915061224583612373565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561227a57612279612495565b5b828201905092915050565b600061229082612337565b915061229b83612337565b9250828210156122ae576122ad612495565b5b828203905092915050565b60006122c482612373565b91506122cf83612373565b9250828210156122e2576122e1612495565b5b828203905092915050565b60006122f882612353565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156123aa57808201518184015260208101905061238f565b838111156123b9576000848401525b50505050565b60006123ca82612373565b915060008214156123de576123dd612495565b5b600182039050919050565b6000600282049050600182168061240157607f821691505b60208210811415612415576124146124c4565b5b50919050565b61242482612536565b810181811067ffffffffffffffff82111715612443576124426124f3565b5b80604052505050565b600061245782612373565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561248a57612489612495565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f455243373231413a206f776e657220696e646578206f7574206f6620626f756e60008201527f6473000000000000000000000000000000000000000000000000000000000000602082015250565b7f455243373231413a206f776e657220717565727920666f72206e6f6e6578697360008201527f74656e7420746f6b656e00000000000000000000000000000000000000000000602082015250565b7f455243373231413a20676c6f62616c20696e646578206f7574206f6620626f7560008201527f6e64730000000000000000000000000000000000000000000000000000000000602082015250565b7f455243373231413a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f455243373231413a20617070726f76652063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f76656420666f7220616c6c00000000000000602082015250565b7f455243373231413a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b7f455243373231413a207472616e736665722066726f6d20696e636f727265637460008201527f206f776e65720000000000000000000000000000000000000000000000000000602082015250565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b7f455243373231413a20617070726f766520746f2063616c6c6572000000000000600082015250565b7f455243373231413a207472616e736665722063616c6c6572206973206e6f742060008201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000602082015250565b7f455243373231413a20617070726f76616c20746f2063757272656e74206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b7f455243373231413a207472616e7366657220746f206e6f6e204552433732315260008201527f6563656976657220696d706c656d656e74657200000000000000000000000000602082015250565b7f455243373231413a20756e61626c6520746f2067657420746f6b656e206f662060008201527f6f776e657220627920696e646578000000000000000000000000000000000000602082015250565b7f455243373231413a20756e61626c6520746f2064657465726d696e652074686560008201527f206f776e6572206f6620746f6b656e0000000000000000000000000000000000602082015250565b7f455243373231413a20617070726f76656420717565727920666f72206e6f6e6560008201527f78697374656e7420746f6b656e00000000000000000000000000000000000000602082015250565b6129cb816122ed565b81146129d657600080fd5b50565b6129e2816122ff565b81146129ed57600080fd5b50565b6129f98161230b565b8114612a0457600080fd5b50565b612a1081612373565b8114612a1b57600080fd5b5056fea26469706673582212209ca65088c2dabf463ab340529072e7aaf3e25df99d79cbe8c6dda1172339010f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F6CCCE7 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0xD7224BA0 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x364 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2C0 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x214 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH2 0x394 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1F3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1BE3 JUMP JUMPDEST PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x1EBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1B49 JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B2 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x2140 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1B49 JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x2140 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH2 0x925 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1BE3 JUMP JUMPDEST PUSH2 0x945 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x2140 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x1BE3 JUMP JUMPDEST PUSH2 0x998 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1EBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x19C6 JUMP JUMPDEST PUSH2 0x9AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x2140 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x1F3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x1B09 JUMP JUMPDEST PUSH2 0xB29 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH2 0xCAA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x1BE3 JUMP JUMPDEST PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x1F3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34E PUSH2 0xD5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x2140 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0xD65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x45F JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4C7 JUMPI POP PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4D7 JUMPI POP PUSH2 0x4D6 DUP3 PUSH2 0xDF9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x4ED SWAP1 PUSH2 0x23E9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x519 SWAP1 PUSH2 0x23E9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x566 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x53B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x566 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x549 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57B DUP3 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B1 SWAP1 PUSH2 0x2120 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x600 DUP3 PUSH2 0x998 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x671 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x668 SWAP1 PUSH2 0x20A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x690 PUSH2 0xE70 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6BF JUMPI POP PUSH2 0x6BE DUP2 PUSH2 0x6B9 PUSH2 0xE70 JUMP JUMPDEST PUSH2 0xD65 JUMP JUMPDEST JUMPDEST PUSH2 0x6FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F5 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x709 DUP4 DUP4 DUP4 PUSH2 0xE78 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x722 DUP4 DUP4 DUP4 PUSH2 0xF2A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x732 DUP4 PUSH2 0x9AE JUMP JUMPDEST DUP3 LT PUSH2 0x773 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76A SWAP1 PUSH2 0x1F60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x77D PUSH2 0x70E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x877 JUMPI DUP1 PUSH1 0x0 ADD MLOAD SWAP3 POP JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8CF JUMPI DUP7 DUP5 EQ ISZERO PUSH2 0x8C0 JUMPI DUP2 SWAP6 POP POP POP POP POP POP PUSH2 0x91F JUMP JUMPDEST DUP4 DUP1 PUSH2 0x8CB SWAP1 PUSH2 0x244C JUMP JUMPDEST SWAP5 POP POP JUMPDEST POP DUP1 DUP1 PUSH2 0x8DB SWAP1 PUSH2 0x244C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x785 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x916 SWAP1 PUSH2 0x20E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x940 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xCAA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94F PUSH2 0x70E JUMP JUMPDEST DUP3 LT PUSH2 0x990 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x987 SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A3 DUP3 PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA16 SWAP1 PUSH2 0x2000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0xAA6 SWAP1 PUSH2 0x23E9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAD2 SWAP1 PUSH2 0x23E9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB1F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAF4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB1F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB02 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB31 PUSH2 0xE70 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB96 SWAP1 PUSH2 0x2060 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0xBAC PUSH2 0xE70 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC59 PUSH2 0xE70 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC9E SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCB5 DUP5 DUP5 DUP5 PUSH2 0xF2A JUMP JUMPDEST PUSH2 0xCC1 DUP5 DUP5 DUP5 DUP5 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0xD00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF7 SWAP1 PUSH2 0x20C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD11 DUP3 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD47 SWAP1 PUSH2 0x2040 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD58 PUSH2 0x187D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF35 DUP3 PUSH2 0x14E3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF5C PUSH2 0xE70 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xFB8 JUMPI POP PUSH2 0xF81 PUSH2 0xE70 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFA0 DUP5 PUSH2 0x570 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xFD4 JUMPI POP PUSH2 0xFD3 DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0xFCE PUSH2 0xE70 JUMP JUMPDEST PUSH2 0xD65 JUMP JUMPDEST JUMPDEST SWAP1 POP DUP1 PUSH2 0x1016 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100D SWAP1 PUSH2 0x2080 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1088 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107F SWAP1 PUSH2 0x2020 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x10F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10EF SWAP1 PUSH2 0x1FC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1105 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x1115 PUSH1 0x0 DUP5 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0xE78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1183 SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1227 SWAP2 SWAP1 PUSH2 0x21E9 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x132D SWAP2 SWAP1 PUSH2 0x222F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1473 JUMPI PUSH2 0x13A3 DUP2 PUSH2 0xE63 JUMP JUMPDEST ISZERO PUSH2 0x1472 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP JUMPDEST JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x14DB DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x189A JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14EB PUSH2 0x18B3 JUMP JUMPDEST PUSH2 0x14F4 DUP3 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x1533 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152A SWAP1 PUSH2 0x1F80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP4 LT PUSH2 0x1597 JUMPI PUSH1 0x1 PUSH32 0x0 DUP5 PUSH2 0x158A SWAP2 SWAP1 PUSH2 0x22B9 JUMP JUMPDEST PUSH2 0x1594 SWAP2 SWAP1 PUSH2 0x222F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP JUMPDEST DUP2 DUP2 LT PUSH2 0x16A5 JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1691 JUMPI DUP1 SWAP4 POP POP POP POP PUSH2 0x16E1 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x169D SWAP1 PUSH2 0x23BF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x159D JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D8 SWAP1 PUSH2 0x2100 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1707 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18A0 JUMP JUMPDEST ISZERO PUSH2 0x1870 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1730 PUSH2 0xE70 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1752 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ED7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x176C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x179D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x179A SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1820 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x17CD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17D2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1818 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x180F SWAP1 PUSH2 0x20C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1900 PUSH2 0x18FB DUP5 PUSH2 0x2180 JUMP JUMPDEST PUSH2 0x215B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x191C JUMPI PUSH2 0x191B PUSH2 0x2527 JUMP JUMPDEST JUMPDEST PUSH2 0x1927 DUP5 DUP3 DUP6 PUSH2 0x237D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x193E DUP2 PUSH2 0x29C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1953 DUP2 PUSH2 0x29D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1968 DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x197D DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1998 JUMPI PUSH2 0x1997 PUSH2 0x2522 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19A8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x18ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19C0 DUP2 PUSH2 0x2A07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19DC JUMPI PUSH2 0x19DB PUSH2 0x2531 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19EA DUP5 DUP3 DUP6 ADD PUSH2 0x192F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A0A JUMPI PUSH2 0x1A09 PUSH2 0x2531 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A18 DUP6 DUP3 DUP7 ADD PUSH2 0x192F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A29 DUP6 DUP3 DUP7 ADD PUSH2 0x192F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A4C JUMPI PUSH2 0x1A4B PUSH2 0x2531 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A5A DUP7 DUP3 DUP8 ADD PUSH2 0x192F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A6B DUP7 DUP3 DUP8 ADD PUSH2 0x192F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A7C DUP7 DUP3 DUP8 ADD PUSH2 0x19B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1AA0 JUMPI PUSH2 0x1A9F PUSH2 0x2531 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AAE DUP8 DUP3 DUP9 ADD PUSH2 0x192F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1ABF DUP8 DUP3 DUP9 ADD PUSH2 0x192F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1AD0 DUP8 DUP3 DUP9 ADD PUSH2 0x19B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AF1 JUMPI PUSH2 0x1AF0 PUSH2 0x252C JUMP JUMPDEST JUMPDEST PUSH2 0x1AFD DUP8 DUP3 DUP9 ADD PUSH2 0x1983 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B20 JUMPI PUSH2 0x1B1F PUSH2 0x2531 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B2E DUP6 DUP3 DUP7 ADD PUSH2 0x192F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B3F DUP6 DUP3 DUP7 ADD PUSH2 0x1944 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B60 JUMPI PUSH2 0x1B5F PUSH2 0x2531 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B6E DUP6 DUP3 DUP7 ADD PUSH2 0x192F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B7F DUP6 DUP3 DUP7 ADD PUSH2 0x19B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B9F JUMPI PUSH2 0x1B9E PUSH2 0x2531 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BAD DUP5 DUP3 DUP6 ADD PUSH2 0x1959 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BCC JUMPI PUSH2 0x1BCB PUSH2 0x2531 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BDA DUP5 DUP3 DUP6 ADD PUSH2 0x196E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BF9 JUMPI PUSH2 0x1BF8 PUSH2 0x2531 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C07 DUP5 DUP3 DUP6 ADD PUSH2 0x19B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C19 DUP2 PUSH2 0x22ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1C28 DUP2 PUSH2 0x22FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C39 DUP3 PUSH2 0x21B1 JUMP JUMPDEST PUSH2 0x1C43 DUP2 DUP6 PUSH2 0x21C7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C53 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x238C JUMP JUMPDEST PUSH2 0x1C5C DUP2 PUSH2 0x2536 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C72 DUP3 PUSH2 0x21BC JUMP JUMPDEST PUSH2 0x1C7C DUP2 DUP6 PUSH2 0x21D8 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C8C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x238C JUMP JUMPDEST PUSH2 0x1C95 DUP2 PUSH2 0x2536 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CAD PUSH1 0x22 DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB8 DUP3 PUSH2 0x2547 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD0 PUSH1 0x2A DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CDB DUP3 PUSH2 0x2596 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF3 PUSH1 0x23 DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CFE DUP3 PUSH2 0x25E5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D16 PUSH1 0x25 DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D21 DUP3 PUSH2 0x2634 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D39 PUSH1 0x39 DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D44 DUP3 PUSH2 0x2683 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5C PUSH1 0x2B DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D67 DUP3 PUSH2 0x26D2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7F PUSH1 0x26 DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D8A DUP3 PUSH2 0x2721 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA2 PUSH1 0x2F DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAD DUP3 PUSH2 0x2770 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC5 PUSH1 0x1A DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD0 DUP3 PUSH2 0x27BF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DE8 PUSH1 0x32 DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF3 DUP3 PUSH2 0x27E8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0B PUSH1 0x22 DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E16 DUP3 PUSH2 0x2837 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E2E PUSH1 0x33 DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E39 DUP3 PUSH2 0x2886 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E51 PUSH1 0x2E DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E5C DUP3 PUSH2 0x28D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E74 PUSH1 0x2F DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E7F DUP3 PUSH2 0x2924 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E97 PUSH1 0x2D DUP4 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EA2 DUP3 PUSH2 0x2973 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EB6 DUP2 PUSH2 0x2373 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ED1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1EEC PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1C10 JUMP JUMPDEST PUSH2 0x1EF9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1C10 JUMP JUMPDEST PUSH2 0x1F06 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1EAD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1F18 DUP2 DUP5 PUSH2 0x1C2E JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F38 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F58 DUP2 DUP5 PUSH2 0x1C67 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F79 DUP2 PUSH2 0x1CA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F99 DUP2 PUSH2 0x1CC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FB9 DUP2 PUSH2 0x1CE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FD9 DUP2 PUSH2 0x1D09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FF9 DUP2 PUSH2 0x1D2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2019 DUP2 PUSH2 0x1D4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2039 DUP2 PUSH2 0x1D72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2059 DUP2 PUSH2 0x1D95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2079 DUP2 PUSH2 0x1DB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2099 DUP2 PUSH2 0x1DDB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20B9 DUP2 PUSH2 0x1DFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20D9 DUP2 PUSH2 0x1E21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20F9 DUP2 PUSH2 0x1E44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2119 DUP2 PUSH2 0x1E67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2139 DUP2 PUSH2 0x1E8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2155 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2165 PUSH2 0x2176 JUMP JUMPDEST SWAP1 POP PUSH2 0x2171 DUP3 DUP3 PUSH2 0x241B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x219B JUMPI PUSH2 0x219A PUSH2 0x24F3 JUMP JUMPDEST JUMPDEST PUSH2 0x21A4 DUP3 PUSH2 0x2536 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21F4 DUP3 PUSH2 0x2337 JUMP JUMPDEST SWAP2 POP PUSH2 0x21FF DUP4 PUSH2 0x2337 JUMP JUMPDEST SWAP3 POP DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2224 JUMPI PUSH2 0x2223 PUSH2 0x2495 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x223A DUP3 PUSH2 0x2373 JUMP JUMPDEST SWAP2 POP PUSH2 0x2245 DUP4 PUSH2 0x2373 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x227A JUMPI PUSH2 0x2279 PUSH2 0x2495 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2290 DUP3 PUSH2 0x2337 JUMP JUMPDEST SWAP2 POP PUSH2 0x229B DUP4 PUSH2 0x2337 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x22AE JUMPI PUSH2 0x22AD PUSH2 0x2495 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22C4 DUP3 PUSH2 0x2373 JUMP JUMPDEST SWAP2 POP PUSH2 0x22CF DUP4 PUSH2 0x2373 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x22E2 JUMPI PUSH2 0x22E1 PUSH2 0x2495 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22F8 DUP3 PUSH2 0x2353 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23AA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x238F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x23B9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23CA DUP3 PUSH2 0x2373 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x23DE JUMPI PUSH2 0x23DD PUSH2 0x2495 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2401 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2415 JUMPI PUSH2 0x2414 PUSH2 0x24C4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2424 DUP3 PUSH2 0x2536 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2443 JUMPI PUSH2 0x2442 PUSH2 0x24F3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2457 DUP3 PUSH2 0x2373 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x248A JUMPI PUSH2 0x2489 PUSH2 0x2495 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A206F776E657220696E646578206F7574206F6620626F756E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6473000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231413A206F776E657220717565727920666F72206E6F6E65786973 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74656E7420746F6B656E00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231413A20676C6F62616C20696E646578206F7574206F6620626F75 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E64730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231413A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231413A20617070726F76652063616C6C6572206973206E6F74206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F76656420666F7220616C6C00000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231413A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231413A207472616E736665722066726F6D20696E636F7272656374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206F776E65720000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231413A20617070726F766520746F2063616C6C6572000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231413A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231413A20617070726F76616C20746F2063757272656E74206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231413A207472616E7366657220746F206E6F6E2045524337323152 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6563656976657220696D706C656D656E74657200000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231413A20756E61626C6520746F2067657420746F6B656E206F6620 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E657220627920696E646578000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231413A20756E61626C6520746F2064657465726D696E6520746865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206F776E6572206F6620746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231413A20617070726F76656420717565727920666F72206E6F6E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x78697374656E7420746F6B656E00000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x29CB DUP2 PUSH2 0x22ED JUMP JUMPDEST DUP2 EQ PUSH2 0x29D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x29E2 DUP2 PUSH2 0x22FF JUMP JUMPDEST DUP2 EQ PUSH2 0x29ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x29F9 DUP2 PUSH2 0x230B JUMP JUMPDEST DUP2 EQ PUSH2 0x2A04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2A10 DUP2 PUSH2 0x2373 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xA6 POP DUP9 0xC2 0xDA 0xBF CHAINID GASPRICE 0xB3 BLOCKHASH MSTORE SWAP1 PUSH19 0xE7AAF3E25DF99D79CBE8C6DDA1172339010F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "1055:14854:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4162:358;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5826:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7157:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6735:369;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2768:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7975:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3382:721;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8169:151;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2924:174;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5656:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4571:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5974:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7416:269;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8378:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6128:243;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12648:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7743:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4162:358;4284:4;4326:25;4311:40;;;:11;:40;;;;:98;;;;4376:33;4361:48;;;:11;:48;;;;4311:98;:158;;;;4434:35;4419:50;;;:11;:50;;;;4311:158;:204;;;;4479:36;4503:11;4479:23;:36::i;:::-;4311:204;4298:217;;4162:358;;;:::o;5826:92::-;5880:13;5908:5;5901:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5826:92;:::o;7157:200::-;7225:7;7248:16;7256:7;7248;:16::i;:::-;7240:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;7328:15;:24;7344:7;7328:24;;;;;;;;;;;;;;;;;;;;;7321:31;;7157:200;;;:::o;6735:369::-;6803:13;6819:24;6835:7;6819:15;:24::i;:::-;6803:40;;6863:5;6857:11;;:2;:11;;;;6849:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;6945:5;6929:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;6954:37;6971:5;6978:12;:10;:12::i;:::-;6954:16;:37::i;:::-;6929:62;6914:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;7071:28;7080:2;7084:7;7093:5;7071:8;:28::i;:::-;6797:307;6735:369;;:::o;2768:92::-;2821:7;2843:12;;2836:19;;2768:92;:::o;7975:136::-;8078:28;8088:4;8094:2;8098:7;8078:9;:28::i;:::-;7975:136;;;:::o;3382:721::-;3487:7;3520:16;3530:5;3520:9;:16::i;:::-;3512:5;:24;3504:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3581:22;3606:13;:11;:13::i;:::-;3581:38;;3625:19;3654:25;3703:9;3698:339;3722:14;3718:1;:18;3698:339;;;3751:31;3785:11;:14;3797:1;3785:14;;;;;;;;;;;3751:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3837:1;3811:28;;:9;:14;;;:28;;;3807:87;;3871:9;:14;;;3851:34;;3807:87;3926:5;3905:26;;:17;:26;;;3901:130;;;3962:5;3947:11;:20;3943:57;;;3988:1;3981:8;;;;;;;;;3943:57;4009:13;;;;;:::i;:::-;;;;3901:130;3743:294;3738:3;;;;;:::i;:::-;;;;3698:339;;;;4042:56;;;;;;;;;;:::i;:::-;;;;;;;;3382:721;;;;;:::o;8169:151::-;8276:39;8293:4;8299:2;8303:7;8276:39;;;;;;;;;;;;:16;:39::i;:::-;8169:151;;;:::o;2924:174::-;2991:7;3022:13;:11;:13::i;:::-;3014:5;:21;3006:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;3088:5;3081:12;;2924:174;;;:::o;5656:116::-;5720:7;5742:20;5754:7;5742:11;:20::i;:::-;:25;;;5735:32;;5656:116;;;:::o;4571:208::-;4635:7;4675:1;4658:19;;:5;:19;;;;4650:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;4746:12;:19;4759:5;4746:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;4738:36;;4731:43;;4571:208;;;:::o;5974:96::-;6030:13;6058:7;6051:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5974:96;:::o;7416:269::-;7518:12;:10;:12::i;:::-;7506:24;;:8;:24;;;;7498:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;7613:8;7568:18;:32;7587:12;:10;:12::i;:::-;7568:32;;;;;;;;;;;;;;;:42;7601:8;7568:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;7661:8;7632:48;;7647:12;:10;:12::i;:::-;7632:48;;;7671:8;7632:48;;;;;;:::i;:::-;;;;;;;;7416:269;;:::o;8378:300::-;8509:28;8519:4;8525:2;8529:7;8509:9;:28::i;:::-;8558:48;8581:4;8587:2;8591:7;8600:5;8558:22;:48::i;:::-;8543:130;;;;;;;;;;;;:::i;:::-;;;;;;;;;8378:300;;;;:::o;6128:243::-;6221:13;6259:16;6267:7;6259;:16::i;:::-;6244:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;6356:10;:8;:10::i;:::-;6349:17;;6128:243;;;:::o;12648:43::-;;;;:::o;7743:178::-;7860:4;7881:18;:25;7900:5;7881:25;;;;;;;;;;;;;;;:35;7907:8;7881:35;;;;;;;;;;;;;;;;;;;;;;;;;7874:42;;7743:178;;;;:::o;763:155:7:-;848:4;886:25;871:40;;;:11;:40;;;;864:47;;763:155;;;:::o;8908:103:9:-;8965:4;8994:12;;8984:7;:22;8977:29;;8908:103;;;:::o;587:96:5:-;640:7;666:10;659:17;;587:96;:::o;12479:165:9:-;12598:2;12571:15;:24;12587:7;12571:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12631:7;12627:2;12611:28;;12620:5;12611:28;;;;;;;;;;;;12479:165;;;:::o;10896:1484::-;10988:35;11026:20;11038:7;11026:11;:20::i;:::-;10988:58;;11053:22;11095:13;:18;;;11079:34;;:12;:10;:12::i;:::-;:34;;;:80;;;;11147:12;:10;:12::i;:::-;11123:36;;:20;11135:7;11123:11;:20::i;:::-;:36;;;11079:80;:140;;;;11169:50;11186:13;:18;;;11206:12;:10;:12::i;:::-;11169:16;:50::i;:::-;11079:140;11053:167;;11242:17;11227:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;11369:4;11347:26;;:13;:18;;;:26;;;11332:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;11455:1;11441:16;;:2;:16;;;;11433:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;11506:43;11528:4;11534:2;11538:7;11547:1;11506:21;:43::i;:::-;11603:49;11620:1;11624:7;11633:13;:18;;;11603:8;:49::i;:::-;11689:1;11659:12;:18;11672:4;11659:18;;;;;;;;;;;;;;;:26;;;:31;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;11724:1;11696:12;:16;11709:2;11696:16;;;;;;;;;;;;;;;:24;;;:29;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;11754:43;;;;;;;;11769:2;11754:43;;;;;;11780:15;11754:43;;;;;11731:11;:20;11743:7;11731:20;;;;;;;;;;;:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12021:19;12053:1;12043:7;:11;;;;:::i;:::-;12021:33;;12105:1;12064:43;;:11;:24;12076:11;12064:24;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;12060:229;;;12121:20;12129:11;12121:7;:20::i;:::-;12117:166;;;12180:94;;;;;;;;12206:13;:18;;;12180:94;;;;;;12236:13;:28;;;12180:94;;;;;12153:11;:24;12165:11;12153:24;;;;;;;;;;;:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12117:166;12060:229;12319:7;12315:2;12300:27;;12309:4;12300:27;;;;;;;;;;;;12333:42;12354:4;12360:2;12364:7;12373:1;12333:20;:42::i;:::-;10982:1398;;;10896:1484;;;:::o;5021:586::-;5094:21;;:::i;:::-;5133:16;5141:7;5133;:16::i;:::-;5125:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;5203:26;5250:12;5239:7;:23;5235:91;;5318:1;5303:12;5293:7;:22;;;;:::i;:::-;:26;;;;:::i;:::-;5272:47;;5235:91;5337:12;5352:7;5337:22;;5332:207;5369:18;5361:4;:26;5332:207;;5405:31;5439:11;:17;5451:4;5439:17;;;;;;;;;;;5405:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5494:1;5468:28;;:9;:14;;;:28;;;5464:69;;5515:9;5508:16;;;;;;;5464:69;5397:142;5389:6;;;;;:::i;:::-;;;;5332:207;;;;5545:57;;;;;;;;;;:::i;:::-;;;;;;;;5021:586;;;;:::o;14149:667::-;14281:4;14297:15;:2;:13;;;:15::i;:::-;14293:519;;;14350:2;14334:36;;;14371:12;:10;:12::i;:::-;14385:4;14391:7;14400:5;14334:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14322:452;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14578:1;14561:6;:13;:18;14557:209;;;14593:61;;;;;;;;;;:::i;:::-;;;;;;;;14557:209;14736:6;14730:13;14721:6;14717:2;14713:15;14706:38;14322:452;14464:45;;;14454:55;;;:6;:55;;;;14447:62;;;;;14293:519;14801:4;14794:11;;14149:667;;;;;;;:::o;6600:86::-;6651:13;6672:9;;;;;;;;;;;;;;6600:86;:::o;15264:136::-;;;;;:::o;15772:135::-;;;;;:::o;718:377:4:-;778:4;981:12;1046:7;1034:20;1026:28;;1087:1;1080:4;:8;1073:15;;;718:377;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::o;7:410:10:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;568:133::-;611:5;649:6;636:20;627:29;;665:30;689:5;665:30;:::i;:::-;568:133;;;;:::o;707:137::-;752:5;790:6;777:20;768:29;;806:32;832:5;806:32;:::i;:::-;707:137;;;;:::o;850:141::-;906:5;937:6;931:13;922:22;;953:32;979:5;953:32;:::i;:::-;850:141;;;;:::o;1010:338::-;1065:5;1114:3;1107:4;1099:6;1095:17;1091:27;1081:122;;1122:79;;:::i;:::-;1081:122;1239:6;1226:20;1264:78;1338:3;1330:6;1323:4;1315:6;1311:17;1264:78;:::i;:::-;1255:87;;1071:277;1010:338;;;;:::o;1354:139::-;1400:5;1438:6;1425:20;1416:29;;1454:33;1481:5;1454:33;:::i;:::-;1354:139;;;;:::o;1499:329::-;1558:6;1607:2;1595:9;1586:7;1582:23;1578:32;1575:119;;;1613:79;;:::i;:::-;1575:119;1733:1;1758:53;1803:7;1794:6;1783:9;1779:22;1758:53;:::i;:::-;1748:63;;1704:117;1499:329;;;;:::o;1834:474::-;1902:6;1910;1959:2;1947:9;1938:7;1934:23;1930:32;1927:119;;;1965:79;;:::i;:::-;1927:119;2085:1;2110:53;2155:7;2146:6;2135:9;2131:22;2110:53;:::i;:::-;2100:63;;2056:117;2212:2;2238:53;2283:7;2274:6;2263:9;2259:22;2238:53;:::i;:::-;2228:63;;2183:118;1834:474;;;;;:::o;2314:619::-;2391:6;2399;2407;2456:2;2444:9;2435:7;2431:23;2427:32;2424:119;;;2462:79;;:::i;:::-;2424:119;2582:1;2607:53;2652:7;2643:6;2632:9;2628:22;2607:53;:::i;:::-;2597:63;;2553:117;2709:2;2735:53;2780:7;2771:6;2760:9;2756:22;2735:53;:::i;:::-;2725:63;;2680:118;2837:2;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2808:118;2314:619;;;;;:::o;2939:943::-;3034:6;3042;3050;3058;3107:3;3095:9;3086:7;3082:23;3078:33;3075:120;;;3114:79;;:::i;:::-;3075:120;3234:1;3259:53;3304:7;3295:6;3284:9;3280:22;3259:53;:::i;:::-;3249:63;;3205:117;3361:2;3387:53;3432:7;3423:6;3412:9;3408:22;3387:53;:::i;:::-;3377:63;;3332:118;3489:2;3515:53;3560:7;3551:6;3540:9;3536:22;3515:53;:::i;:::-;3505:63;;3460:118;3645:2;3634:9;3630:18;3617:32;3676:18;3668:6;3665:30;3662:117;;;3698:79;;:::i;:::-;3662:117;3803:62;3857:7;3848:6;3837:9;3833:22;3803:62;:::i;:::-;3793:72;;3588:287;2939:943;;;;;;;:::o;3888:468::-;3953:6;3961;4010:2;3998:9;3989:7;3985:23;3981:32;3978:119;;;4016:79;;:::i;:::-;3978:119;4136:1;4161:53;4206:7;4197:6;4186:9;4182:22;4161:53;:::i;:::-;4151:63;;4107:117;4263:2;4289:50;4331:7;4322:6;4311:9;4307:22;4289:50;:::i;:::-;4279:60;;4234:115;3888:468;;;;;:::o;4362:474::-;4430:6;4438;4487:2;4475:9;4466:7;4462:23;4458:32;4455:119;;;4493:79;;:::i;:::-;4455:119;4613:1;4638:53;4683:7;4674:6;4663:9;4659:22;4638:53;:::i;:::-;4628:63;;4584:117;4740:2;4766:53;4811:7;4802:6;4791:9;4787:22;4766:53;:::i;:::-;4756:63;;4711:118;4362:474;;;;;:::o;4842:327::-;4900:6;4949:2;4937:9;4928:7;4924:23;4920:32;4917:119;;;4955:79;;:::i;:::-;4917:119;5075:1;5100:52;5144:7;5135:6;5124:9;5120:22;5100:52;:::i;:::-;5090:62;;5046:116;4842:327;;;;:::o;5175:349::-;5244:6;5293:2;5281:9;5272:7;5268:23;5264:32;5261:119;;;5299:79;;:::i;:::-;5261:119;5419:1;5444:63;5499:7;5490:6;5479:9;5475:22;5444:63;:::i;:::-;5434:73;;5390:127;5175:349;;;;:::o;5530:329::-;5589:6;5638:2;5626:9;5617:7;5613:23;5609:32;5606:119;;;5644:79;;:::i;:::-;5606:119;5764:1;5789:53;5834:7;5825:6;5814:9;5810:22;5789:53;:::i;:::-;5779:63;;5735:117;5530:329;;;;:::o;5865:118::-;5952:24;5970:5;5952:24;:::i;:::-;5947:3;5940:37;5865:118;;:::o;5989:109::-;6070:21;6085:5;6070:21;:::i;:::-;6065:3;6058:34;5989:109;;:::o;6104:360::-;6190:3;6218:38;6250:5;6218:38;:::i;:::-;6272:70;6335:6;6330:3;6272:70;:::i;:::-;6265:77;;6351:52;6396:6;6391:3;6384:4;6377:5;6373:16;6351:52;:::i;:::-;6428:29;6450:6;6428:29;:::i;:::-;6423:3;6419:39;6412:46;;6194:270;6104:360;;;;:::o;6470:364::-;6558:3;6586:39;6619:5;6586:39;:::i;:::-;6641:71;6705:6;6700:3;6641:71;:::i;:::-;6634:78;;6721:52;6766:6;6761:3;6754:4;6747:5;6743:16;6721:52;:::i;:::-;6798:29;6820:6;6798:29;:::i;:::-;6793:3;6789:39;6782:46;;6562:272;6470:364;;;;:::o;6840:366::-;6982:3;7003:67;7067:2;7062:3;7003:67;:::i;:::-;6996:74;;7079:93;7168:3;7079:93;:::i;:::-;7197:2;7192:3;7188:12;7181:19;;6840:366;;;:::o;7212:::-;7354:3;7375:67;7439:2;7434:3;7375:67;:::i;:::-;7368:74;;7451:93;7540:3;7451:93;:::i;:::-;7569:2;7564:3;7560:12;7553:19;;7212:366;;;:::o;7584:::-;7726:3;7747:67;7811:2;7806:3;7747:67;:::i;:::-;7740:74;;7823:93;7912:3;7823:93;:::i;:::-;7941:2;7936:3;7932:12;7925:19;;7584:366;;;:::o;7956:::-;8098:3;8119:67;8183:2;8178:3;8119:67;:::i;:::-;8112:74;;8195:93;8284:3;8195:93;:::i;:::-;8313:2;8308:3;8304:12;8297:19;;7956:366;;;:::o;8328:::-;8470:3;8491:67;8555:2;8550:3;8491:67;:::i;:::-;8484:74;;8567:93;8656:3;8567:93;:::i;:::-;8685:2;8680:3;8676:12;8669:19;;8328:366;;;:::o;8700:::-;8842:3;8863:67;8927:2;8922:3;8863:67;:::i;:::-;8856:74;;8939:93;9028:3;8939:93;:::i;:::-;9057:2;9052:3;9048:12;9041:19;;8700:366;;;:::o;9072:::-;9214:3;9235:67;9299:2;9294:3;9235:67;:::i;:::-;9228:74;;9311:93;9400:3;9311:93;:::i;:::-;9429:2;9424:3;9420:12;9413:19;;9072:366;;;:::o;9444:::-;9586:3;9607:67;9671:2;9666:3;9607:67;:::i;:::-;9600:74;;9683:93;9772:3;9683:93;:::i;:::-;9801:2;9796:3;9792:12;9785:19;;9444:366;;;:::o;9816:::-;9958:3;9979:67;10043:2;10038:3;9979:67;:::i;:::-;9972:74;;10055:93;10144:3;10055:93;:::i;:::-;10173:2;10168:3;10164:12;10157:19;;9816:366;;;:::o;10188:::-;10330:3;10351:67;10415:2;10410:3;10351:67;:::i;:::-;10344:74;;10427:93;10516:3;10427:93;:::i;:::-;10545:2;10540:3;10536:12;10529:19;;10188:366;;;:::o;10560:::-;10702:3;10723:67;10787:2;10782:3;10723:67;:::i;:::-;10716:74;;10799:93;10888:3;10799:93;:::i;:::-;10917:2;10912:3;10908:12;10901:19;;10560:366;;;:::o;10932:::-;11074:3;11095:67;11159:2;11154:3;11095:67;:::i;:::-;11088:74;;11171:93;11260:3;11171:93;:::i;:::-;11289:2;11284:3;11280:12;11273:19;;10932:366;;;:::o;11304:::-;11446:3;11467:67;11531:2;11526:3;11467:67;:::i;:::-;11460:74;;11543:93;11632:3;11543:93;:::i;:::-;11661:2;11656:3;11652:12;11645:19;;11304:366;;;:::o;11676:::-;11818:3;11839:67;11903:2;11898:3;11839:67;:::i;:::-;11832:74;;11915:93;12004:3;11915:93;:::i;:::-;12033:2;12028:3;12024:12;12017:19;;11676:366;;;:::o;12048:::-;12190:3;12211:67;12275:2;12270:3;12211:67;:::i;:::-;12204:74;;12287:93;12376:3;12287:93;:::i;:::-;12405:2;12400:3;12396:12;12389:19;;12048:366;;;:::o;12420:118::-;12507:24;12525:5;12507:24;:::i;:::-;12502:3;12495:37;12420:118;;:::o;12544:222::-;12637:4;12675:2;12664:9;12660:18;12652:26;;12688:71;12756:1;12745:9;12741:17;12732:6;12688:71;:::i;:::-;12544:222;;;;:::o;12772:640::-;12967:4;13005:3;12994:9;12990:19;12982:27;;13019:71;13087:1;13076:9;13072:17;13063:6;13019:71;:::i;:::-;13100:72;13168:2;13157:9;13153:18;13144:6;13100:72;:::i;:::-;13182;13250:2;13239:9;13235:18;13226:6;13182:72;:::i;:::-;13301:9;13295:4;13291:20;13286:2;13275:9;13271:18;13264:48;13329:76;13400:4;13391:6;13329:76;:::i;:::-;13321:84;;12772:640;;;;;;;:::o;13418:210::-;13505:4;13543:2;13532:9;13528:18;13520:26;;13556:65;13618:1;13607:9;13603:17;13594:6;13556:65;:::i;:::-;13418:210;;;;:::o;13634:313::-;13747:4;13785:2;13774:9;13770:18;13762:26;;13834:9;13828:4;13824:20;13820:1;13809:9;13805:17;13798:47;13862:78;13935:4;13926:6;13862:78;:::i;:::-;13854:86;;13634:313;;;;:::o;13953:419::-;14119:4;14157:2;14146:9;14142:18;14134:26;;14206:9;14200:4;14196:20;14192:1;14181:9;14177:17;14170:47;14234:131;14360:4;14234:131;:::i;:::-;14226:139;;13953:419;;;:::o;14378:::-;14544:4;14582:2;14571:9;14567:18;14559:26;;14631:9;14625:4;14621:20;14617:1;14606:9;14602:17;14595:47;14659:131;14785:4;14659:131;:::i;:::-;14651:139;;14378:419;;;:::o;14803:::-;14969:4;15007:2;14996:9;14992:18;14984:26;;15056:9;15050:4;15046:20;15042:1;15031:9;15027:17;15020:47;15084:131;15210:4;15084:131;:::i;:::-;15076:139;;14803:419;;;:::o;15228:::-;15394:4;15432:2;15421:9;15417:18;15409:26;;15481:9;15475:4;15471:20;15467:1;15456:9;15452:17;15445:47;15509:131;15635:4;15509:131;:::i;:::-;15501:139;;15228:419;;;:::o;15653:::-;15819:4;15857:2;15846:9;15842:18;15834:26;;15906:9;15900:4;15896:20;15892:1;15881:9;15877:17;15870:47;15934:131;16060:4;15934:131;:::i;:::-;15926:139;;15653:419;;;:::o;16078:::-;16244:4;16282:2;16271:9;16267:18;16259:26;;16331:9;16325:4;16321:20;16317:1;16306:9;16302:17;16295:47;16359:131;16485:4;16359:131;:::i;:::-;16351:139;;16078:419;;;:::o;16503:::-;16669:4;16707:2;16696:9;16692:18;16684:26;;16756:9;16750:4;16746:20;16742:1;16731:9;16727:17;16720:47;16784:131;16910:4;16784:131;:::i;:::-;16776:139;;16503:419;;;:::o;16928:::-;17094:4;17132:2;17121:9;17117:18;17109:26;;17181:9;17175:4;17171:20;17167:1;17156:9;17152:17;17145:47;17209:131;17335:4;17209:131;:::i;:::-;17201:139;;16928:419;;;:::o;17353:::-;17519:4;17557:2;17546:9;17542:18;17534:26;;17606:9;17600:4;17596:20;17592:1;17581:9;17577:17;17570:47;17634:131;17760:4;17634:131;:::i;:::-;17626:139;;17353:419;;;:::o;17778:::-;17944:4;17982:2;17971:9;17967:18;17959:26;;18031:9;18025:4;18021:20;18017:1;18006:9;18002:17;17995:47;18059:131;18185:4;18059:131;:::i;:::-;18051:139;;17778:419;;;:::o;18203:::-;18369:4;18407:2;18396:9;18392:18;18384:26;;18456:9;18450:4;18446:20;18442:1;18431:9;18427:17;18420:47;18484:131;18610:4;18484:131;:::i;:::-;18476:139;;18203:419;;;:::o;18628:::-;18794:4;18832:2;18821:9;18817:18;18809:26;;18881:9;18875:4;18871:20;18867:1;18856:9;18852:17;18845:47;18909:131;19035:4;18909:131;:::i;:::-;18901:139;;18628:419;;;:::o;19053:::-;19219:4;19257:2;19246:9;19242:18;19234:26;;19306:9;19300:4;19296:20;19292:1;19281:9;19277:17;19270:47;19334:131;19460:4;19334:131;:::i;:::-;19326:139;;19053:419;;;:::o;19478:::-;19644:4;19682:2;19671:9;19667:18;19659:26;;19731:9;19725:4;19721:20;19717:1;19706:9;19702:17;19695:47;19759:131;19885:4;19759:131;:::i;:::-;19751:139;;19478:419;;;:::o;19903:::-;20069:4;20107:2;20096:9;20092:18;20084:26;;20156:9;20150:4;20146:20;20142:1;20131:9;20127:17;20120:47;20184:131;20310:4;20184:131;:::i;:::-;20176:139;;19903:419;;;:::o;20328:222::-;20421:4;20459:2;20448:9;20444:18;20436:26;;20472:71;20540:1;20529:9;20525:17;20516:6;20472:71;:::i;:::-;20328:222;;;;:::o;20556:129::-;20590:6;20617:20;;:::i;:::-;20607:30;;20646:33;20674:4;20666:6;20646:33;:::i;:::-;20556:129;;;:::o;20691:75::-;20724:6;20757:2;20751:9;20741:19;;20691:75;:::o;20772:307::-;20833:4;20923:18;20915:6;20912:30;20909:56;;;20945:18;;:::i;:::-;20909:56;20983:29;21005:6;20983:29;:::i;:::-;20975:37;;21067:4;21061;21057:15;21049:23;;20772:307;;;:::o;21085:98::-;21136:6;21170:5;21164:12;21154:22;;21085:98;;;:::o;21189:99::-;21241:6;21275:5;21269:12;21259:22;;21189:99;;;:::o;21294:168::-;21377:11;21411:6;21406:3;21399:19;21451:4;21446:3;21442:14;21427:29;;21294:168;;;;:::o;21468:169::-;21552:11;21586:6;21581:3;21574:19;21626:4;21621:3;21617:14;21602:29;;21468:169;;;;:::o;21643:273::-;21683:3;21702:20;21720:1;21702:20;:::i;:::-;21697:25;;21736:20;21754:1;21736:20;:::i;:::-;21731:25;;21858:1;21822:34;21818:42;21815:1;21812:49;21809:75;;;21864:18;;:::i;:::-;21809:75;21908:1;21905;21901:9;21894:16;;21643:273;;;;:::o;21922:305::-;21962:3;21981:20;21999:1;21981:20;:::i;:::-;21976:25;;22015:20;22033:1;22015:20;:::i;:::-;22010:25;;22169:1;22101:66;22097:74;22094:1;22091:81;22088:107;;;22175:18;;:::i;:::-;22088:107;22219:1;22216;22212:9;22205:16;;21922:305;;;;:::o;22233:191::-;22273:4;22293:20;22311:1;22293:20;:::i;:::-;22288:25;;22327:20;22345:1;22327:20;:::i;:::-;22322:25;;22366:1;22363;22360:8;22357:34;;;22371:18;;:::i;:::-;22357:34;22416:1;22413;22409:9;22401:17;;22233:191;;;;:::o;22430:::-;22470:4;22490:20;22508:1;22490:20;:::i;:::-;22485:25;;22524:20;22542:1;22524:20;:::i;:::-;22519:25;;22563:1;22560;22557:8;22554:34;;;22568:18;;:::i;:::-;22554:34;22613:1;22610;22606:9;22598:17;;22430:191;;;;:::o;22627:96::-;22664:7;22693:24;22711:5;22693:24;:::i;:::-;22682:35;;22627:96;;;:::o;22729:90::-;22763:7;22806:5;22799:13;22792:21;22781:32;;22729:90;;;:::o;22825:149::-;22861:7;22901:66;22894:5;22890:78;22879:89;;22825:149;;;:::o;22980:118::-;23017:7;23057:34;23050:5;23046:46;23035:57;;22980:118;;;:::o;23104:126::-;23141:7;23181:42;23174:5;23170:54;23159:65;;23104:126;;;:::o;23236:77::-;23273:7;23302:5;23291:16;;23236:77;;;:::o;23319:154::-;23403:6;23398:3;23393;23380:30;23465:1;23456:6;23451:3;23447:16;23440:27;23319:154;;;:::o;23479:307::-;23547:1;23557:113;23571:6;23568:1;23565:13;23557:113;;;23656:1;23651:3;23647:11;23641:18;23637:1;23632:3;23628:11;23621:39;23593:2;23590:1;23586:10;23581:15;;23557:113;;;23688:6;23685:1;23682:13;23679:101;;;23768:1;23759:6;23754:3;23750:16;23743:27;23679:101;23528:258;23479:307;;;:::o;23792:171::-;23831:3;23854:24;23872:5;23854:24;:::i;:::-;23845:33;;23900:4;23893:5;23890:15;23887:41;;;23908:18;;:::i;:::-;23887:41;23955:1;23948:5;23944:13;23937:20;;23792:171;;;:::o;23969:320::-;24013:6;24050:1;24044:4;24040:12;24030:22;;24097:1;24091:4;24087:12;24118:18;24108:81;;24174:4;24166:6;24162:17;24152:27;;24108:81;24236:2;24228:6;24225:14;24205:18;24202:38;24199:84;;;24255:18;;:::i;:::-;24199:84;24020:269;23969:320;;;:::o;24295:281::-;24378:27;24400:4;24378:27;:::i;:::-;24370:6;24366:40;24508:6;24496:10;24493:22;24472:18;24460:10;24457:34;24454:62;24451:88;;;24519:18;;:::i;:::-;24451:88;24559:10;24555:2;24548:22;24338:238;24295:281;;:::o;24582:233::-;24621:3;24644:24;24662:5;24644:24;:::i;:::-;24635:33;;24690:66;24683:5;24680:77;24677:103;;;24760:18;;:::i;:::-;24677:103;24807:1;24800:5;24796:13;24789:20;;24582:233;;;:::o;24821:180::-;24869:77;24866:1;24859:88;24966:4;24963:1;24956:15;24990:4;24987:1;24980:15;25007:180;25055:77;25052:1;25045:88;25152:4;25149:1;25142:15;25176:4;25173:1;25166:15;25193:180;25241:77;25238:1;25231:88;25338:4;25335:1;25328:15;25362:4;25359:1;25352:15;25379:117;25488:1;25485;25478:12;25502:117;25611:1;25608;25601:12;25625:117;25734:1;25731;25724:12;25748:117;25857:1;25854;25847:12;25871:102;25912:6;25963:2;25959:7;25954:2;25947:5;25943:14;25939:28;25929:38;;25871:102;;;:::o;25979:221::-;26119:34;26115:1;26107:6;26103:14;26096:58;26188:4;26183:2;26175:6;26171:15;26164:29;25979:221;:::o;26206:229::-;26346:34;26342:1;26334:6;26330:14;26323:58;26415:12;26410:2;26402:6;26398:15;26391:37;26206:229;:::o;26441:222::-;26581:34;26577:1;26569:6;26565:14;26558:58;26650:5;26645:2;26637:6;26633:15;26626:30;26441:222;:::o;26669:224::-;26809:34;26805:1;26797:6;26793:14;26786:58;26878:7;26873:2;26865:6;26861:15;26854:32;26669:224;:::o;26899:244::-;27039:34;27035:1;27027:6;27023:14;27016:58;27108:27;27103:2;27095:6;27091:15;27084:52;26899:244;:::o;27149:230::-;27289:34;27285:1;27277:6;27273:14;27266:58;27358:13;27353:2;27345:6;27341:15;27334:38;27149:230;:::o;27385:225::-;27525:34;27521:1;27513:6;27509:14;27502:58;27594:8;27589:2;27581:6;27577:15;27570:33;27385:225;:::o;27616:234::-;27756:34;27752:1;27744:6;27740:14;27733:58;27825:17;27820:2;27812:6;27808:15;27801:42;27616:234;:::o;27856:176::-;27996:28;27992:1;27984:6;27980:14;27973:52;27856:176;:::o;28038:237::-;28178:34;28174:1;28166:6;28162:14;28155:58;28247:20;28242:2;28234:6;28230:15;28223:45;28038:237;:::o;28281:221::-;28421:34;28417:1;28409:6;28405:14;28398:58;28490:4;28485:2;28477:6;28473:15;28466:29;28281:221;:::o;28508:238::-;28648:34;28644:1;28636:6;28632:14;28625:58;28717:21;28712:2;28704:6;28700:15;28693:46;28508:238;:::o;28752:233::-;28892:34;28888:1;28880:6;28876:14;28869:58;28961:16;28956:2;28948:6;28944:15;28937:41;28752:233;:::o;28991:234::-;29131:34;29127:1;29119:6;29115:14;29108:58;29200:17;29195:2;29187:6;29183:15;29176:42;28991:234;:::o;29231:232::-;29371:34;29367:1;29359:6;29355:14;29348:58;29440:15;29435:2;29427:6;29423:15;29416:40;29231:232;:::o;29469:122::-;29542:24;29560:5;29542:24;:::i;:::-;29535:5;29532:35;29522:63;;29581:1;29578;29571:12;29522:63;29469:122;:::o;29597:116::-;29667:21;29682:5;29667:21;:::i;:::-;29660:5;29657:32;29647:60;;29703:1;29700;29693:12;29647:60;29597:116;:::o;29719:120::-;29791:23;29808:5;29791:23;:::i;:::-;29784:5;29781:34;29771:62;;29829:1;29826;29819:12;29771:62;29719:120;:::o;29845:122::-;29918:24;29936:5;29918:24;:::i;:::-;29911:5;29908:35;29898:63;;29957:1;29954;29947:12;29898:63;29845:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2167200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2994",
								"getApproved(uint256)": "5099",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"nextOwnerToExplicitlySet()": "2517",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "843",
								"symbol()": "infinite",
								"tokenByIndex(uint256)": "infinite",
								"tokenOfOwnerByIndex(address,uint256)": "infinite",
								"tokenURI(uint256)": "3181",
								"totalSupply()": "2460",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "17",
								"_approve(address,uint256,address)": "26292",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "17",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "2134",
								"_numberMinted(address)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setOwnersExplicit(uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"ownershipOf(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH",
									"source": 9,
									"value": "C0"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1391,
									"end": 1392,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1360,
									"end": 1392,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1360,
									"end": 1392,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 12690,
									"end": 12691,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 12648,
									"end": 12691,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 12648,
									"end": 12691,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2448,
									"end": 2449,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2430,
									"end": 2445,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2430,
									"end": 2449,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2415,
									"end": 2511,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 2415,
									"end": 2511,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2415,
									"end": 2511,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2415,
									"end": 2511,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2415,
									"end": 2511,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2415,
									"end": 2511,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2415,
									"end": 2511,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2415,
									"end": 2511,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2415,
									"end": 2511,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2415,
									"end": 2511,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 2415,
									"end": 2511,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2415,
									"end": 2511,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 2415,
									"end": 2511,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2415,
									"end": 2511,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 2415,
									"end": 2511,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2415,
									"end": 2511,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2415,
									"end": 2511,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2415,
									"end": 2511,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2415,
									"end": 2511,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2415,
									"end": 2511,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2415,
									"end": 2511,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2415,
									"end": 2511,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2415,
									"end": 2511,
									"name": "tag",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 2415,
									"end": 2511,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2541,
									"end": 2542,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2538,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2525,
									"end": 2542,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2517,
									"end": 2586,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 2517,
									"end": 2586,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2517,
									"end": 2586,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2517,
									"end": 2586,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2517,
									"end": 2586,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2517,
									"end": 2586,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2517,
									"end": 2586,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2517,
									"end": 2586,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2517,
									"end": 2586,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2517,
									"end": 2586,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 2517,
									"end": 2586,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2517,
									"end": 2586,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 2517,
									"end": 2586,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2517,
									"end": 2586,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 2517,
									"end": 2586,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2517,
									"end": 2586,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2517,
									"end": 2586,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2517,
									"end": 2586,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2517,
									"end": 2586,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2517,
									"end": 2586,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2517,
									"end": 2586,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2517,
									"end": 2586,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2517,
									"end": 2586,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 2517,
									"end": 2586,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2600,
									"end": 2605,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2621,
									"end": 2628,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2611,
									"end": 2618,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2611,
									"end": 2628,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2611,
									"end": 2628,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2611,
									"end": 2628,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2611,
									"end": 2628,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2611,
									"end": 2628,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2611,
									"end": 2628,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2611,
									"end": 2628,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2611,
									"end": 2628,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 2611,
									"end": 2628,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2611,
									"end": 2628,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2611,
									"end": 2628,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2611,
									"end": 2628,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 2611,
									"end": 2628,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2611,
									"end": 2628,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 2611,
									"end": 2628,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2611,
									"end": 2628,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2649,
									"end": 2662,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2634,
									"end": 2662,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 2634,
									"end": 2662,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2634,
									"end": 2662,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2634,
									"end": 2662,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2634,
									"end": 2662,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2634,
									"end": 2662,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2685,
									"end": 2700,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2668,
									"end": 2700,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 2668,
									"end": 2700,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2668,
									"end": 2700,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2668,
									"end": 2700,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2668,
									"end": 2700,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2668,
									"end": 2700,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2705,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 96,
									"end": 101,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 112,
									"end": 187,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 112,
									"end": 187,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 208,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 248,
									"end": 252,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 246,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 237,
									"end": 253,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 286,
									"end": 289,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 272,
									"end": 275,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 268,
									"end": 284,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 265,
									"end": 290,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 262,
									"end": 374,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 262,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 262,
									"end": 374,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 415,
									"end": 421,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 410,
									"end": 413,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 405,
									"end": 408,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 102,
									"end": 428,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 515,
									"end": 520,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 567,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 557,
									"end": 561,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 549,
									"end": 555,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 545,
									"end": 562,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 541,
									"end": 568,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 531,
									"end": 653,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 531,
									"end": 653,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 682,
									"end": 688,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 676,
									"end": 689,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 793,
									"end": 796,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 778,
									"end": 782,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 776,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 766,
									"end": 783,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 698,
									"end": 797,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 698,
									"end": 797,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 521,
									"end": 803,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 809,
									"end": 952,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 809,
									"end": 952,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 866,
									"end": 871,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 897,
									"end": 903,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 891,
									"end": 904,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 882,
									"end": 904,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 882,
									"end": 904,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 913,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 940,
									"end": 945,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 913,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 913,
									"end": 946,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 913,
									"end": 946,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 913,
									"end": 946,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 809,
									"end": 952,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 809,
									"end": 952,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 809,
									"end": 952,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 809,
									"end": 952,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 809,
									"end": 952,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 958,
									"end": 2124,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 958,
									"end": 2124,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1075,
									"end": 1081,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1083,
									"end": 1089,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1091,
									"end": 1097,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1099,
									"end": 1105,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1148,
									"end": 1151,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 1136,
									"end": 1145,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1127,
									"end": 1134,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1123,
									"end": 1146,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1119,
									"end": 1152,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 1116,
									"end": 1236,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1116,
									"end": 1236,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 1116,
									"end": 1236,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1155,
									"end": 1234,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 1155,
									"end": 1234,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 1155,
									"end": 1234,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 1155,
									"end": 1234,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 1155,
									"end": 1234,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1116,
									"end": 1236,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 1116,
									"end": 1236,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1297,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1285,
									"end": 1294,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1281,
									"end": 1298,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1275,
									"end": 1299,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1344,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1315,
									"end": 1345,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1312,
									"end": 1429,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1312,
									"end": 1429,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 1312,
									"end": 1429,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1348,
									"end": 1427,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 1348,
									"end": 1427,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1348,
									"end": 1427,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 1348,
									"end": 1427,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 1348,
									"end": 1427,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1312,
									"end": 1429,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 1312,
									"end": 1429,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1453,
									"end": 1527,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1519,
									"end": 1526,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1510,
									"end": 1516,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1499,
									"end": 1508,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 1495,
									"end": 1517,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1453,
									"end": 1527,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1453,
									"end": 1527,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 1453,
									"end": 1527,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1453,
									"end": 1527,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1443,
									"end": 1527,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 1443,
									"end": 1527,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 1537,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1597,
									"end": 1599,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1595,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1582,
									"end": 1600,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1576,
									"end": 1601,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1628,
									"end": 1646,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1620,
									"end": 1626,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1617,
									"end": 1647,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1614,
									"end": 1731,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1614,
									"end": 1731,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1614,
									"end": 1731,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1650,
									"end": 1729,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1650,
									"end": 1729,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1650,
									"end": 1729,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 1650,
									"end": 1729,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1650,
									"end": 1729,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1614,
									"end": 1731,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1614,
									"end": 1731,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 1829,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1812,
									"end": 1818,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1801,
									"end": 1810,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 1797,
									"end": 1819,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 1829,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1755,
									"end": 1829,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 1755,
									"end": 1829,
									"name": "tag",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 1755,
									"end": 1829,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1745,
									"end": 1829,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1745,
									"end": 1829,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1547,
									"end": 1839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1878,
									"end": 1880,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1904,
									"end": 1968,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1960,
									"end": 1967,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1951,
									"end": 1957,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1940,
									"end": 1949,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 1936,
									"end": 1958,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1904,
									"end": 1968,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 1904,
									"end": 1968,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 1904,
									"end": 1968,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1904,
									"end": 1968,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1894,
									"end": 1968,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1894,
									"end": 1968,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1849,
									"end": 1978,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2017,
									"end": 2019,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 2043,
									"end": 2107,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 2099,
									"end": 2106,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 2090,
									"end": 2096,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2079,
									"end": 2088,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2075,
									"end": 2097,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2043,
									"end": 2107,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 2043,
									"end": 2107,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 2043,
									"end": 2107,
									"name": "tag",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 2043,
									"end": 2107,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2033,
									"end": 2107,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2033,
									"end": 2107,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1988,
									"end": 2117,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 958,
									"end": 2124,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 958,
									"end": 2124,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 958,
									"end": 2124,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 958,
									"end": 2124,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 958,
									"end": 2124,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 958,
									"end": 2124,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 958,
									"end": 2124,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 958,
									"end": 2124,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 2130,
									"end": 2496,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 2130,
									"end": 2496,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2272,
									"end": 2275,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2293,
									"end": 2360,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 2357,
									"end": 2359,
									"name": "PUSH",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 2352,
									"end": 2355,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2293,
									"end": 2360,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 2293,
									"end": 2360,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 2293,
									"end": 2360,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 2293,
									"end": 2360,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2286,
									"end": 2360,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2286,
									"end": 2360,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2369,
									"end": 2462,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 2458,
									"end": 2461,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2369,
									"end": 2462,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 2369,
									"end": 2462,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 2369,
									"end": 2462,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 2369,
									"end": 2462,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2487,
									"end": 2489,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2482,
									"end": 2485,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2478,
									"end": 2490,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2471,
									"end": 2490,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2471,
									"end": 2490,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2130,
									"end": 2496,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2130,
									"end": 2496,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2130,
									"end": 2496,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2130,
									"end": 2496,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 2502,
									"end": 2868,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 2502,
									"end": 2868,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2644,
									"end": 2647,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2665,
									"end": 2732,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 2729,
									"end": 2731,
									"name": "PUSH",
									"source": 10,
									"value": "2E"
								},
								{
									"begin": 2724,
									"end": 2727,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2665,
									"end": 2732,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 2665,
									"end": 2732,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 2665,
									"end": 2732,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 2665,
									"end": 2732,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2658,
									"end": 2732,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2658,
									"end": 2732,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2741,
									"end": 2834,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 2830,
									"end": 2833,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2741,
									"end": 2834,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 2741,
									"end": 2834,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 2741,
									"end": 2834,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 2741,
									"end": 2834,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2861,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2854,
									"end": 2857,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2850,
									"end": 2862,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2843,
									"end": 2862,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2843,
									"end": 2862,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2502,
									"end": 2868,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2502,
									"end": 2868,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2502,
									"end": 2868,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2502,
									"end": 2868,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 2874,
									"end": 3293,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 2874,
									"end": 3293,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3040,
									"end": 3044,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3078,
									"end": 3080,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3067,
									"end": 3076,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3063,
									"end": 3081,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3055,
									"end": 3081,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3055,
									"end": 3081,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3127,
									"end": 3136,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3121,
									"end": 3125,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3117,
									"end": 3137,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3113,
									"end": 3114,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3102,
									"end": 3111,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3098,
									"end": 3115,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3091,
									"end": 3138,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3155,
									"end": 3286,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 3281,
									"end": 3285,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3155,
									"end": 3286,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 3155,
									"end": 3286,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 3155,
									"end": 3286,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 3155,
									"end": 3286,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3147,
									"end": 3286,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3147,
									"end": 3286,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2874,
									"end": 3293,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2874,
									"end": 3293,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2874,
									"end": 3293,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2874,
									"end": 3293,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 3299,
									"end": 3718,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 3299,
									"end": 3718,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3465,
									"end": 3469,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3503,
									"end": 3505,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3492,
									"end": 3501,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3488,
									"end": 3506,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3480,
									"end": 3506,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3480,
									"end": 3506,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3552,
									"end": 3561,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3546,
									"end": 3550,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3542,
									"end": 3562,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3538,
									"end": 3539,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3527,
									"end": 3536,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3523,
									"end": 3540,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3516,
									"end": 3563,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3580,
									"end": 3711,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 3706,
									"end": 3710,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3580,
									"end": 3711,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 3580,
									"end": 3711,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 3580,
									"end": 3711,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 3580,
									"end": 3711,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3572,
									"end": 3711,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3572,
									"end": 3711,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3299,
									"end": 3718,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3299,
									"end": 3718,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3299,
									"end": 3718,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3299,
									"end": 3718,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 3724,
									"end": 3853,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 3724,
									"end": 3853,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3758,
									"end": 3764,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3785,
									"end": 3805,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 3785,
									"end": 3805,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 3785,
									"end": 3805,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 3785,
									"end": 3805,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 3785,
									"end": 3805,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3775,
									"end": 3805,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3775,
									"end": 3805,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3814,
									"end": 3847,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 3842,
									"end": 3846,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3834,
									"end": 3840,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3814,
									"end": 3847,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 3814,
									"end": 3847,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 3814,
									"end": 3847,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 3814,
									"end": 3847,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3724,
									"end": 3853,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3724,
									"end": 3853,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3724,
									"end": 3853,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3724,
									"end": 3853,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 3859,
									"end": 3934,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 3859,
									"end": 3934,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3892,
									"end": 3898,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3925,
									"end": 3927,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3919,
									"end": 3928,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3909,
									"end": 3928,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3909,
									"end": 3928,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3859,
									"end": 3934,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3859,
									"end": 3934,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 3940,
									"end": 4248,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 3940,
									"end": 4248,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4002,
									"end": 4006,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4092,
									"end": 4110,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4084,
									"end": 4090,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4081,
									"end": 4111,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4078,
									"end": 4134,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4078,
									"end": 4134,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 4078,
									"end": 4134,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4114,
									"end": 4132,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 4114,
									"end": 4132,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 4114,
									"end": 4132,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 4114,
									"end": 4132,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 4114,
									"end": 4132,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4078,
									"end": 4134,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 4078,
									"end": 4134,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4152,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 4174,
									"end": 4180,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4152,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 4152,
									"end": 4181,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 4152,
									"end": 4181,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 4152,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4144,
									"end": 4181,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4144,
									"end": 4181,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4236,
									"end": 4240,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4230,
									"end": 4234,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4226,
									"end": 4241,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4218,
									"end": 4241,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4218,
									"end": 4241,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3940,
									"end": 4248,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3940,
									"end": 4248,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3940,
									"end": 4248,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3940,
									"end": 4248,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 4254,
									"end": 4423,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 4254,
									"end": 4423,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4338,
									"end": 4349,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4372,
									"end": 4378,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4367,
									"end": 4370,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4360,
									"end": 4379,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4412,
									"end": 4416,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4407,
									"end": 4410,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4403,
									"end": 4417,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4388,
									"end": 4417,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4388,
									"end": 4417,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4254,
									"end": 4423,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4254,
									"end": 4423,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4254,
									"end": 4423,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4254,
									"end": 4423,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4254,
									"end": 4423,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 4429,
									"end": 4506,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 4429,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4466,
									"end": 4473,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4495,
									"end": 4500,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4484,
									"end": 4500,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4484,
									"end": 4500,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4429,
									"end": 4506,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4429,
									"end": 4506,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4429,
									"end": 4506,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4429,
									"end": 4506,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 4512,
									"end": 4819,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 4512,
									"end": 4819,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4580,
									"end": 4581,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4590,
									"end": 4703,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 4590,
									"end": 4703,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4604,
									"end": 4610,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4601,
									"end": 4602,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4598,
									"end": 4611,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4590,
									"end": 4703,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4590,
									"end": 4703,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 4590,
									"end": 4703,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4689,
									"end": 4690,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4684,
									"end": 4687,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4680,
									"end": 4691,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4674,
									"end": 4692,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4670,
									"end": 4671,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4665,
									"end": 4668,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4661,
									"end": 4672,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4654,
									"end": 4693,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4626,
									"end": 4628,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4623,
									"end": 4624,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4614,
									"end": 4629,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4614,
									"end": 4629,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4590,
									"end": 4703,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 4590,
									"end": 4703,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4590,
									"end": 4703,
									"name": "tag",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 4590,
									"end": 4703,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4721,
									"end": 4727,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4718,
									"end": 4719,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4715,
									"end": 4728,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4712,
									"end": 4813,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4712,
									"end": 4813,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 4712,
									"end": 4813,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4801,
									"end": 4802,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4792,
									"end": 4798,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4787,
									"end": 4790,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4783,
									"end": 4799,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4776,
									"end": 4803,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4712,
									"end": 4813,
									"name": "tag",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 4712,
									"end": 4813,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4561,
									"end": 4819,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4819,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4819,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4819,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4819,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 4825,
									"end": 5145,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 4825,
									"end": 5145,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4869,
									"end": 4875,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4906,
									"end": 4907,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 4900,
									"end": 4904,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4896,
									"end": 4908,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 4886,
									"end": 4908,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4886,
									"end": 4908,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4953,
									"end": 4954,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4947,
									"end": 4951,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4943,
									"end": 4955,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4974,
									"end": 4992,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4964,
									"end": 5045,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 4964,
									"end": 5045,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5030,
									"end": 5034,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 5022,
									"end": 5028,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5018,
									"end": 5035,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5008,
									"end": 5035,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5008,
									"end": 5035,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4964,
									"end": 5045,
									"name": "tag",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 4964,
									"end": 5045,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5092,
									"end": 5094,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5084,
									"end": 5090,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5081,
									"end": 5095,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 5061,
									"end": 5079,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5058,
									"end": 5096,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 5055,
									"end": 5139,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5055,
									"end": 5139,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 5055,
									"end": 5139,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5111,
									"end": 5129,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 5111,
									"end": 5129,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 5111,
									"end": 5129,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 5111,
									"end": 5129,
									"name": "tag",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 5111,
									"end": 5129,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5055,
									"end": 5139,
									"name": "tag",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 5055,
									"end": 5139,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4876,
									"end": 5145,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4825,
									"end": 5145,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4825,
									"end": 5145,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4825,
									"end": 5145,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4825,
									"end": 5145,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 5151,
									"end": 5432,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 5151,
									"end": 5432,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5261,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 5256,
									"end": 5260,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5261,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 5234,
									"end": 5261,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 5234,
									"end": 5261,
									"name": "tag",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 5234,
									"end": 5261,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5226,
									"end": 5232,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5222,
									"end": 5262,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5364,
									"end": 5370,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5352,
									"end": 5362,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5349,
									"end": 5371,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 5328,
									"end": 5346,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5316,
									"end": 5326,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5313,
									"end": 5347,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 5310,
									"end": 5372,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 5307,
									"end": 5395,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5307,
									"end": 5395,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 5307,
									"end": 5395,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5375,
									"end": 5393,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 5375,
									"end": 5393,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 5375,
									"end": 5393,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 5375,
									"end": 5393,
									"name": "tag",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 5375,
									"end": 5393,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5307,
									"end": 5395,
									"name": "tag",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 5307,
									"end": 5395,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5415,
									"end": 5425,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5411,
									"end": 5413,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5404,
									"end": 5426,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5194,
									"end": 5432,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5151,
									"end": 5432,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5151,
									"end": 5432,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5151,
									"end": 5432,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 5438,
									"end": 5618,
									"name": "tag",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 5438,
									"end": 5618,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5486,
									"end": 5563,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5483,
									"end": 5484,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5476,
									"end": 5564,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5583,
									"end": 5587,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 5580,
									"end": 5581,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 5573,
									"end": 5588,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5607,
									"end": 5611,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 5604,
									"end": 5605,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5597,
									"end": 5612,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 5624,
									"end": 5804,
									"name": "tag",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 5624,
									"end": 5804,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5672,
									"end": 5749,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5669,
									"end": 5670,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5662,
									"end": 5750,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5769,
									"end": 5773,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 5766,
									"end": 5767,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 5759,
									"end": 5774,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5793,
									"end": 5797,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 5790,
									"end": 5791,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5783,
									"end": 5798,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 5810,
									"end": 5927,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 5810,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5919,
									"end": 5920,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5916,
									"end": 5917,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5909,
									"end": 5921,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 5933,
									"end": 6050,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 5933,
									"end": 6050,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6042,
									"end": 6043,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6039,
									"end": 6040,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6032,
									"end": 6044,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 6056,
									"end": 6173,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 6056,
									"end": 6173,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6162,
									"end": 6163,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6155,
									"end": 6167,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 6179,
									"end": 6296,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 6179,
									"end": 6296,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6288,
									"end": 6289,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6285,
									"end": 6286,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6278,
									"end": 6290,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 6302,
									"end": 6404,
									"name": "tag",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 6302,
									"end": 6404,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6343,
									"end": 6349,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6394,
									"end": 6396,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 6390,
									"end": 6397,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 6385,
									"end": 6387,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 6378,
									"end": 6383,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6374,
									"end": 6388,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6370,
									"end": 6398,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 6360,
									"end": 6398,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6360,
									"end": 6398,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6302,
									"end": 6404,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6302,
									"end": 6404,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6302,
									"end": 6404,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6302,
									"end": 6404,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 6410,
									"end": 6636,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 6410,
									"end": 6636,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6550,
									"end": 6584,
									"name": "PUSH",
									"source": 10,
									"value": "455243373231413A206D61782062617463682073697A65206D75737420626520"
								},
								{
									"begin": 6546,
									"end": 6547,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6538,
									"end": 6544,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6534,
									"end": 6548,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6527,
									"end": 6585,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6619,
									"end": 6628,
									"name": "PUSH",
									"source": 10,
									"value": "6E6F6E7A65726F00000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6614,
									"end": 6616,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6606,
									"end": 6612,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6602,
									"end": 6617,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6595,
									"end": 6629,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6410,
									"end": 6636,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6410,
									"end": 6636,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 6642,
									"end": 6875,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 6642,
									"end": 6875,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6782,
									"end": 6816,
									"name": "PUSH",
									"source": 10,
									"value": "455243373231413A20636F6C6C656374696F6E206D7573742068617665206120"
								},
								{
									"begin": 6778,
									"end": 6779,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6770,
									"end": 6776,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6766,
									"end": 6780,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6759,
									"end": 6817,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6851,
									"end": 6867,
									"name": "PUSH",
									"source": 10,
									"value": "6E6F6E7A65726F20737570706C79000000000000000000000000000000000000"
								},
								{
									"begin": 6846,
									"end": 6848,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6838,
									"end": 6844,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6827,
									"end": 6868,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6642,
									"end": 6875,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6642,
									"end": 6875,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 6881,
									"end": 7003,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 6881,
									"end": 7003,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6954,
									"end": 6978,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 6972,
									"end": 6977,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6954,
									"end": 6978,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 6954,
									"end": 6978,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 6954,
									"end": 6978,
									"name": "tag",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 6954,
									"end": 6978,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6947,
									"end": 6952,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6944,
									"end": 6979,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 6934,
									"end": 6997,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 6934,
									"end": 6997,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6993,
									"end": 6994,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6990,
									"end": 6991,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6983,
									"end": 6995,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 6934,
									"end": 6997,
									"name": "tag",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 6934,
									"end": 6997,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6881,
									"end": 7003,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6881,
									"end": 7003,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "793"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "791"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1055,
									"end": 15909,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209ca65088c2dabf463ab340529072e7aaf3e25df99d79cbe8c6dda1172339010f64736f6c63430008070033",
									".code": [
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "4F6CCCE7"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "A22CB465"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "A22CB465"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "B88D4FDE"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "C87B56DD"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "D7224BA0"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "E985E9C5"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "4F6CCCE7"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "6352211E"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "2F745C59"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "42842E0E"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A7"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "81812FC"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 15909,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5826,
											"end": 5918,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5826,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5826,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 5826,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 5826,
											"end": 5918,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5826,
											"end": 5918,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 5826,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5826,
											"end": 5918,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5826,
											"end": 5918,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5826,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 5826,
											"end": 5918,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5826,
											"end": 5918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5826,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 5826,
											"end": 5918,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5826,
											"end": 5918,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 5826,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5826,
											"end": 5918,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5826,
											"end": 5918,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5826,
											"end": 5918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5826,
											"end": 5918,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5826,
											"end": 5918,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5826,
											"end": 5918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5826,
											"end": 5918,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 7104,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6735,
											"end": 7104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 6735,
											"end": 7104,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6735,
											"end": 7104,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 7104,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 7104,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 7104,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 7104,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 7104,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6735,
											"end": 7104,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 7104,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 6735,
											"end": 7104,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6735,
											"end": 7104,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6735,
											"end": 7104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 6735,
											"end": 7104,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6735,
											"end": 7104,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 6735,
											"end": 7104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 7104,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2860,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2768,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 2768,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2768,
											"end": 2860,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2768,
											"end": 2860,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 2768,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2860,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2768,
											"end": 2860,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2768,
											"end": 2860,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2860,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 2768,
											"end": 2860,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2768,
											"end": 2860,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2768,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2860,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2768,
											"end": 2860,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2860,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2860,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2860,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2860,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2860,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 6070,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 5974,
											"end": 6070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 5974,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 5974,
											"end": 6070,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5974,
											"end": 6070,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 5974,
											"end": 6070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 6070,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5974,
											"end": 6070,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 5974,
											"end": 6070,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 6070,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 5974,
											"end": 6070,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5974,
											"end": 6070,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 5974,
											"end": 6070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 6070,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5974,
											"end": 6070,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 6070,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 6070,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 6070,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 6070,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 6070,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7685,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 7416,
											"end": 7685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 7416,
											"end": 7685,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7416,
											"end": 7685,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7685,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7685,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7685,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7685,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7685,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 7416,
											"end": 7685,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7685,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 7416,
											"end": 7685,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7416,
											"end": 7685,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 7416,
											"end": 7685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 7416,
											"end": 7685,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7416,
											"end": 7685,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 7416,
											"end": 7685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7685,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4288,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4326,
											"end": 4351,
											"name": "PUSH",
											"source": 9,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4311,
											"end": 4351,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4311,
											"end": 4351,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4351,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4322,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4351,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4311,
											"end": 4351,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4351,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4351,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4409,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 4311,
											"end": 4409,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4409,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4376,
											"end": 4409,
											"name": "PUSH",
											"source": 9,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4361,
											"end": 4409,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4361,
											"end": 4409,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4361,
											"end": 4409,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4361,
											"end": 4372,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4361,
											"end": 4409,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4361,
											"end": 4409,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4361,
											"end": 4409,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4361,
											"end": 4409,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4409,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 4311,
											"end": 4409,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4469,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 4311,
											"end": 4469,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4469,
											"name": "PUSH",
											"source": 9,
											"value": "780E9D6300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4419,
											"end": 4469,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4419,
											"end": 4469,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4419,
											"end": 4469,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4419,
											"end": 4430,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4419,
											"end": 4469,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4419,
											"end": 4469,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4419,
											"end": 4469,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4419,
											"end": 4469,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4469,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 4311,
											"end": 4469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4515,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 4311,
											"end": 4515,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4515,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4479,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 4503,
											"end": 4514,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4479,
											"end": 4502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 4479,
											"end": 4515,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4479,
											"end": 4515,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 4479,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4515,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 4311,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4515,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4515,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4520,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5826,
											"end": 5918,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 5826,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5880,
											"end": 5893,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5908,
											"end": 5913,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5826,
											"end": 5918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5826,
											"end": 5918,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7225,
											"end": 7232,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 7256,
											"end": 7263,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7248,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 7240,
											"end": 7314,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7314,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7240,
											"end": 7314,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7314,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7240,
											"end": 7314,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7314,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7314,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7240,
											"end": 7314,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 7240,
											"end": 7314,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 7240,
											"end": 7314,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7240,
											"end": 7314,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 7240,
											"end": 7314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7314,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7240,
											"end": 7314,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7314,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7314,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7314,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7314,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7314,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7314,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 7240,
											"end": 7314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7328,
											"end": 7343,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7344,
											"end": 7351,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7321,
											"end": 7352,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7321,
											"end": 7352,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7357,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6735,
											"end": 7104,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 6735,
											"end": 7104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6803,
											"end": 6816,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6819,
											"end": 6843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 6835,
											"end": 6842,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6819,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6819,
											"end": 6843,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6819,
											"end": 6843,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 6819,
											"end": 6843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6803,
											"end": 6843,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6803,
											"end": 6843,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6863,
											"end": 6868,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6857,
											"end": 6868,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6857,
											"end": 6868,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6857,
											"end": 6859,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6857,
											"end": 6868,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6857,
											"end": 6868,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6857,
											"end": 6868,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6857,
											"end": 6868,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6849,
											"end": 6907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 6849,
											"end": 6907,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6849,
											"end": 6907,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6849,
											"end": 6907,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6849,
											"end": 6907,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6849,
											"end": 6907,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6849,
											"end": 6907,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6849,
											"end": 6907,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6849,
											"end": 6907,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6849,
											"end": 6907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 6849,
											"end": 6907,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6849,
											"end": 6907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 6849,
											"end": 6907,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6849,
											"end": 6907,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 6849,
											"end": 6907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6849,
											"end": 6907,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6849,
											"end": 6907,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6849,
											"end": 6907,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6849,
											"end": 6907,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6849,
											"end": 6907,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6849,
											"end": 6907,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6849,
											"end": 6907,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6849,
											"end": 6907,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 6849,
											"end": 6907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6945,
											"end": 6950,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6929,
											"end": 6950,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6929,
											"end": 6950,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6929,
											"end": 6941,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 6929,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 6929,
											"end": 6941,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6929,
											"end": 6941,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 6929,
											"end": 6941,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6929,
											"end": 6950,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6929,
											"end": 6950,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6929,
											"end": 6950,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6929,
											"end": 6991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6929,
											"end": 6991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 6929,
											"end": 6991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6929,
											"end": 6991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6954,
											"end": 6991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 6971,
											"end": 6976,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6978,
											"end": 6990,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 6978,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 6978,
											"end": 6990,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6978,
											"end": 6990,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 6978,
											"end": 6990,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6954,
											"end": 6970,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 6954,
											"end": 6991,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6954,
											"end": 6991,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 6954,
											"end": 6991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6929,
											"end": 6991,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 6929,
											"end": 6991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6914,
											"end": 7064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 6914,
											"end": 7064,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6914,
											"end": 7064,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6914,
											"end": 7064,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6914,
											"end": 7064,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6914,
											"end": 7064,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6914,
											"end": 7064,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6914,
											"end": 7064,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6914,
											"end": 7064,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6914,
											"end": 7064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 6914,
											"end": 7064,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6914,
											"end": 7064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 6914,
											"end": 7064,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6914,
											"end": 7064,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 6914,
											"end": 7064,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6914,
											"end": 7064,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6914,
											"end": 7064,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6914,
											"end": 7064,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6914,
											"end": 7064,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6914,
											"end": 7064,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6914,
											"end": 7064,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6914,
											"end": 7064,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6914,
											"end": 7064,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 6914,
											"end": 7064,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7071,
											"end": 7099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 7080,
											"end": 7082,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7084,
											"end": 7091,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7093,
											"end": 7098,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7071,
											"end": 7079,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 7071,
											"end": 7099,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7071,
											"end": 7099,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 7071,
											"end": 7099,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6797,
											"end": 7104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 7104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 7104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 7104,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2768,
											"end": 2860,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2768,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2821,
											"end": 2828,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2855,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 2855,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2855,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2855,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2860,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2860,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8078,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 8088,
											"end": 8092,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8094,
											"end": 8096,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8098,
											"end": 8105,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8078,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 8078,
											"end": 8106,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8078,
											"end": 8106,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 8078,
											"end": 8106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7975,
											"end": 8111,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3487,
											"end": 3494,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3520,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 3530,
											"end": 3535,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3520,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 3520,
											"end": 3536,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3520,
											"end": 3536,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 3520,
											"end": 3536,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3517,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3536,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3603,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3606,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 3606,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3606,
											"end": 3619,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3606,
											"end": 3619,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 3606,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3619,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3619,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3644,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3654,
											"end": 3679,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3703,
											"end": 3712,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 4037,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 3698,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3736,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3718,
											"end": 3719,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3718,
											"end": 3736,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3698,
											"end": 4037,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3698,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 3698,
											"end": 4037,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3785,
											"end": 3796,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3798,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3837,
											"end": 3838,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3839,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3811,
											"end": 3839,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3820,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3825,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3825,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3825,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3839,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3811,
											"end": 3839,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3839,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3807,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 3807,
											"end": 3894,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3871,
											"end": 3880,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3871,
											"end": 3885,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3871,
											"end": 3885,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3871,
											"end": 3885,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3851,
											"end": 3885,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3851,
											"end": 3885,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3807,
											"end": 3894,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 3807,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 3931,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3905,
											"end": 3931,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3905,
											"end": 3931,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3905,
											"end": 3922,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3905,
											"end": 3931,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3905,
											"end": 3931,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3905,
											"end": 3931,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 4031,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 3901,
											"end": 4031,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3962,
											"end": 3967,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3947,
											"end": 3958,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3947,
											"end": 3967,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4000,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 3943,
											"end": 4000,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3988,
											"end": 3989,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3981,
											"end": 3989,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3981,
											"end": 3989,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3981,
											"end": 3989,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3981,
											"end": 3989,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3981,
											"end": 3989,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3981,
											"end": 3989,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3981,
											"end": 3989,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3981,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 3981,
											"end": 3989,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4000,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 3943,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4022,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4022,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 4009,
											"end": 4022,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 4009,
											"end": 4022,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4009,
											"end": 4022,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 4009,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4022,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 4031,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 3901,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3743,
											"end": 4037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3738,
											"end": 3741,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3738,
											"end": 3741,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3738,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 3738,
											"end": 3741,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3738,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 3738,
											"end": 3741,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3738,
											"end": 3741,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 3738,
											"end": 3741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3738,
											"end": 3741,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3738,
											"end": 3741,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3738,
											"end": 3741,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3698,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 3698,
											"end": 4037,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3698,
											"end": 4037,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 3698,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3698,
											"end": 4037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4042,
											"end": 4098,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4042,
											"end": 4098,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4042,
											"end": 4098,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4042,
											"end": 4098,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4042,
											"end": 4098,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4042,
											"end": 4098,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4042,
											"end": 4098,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4042,
											"end": 4098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 4042,
											"end": 4098,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4042,
											"end": 4098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 4042,
											"end": 4098,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4042,
											"end": 4098,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 4042,
											"end": 4098,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4042,
											"end": 4098,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4042,
											"end": 4098,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4042,
											"end": 4098,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4042,
											"end": 4098,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4042,
											"end": 4098,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4042,
											"end": 4098,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4042,
											"end": 4098,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 4103,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8276,
											"end": 8315,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 8293,
											"end": 8297,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8299,
											"end": 8301,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8303,
											"end": 8310,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8276,
											"end": 8315,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8276,
											"end": 8315,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8276,
											"end": 8315,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8276,
											"end": 8315,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8276,
											"end": 8315,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8276,
											"end": 8315,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8276,
											"end": 8315,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8276,
											"end": 8315,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8276,
											"end": 8315,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8276,
											"end": 8315,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8276,
											"end": 8315,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8276,
											"end": 8315,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8276,
											"end": 8292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 8276,
											"end": 8315,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8276,
											"end": 8315,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 8276,
											"end": 8315,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8169,
											"end": 8320,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 2998,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3022,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 3022,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3022,
											"end": 3035,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3022,
											"end": 3035,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 3022,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3014,
											"end": 3019,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3014,
											"end": 3035,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 3006,
											"end": 3075,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3006,
											"end": 3075,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3006,
											"end": 3075,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3075,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3006,
											"end": 3075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3006,
											"end": 3075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 3006,
											"end": 3075,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3006,
											"end": 3075,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3006,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3006,
											"end": 3075,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3075,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3075,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3075,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3075,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3075,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 3006,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3088,
											"end": 3093,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3081,
											"end": 3093,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3081,
											"end": 3093,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 3098,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5720,
											"end": 5727,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5742,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 5754,
											"end": 5761,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5742,
											"end": 5753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 5742,
											"end": 5762,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5742,
											"end": 5762,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 5742,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5742,
											"end": 5767,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5742,
											"end": 5767,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5742,
											"end": 5767,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5735,
											"end": 5767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5735,
											"end": 5767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5772,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4642,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4675,
											"end": 4676,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4658,
											"end": 4677,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4658,
											"end": 4677,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4658,
											"end": 4663,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4658,
											"end": 4677,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4658,
											"end": 4677,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4658,
											"end": 4677,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4658,
											"end": 4677,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 4650,
											"end": 4725,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4725,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4650,
											"end": 4725,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4725,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4650,
											"end": 4725,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4725,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4725,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4650,
											"end": 4725,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 4650,
											"end": 4725,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 4650,
											"end": 4725,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4650,
											"end": 4725,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 4650,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4725,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4650,
											"end": 4725,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4725,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4725,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4725,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4725,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4725,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4725,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 4650,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4758,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4746,
											"end": 4765,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4759,
											"end": 4764,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4765,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4746,
											"end": 4765,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4765,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4746,
											"end": 4765,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4765,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4765,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4765,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4746,
											"end": 4765,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4765,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4765,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4765,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4765,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4746,
											"end": 4765,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4765,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4765,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4773,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4773,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4773,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4773,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4773,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4773,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4773,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4746,
											"end": 4773,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4773,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4773,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4773,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4746,
											"end": 4773,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4738,
											"end": 4774,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4738,
											"end": 4774,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4731,
											"end": 4774,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4731,
											"end": 4774,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4779,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5974,
											"end": 6070,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 5974,
											"end": 6070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6030,
											"end": 6043,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6058,
											"end": 6065,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 6070,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 6070,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7416,
											"end": 7685,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 7416,
											"end": 7685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7518,
											"end": 7530,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 7518,
											"end": 7528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 7518,
											"end": 7530,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7518,
											"end": 7530,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 7518,
											"end": 7530,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7506,
											"end": 7530,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7506,
											"end": 7530,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7506,
											"end": 7514,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7506,
											"end": 7530,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7506,
											"end": 7530,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7506,
											"end": 7530,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 7506,
											"end": 7530,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7613,
											"end": 7621,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7586,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 7568,
											"end": 7600,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7587,
											"end": 7599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 7587,
											"end": 7597,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 7587,
											"end": 7599,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7587,
											"end": 7599,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 7587,
											"end": 7599,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7600,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7568,
											"end": 7600,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7600,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7568,
											"end": 7600,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7600,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7600,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7600,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7568,
											"end": 7600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7600,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7600,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7600,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7600,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7568,
											"end": 7600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7600,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7568,
											"end": 7600,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7610,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7601,
											"end": 7609,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7610,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7568,
											"end": 7610,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7610,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7568,
											"end": 7610,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7610,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7610,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7610,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7568,
											"end": 7610,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7610,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7610,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7610,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7610,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7568,
											"end": 7610,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7610,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7568,
											"end": 7610,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7610,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7568,
											"end": 7621,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7568,
											"end": 7621,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7621,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7621,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7621,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7621,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 7568,
											"end": 7621,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7621,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7621,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7621,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7621,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7621,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7621,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7621,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7621,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7621,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7621,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7621,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7661,
											"end": 7669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7632,
											"end": 7680,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7632,
											"end": 7680,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7647,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 7647,
											"end": 7657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 7647,
											"end": 7659,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7647,
											"end": 7659,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 7647,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7632,
											"end": 7680,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7632,
											"end": 7680,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7632,
											"end": 7680,
											"name": "PUSH",
											"source": 9,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 7671,
											"end": 7679,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7632,
											"end": 7680,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7632,
											"end": 7680,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7632,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 7632,
											"end": 7680,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7632,
											"end": 7680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7632,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 7632,
											"end": 7680,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7632,
											"end": 7680,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 7632,
											"end": 7680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7632,
											"end": 7680,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7632,
											"end": 7680,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7632,
											"end": 7680,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7632,
											"end": 7680,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7632,
											"end": 7680,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7632,
											"end": 7680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7632,
											"end": 7680,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7685,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8509,
											"end": 8537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 8519,
											"end": 8523,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8525,
											"end": 8527,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8529,
											"end": 8536,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8509,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 8509,
											"end": 8537,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8509,
											"end": 8537,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 8509,
											"end": 8537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8558,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 8581,
											"end": 8585,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8587,
											"end": 8589,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8591,
											"end": 8598,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8600,
											"end": 8605,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8558,
											"end": 8580,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 8558,
											"end": 8606,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8558,
											"end": 8606,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 8558,
											"end": 8606,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 8543,
											"end": 8673,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8673,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8543,
											"end": 8673,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8673,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8543,
											"end": 8673,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8673,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8673,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8543,
											"end": 8673,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 8543,
											"end": 8673,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 8543,
											"end": 8673,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8543,
											"end": 8673,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 8543,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8673,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8543,
											"end": 8673,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8673,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8673,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8673,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8673,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8673,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8673,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 8543,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8378,
											"end": 8678,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6221,
											"end": 6234,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6259,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 6267,
											"end": 6274,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6259,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 6259,
											"end": 6275,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6259,
											"end": 6275,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 6259,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6244,
											"end": 6338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 6244,
											"end": 6338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6244,
											"end": 6338,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6244,
											"end": 6338,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6244,
											"end": 6338,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6244,
											"end": 6338,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6244,
											"end": 6338,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6244,
											"end": 6338,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6244,
											"end": 6338,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6244,
											"end": 6338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 6244,
											"end": 6338,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6244,
											"end": 6338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 6244,
											"end": 6338,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6244,
											"end": 6338,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 6244,
											"end": 6338,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6244,
											"end": 6338,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6244,
											"end": 6338,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6244,
											"end": 6338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6244,
											"end": 6338,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6244,
											"end": 6338,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6244,
											"end": 6338,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6244,
											"end": 6338,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6244,
											"end": 6338,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 6244,
											"end": 6338,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6356,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 6356,
											"end": 6364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 6356,
											"end": 6366,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6356,
											"end": 6366,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 6356,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6349,
											"end": 6366,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6349,
											"end": 6366,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12648,
											"end": 12691,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7860,
											"end": 7864,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7881,
											"end": 7899,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 7881,
											"end": 7906,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7905,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7906,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7881,
											"end": 7906,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7906,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7881,
											"end": 7906,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7906,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7906,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7906,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7881,
											"end": 7906,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7906,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7906,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7906,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7906,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7881,
											"end": 7906,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7906,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7881,
											"end": 7906,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7916,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7915,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7916,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7881,
											"end": 7916,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7916,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7881,
											"end": 7916,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7916,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7916,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7916,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7881,
											"end": 7916,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7916,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7916,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7916,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7916,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7881,
											"end": 7916,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7916,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7881,
											"end": 7916,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7916,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7881,
											"end": 7916,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7916,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7916,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7916,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7881,
											"end": 7916,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7916,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7916,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7916,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 7881,
											"end": 7916,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7874,
											"end": 7916,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7874,
											"end": 7916,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 763,
											"end": 918,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 763,
											"end": 918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 848,
											"end": 852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 871,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 871,
											"end": 911,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 871,
											"end": 911,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 871,
											"end": 882,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 871,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 871,
											"end": 911,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 871,
											"end": 911,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 871,
											"end": 911,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 864,
											"end": 911,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 864,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 763,
											"end": 918,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 763,
											"end": 918,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 763,
											"end": 918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 763,
											"end": 918,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8908,
											"end": 9011,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 8908,
											"end": 9011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8965,
											"end": 8969,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8994,
											"end": 9006,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8994,
											"end": 9006,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8984,
											"end": 8991,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8984,
											"end": 9006,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8977,
											"end": 9006,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8977,
											"end": 9006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8908,
											"end": 9011,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8908,
											"end": 9011,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8908,
											"end": 9011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8908,
											"end": 9011,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 587,
											"end": 683,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 587,
											"end": 683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 640,
											"end": 647,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 676,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 659,
											"end": 676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 659,
											"end": 676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 587,
											"end": 683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 587,
											"end": 683,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12479,
											"end": 12644,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 12479,
											"end": 12644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12598,
											"end": 12600,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12571,
											"end": 12586,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 12571,
											"end": 12595,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12587,
											"end": 12594,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12571,
											"end": 12595,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12571,
											"end": 12595,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12571,
											"end": 12595,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12571,
											"end": 12595,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12571,
											"end": 12595,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12571,
											"end": 12595,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12571,
											"end": 12595,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12571,
											"end": 12595,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12571,
											"end": 12595,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12571,
											"end": 12595,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12571,
											"end": 12595,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12571,
											"end": 12595,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12571,
											"end": 12600,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 12571,
											"end": 12600,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 12571,
											"end": 12600,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12571,
											"end": 12600,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12571,
											"end": 12600,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12571,
											"end": 12600,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12571,
											"end": 12600,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 12571,
											"end": 12600,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 12571,
											"end": 12600,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12571,
											"end": 12600,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12571,
											"end": 12600,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12571,
											"end": 12600,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12571,
											"end": 12600,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12571,
											"end": 12600,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 12571,
											"end": 12600,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 12571,
											"end": 12600,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12571,
											"end": 12600,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 12571,
											"end": 12600,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12631,
											"end": 12638,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12627,
											"end": 12629,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12639,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12611,
											"end": 12639,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12620,
											"end": 12625,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12639,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12611,
											"end": 12639,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12639,
											"name": "PUSH",
											"source": 9,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12611,
											"end": 12639,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12611,
											"end": 12639,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12639,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12611,
											"end": 12639,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12639,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12639,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12639,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12639,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12639,
											"name": "LOG4",
											"source": 9
										},
										{
											"begin": 12479,
											"end": 12644,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12479,
											"end": 12644,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12479,
											"end": 12644,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12479,
											"end": 12644,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10896,
											"end": 12380,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 10896,
											"end": 12380,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10988,
											"end": 11023,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11026,
											"end": 11046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 11038,
											"end": 11045,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11026,
											"end": 11037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 11026,
											"end": 11046,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11026,
											"end": 11046,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 11026,
											"end": 11046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10988,
											"end": 11046,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10988,
											"end": 11046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11053,
											"end": 11075,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11095,
											"end": 11108,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11095,
											"end": 11113,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11095,
											"end": 11113,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11095,
											"end": 11113,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11079,
											"end": 11113,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11079,
											"end": 11113,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11079,
											"end": 11091,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 11079,
											"end": 11089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 11079,
											"end": 11091,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11079,
											"end": 11091,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 11079,
											"end": 11091,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11079,
											"end": 11113,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11079,
											"end": 11113,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11079,
											"end": 11113,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 11079,
											"end": 11159,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11079,
											"end": 11159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 11079,
											"end": 11159,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11079,
											"end": 11159,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11147,
											"end": 11159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 11147,
											"end": 11157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 11147,
											"end": 11159,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11147,
											"end": 11159,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 11147,
											"end": 11159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11123,
											"end": 11159,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11123,
											"end": 11159,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11123,
											"end": 11143,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 11135,
											"end": 11142,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11123,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 11123,
											"end": 11143,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11123,
											"end": 11143,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 11123,
											"end": 11143,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11123,
											"end": 11159,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11123,
											"end": 11159,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11123,
											"end": 11159,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 11079,
											"end": 11159,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 11079,
											"end": 11159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11079,
											"end": 11219,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11079,
											"end": 11219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 11079,
											"end": 11219,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11079,
											"end": 11219,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11169,
											"end": 11219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 11186,
											"end": 11199,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11186,
											"end": 11204,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11186,
											"end": 11204,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11186,
											"end": 11204,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11206,
											"end": 11218,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 11206,
											"end": 11216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 11206,
											"end": 11218,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11206,
											"end": 11218,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 11206,
											"end": 11218,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11169,
											"end": 11185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 11169,
											"end": 11219,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11169,
											"end": 11219,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 11169,
											"end": 11219,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11079,
											"end": 11219,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 11079,
											"end": 11219,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11053,
											"end": 11220,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11053,
											"end": 11220,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11242,
											"end": 11259,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11227,
											"end": 11325,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 11227,
											"end": 11325,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11227,
											"end": 11325,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11227,
											"end": 11325,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11227,
											"end": 11325,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11227,
											"end": 11325,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11227,
											"end": 11325,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11227,
											"end": 11325,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11227,
											"end": 11325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11227,
											"end": 11325,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 11227,
											"end": 11325,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11227,
											"end": 11325,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 11227,
											"end": 11325,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11227,
											"end": 11325,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 11227,
											"end": 11325,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11227,
											"end": 11325,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11227,
											"end": 11325,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11227,
											"end": 11325,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11227,
											"end": 11325,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11227,
											"end": 11325,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11227,
											"end": 11325,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11227,
											"end": 11325,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11227,
											"end": 11325,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 11227,
											"end": 11325,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11369,
											"end": 11373,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11347,
											"end": 11373,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11347,
											"end": 11373,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11347,
											"end": 11360,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11347,
											"end": 11365,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11347,
											"end": 11365,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11347,
											"end": 11365,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11347,
											"end": 11373,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11347,
											"end": 11373,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11347,
											"end": 11373,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 11332,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 11332,
											"end": 11427,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11332,
											"end": 11427,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11332,
											"end": 11427,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11332,
											"end": 11427,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11332,
											"end": 11427,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11332,
											"end": 11427,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11332,
											"end": 11427,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11332,
											"end": 11427,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11332,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 11332,
											"end": 11427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11332,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 11332,
											"end": 11427,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11332,
											"end": 11427,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 11332,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11332,
											"end": 11427,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11332,
											"end": 11427,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11332,
											"end": 11427,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11332,
											"end": 11427,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11332,
											"end": 11427,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11332,
											"end": 11427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11332,
											"end": 11427,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11332,
											"end": 11427,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 11332,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11455,
											"end": 11456,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11441,
											"end": 11457,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11441,
											"end": 11457,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11441,
											"end": 11443,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11441,
											"end": 11457,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11441,
											"end": 11457,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11441,
											"end": 11457,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 11441,
											"end": 11457,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11433,
											"end": 11499,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 11433,
											"end": 11499,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11433,
											"end": 11499,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11433,
											"end": 11499,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11433,
											"end": 11499,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11433,
											"end": 11499,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11433,
											"end": 11499,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11433,
											"end": 11499,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11433,
											"end": 11499,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11433,
											"end": 11499,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 11433,
											"end": 11499,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11433,
											"end": 11499,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 11433,
											"end": 11499,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11433,
											"end": 11499,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 11433,
											"end": 11499,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11433,
											"end": 11499,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11433,
											"end": 11499,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11433,
											"end": 11499,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11433,
											"end": 11499,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11433,
											"end": 11499,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11433,
											"end": 11499,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11433,
											"end": 11499,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11433,
											"end": 11499,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 11433,
											"end": 11499,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11506,
											"end": 11549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 11528,
											"end": 11532,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11534,
											"end": 11536,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11538,
											"end": 11545,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11547,
											"end": 11548,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11506,
											"end": 11527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 11506,
											"end": 11549,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11506,
											"end": 11549,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 11506,
											"end": 11549,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11603,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 11620,
											"end": 11621,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11624,
											"end": 11631,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11633,
											"end": 11646,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11633,
											"end": 11651,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11633,
											"end": 11651,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11633,
											"end": 11651,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11603,
											"end": 11611,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 11603,
											"end": 11652,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11603,
											"end": 11652,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 11603,
											"end": 11652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11689,
											"end": 11690,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11659,
											"end": 11671,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11659,
											"end": 11677,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11672,
											"end": 11676,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11677,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11659,
											"end": 11677,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11677,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11659,
											"end": 11677,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11677,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11677,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11677,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11659,
											"end": 11677,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11677,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11677,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11677,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11677,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11659,
											"end": 11677,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11677,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11659,
											"end": 11677,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11685,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11659,
											"end": 11685,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11685,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11724,
											"end": 11725,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11696,
											"end": 11708,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11696,
											"end": 11712,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11709,
											"end": 11711,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11712,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11696,
											"end": 11712,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11712,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11696,
											"end": 11712,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11712,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11712,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11712,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11696,
											"end": 11712,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11712,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11712,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11712,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11712,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11696,
											"end": 11712,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11712,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11696,
											"end": 11712,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11720,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11696,
											"end": 11720,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11720,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11725,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11754,
											"end": 11797,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11754,
											"end": 11797,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11754,
											"end": 11797,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11754,
											"end": 11797,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11754,
											"end": 11797,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11754,
											"end": 11797,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11754,
											"end": 11797,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11754,
											"end": 11797,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11769,
											"end": 11771,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11754,
											"end": 11797,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11754,
											"end": 11797,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11754,
											"end": 11797,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11754,
											"end": 11797,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11754,
											"end": 11797,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11754,
											"end": 11797,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11780,
											"end": 11795,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 11754,
											"end": 11797,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11754,
											"end": 11797,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11754,
											"end": 11797,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11754,
											"end": 11797,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11754,
											"end": 11797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11742,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 11731,
											"end": 11751,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11743,
											"end": 11750,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11751,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11751,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11751,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11731,
											"end": 11751,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11751,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11751,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11751,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11751,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11731,
											"end": 11751,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11751,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11731,
											"end": 11751,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11731,
											"end": 11797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12021,
											"end": 12040,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12053,
											"end": 12054,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 12043,
											"end": 12050,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12043,
											"end": 12054,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 12043,
											"end": 12054,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12043,
											"end": 12054,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12043,
											"end": 12054,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 12043,
											"end": 12054,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12043,
											"end": 12054,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 12043,
											"end": 12054,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12021,
											"end": 12054,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12021,
											"end": 12054,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12105,
											"end": 12106,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12064,
											"end": 12107,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12064,
											"end": 12107,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12064,
											"end": 12075,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 12064,
											"end": 12088,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12076,
											"end": 12087,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12064,
											"end": 12088,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12064,
											"end": 12088,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12064,
											"end": 12088,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12064,
											"end": 12088,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12064,
											"end": 12088,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12064,
											"end": 12088,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12064,
											"end": 12088,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12064,
											"end": 12088,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12064,
											"end": 12088,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12064,
											"end": 12088,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12064,
											"end": 12088,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12064,
											"end": 12107,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12064,
											"end": 12107,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12064,
											"end": 12107,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12060,
											"end": 12289,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12060,
											"end": 12289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 12060,
											"end": 12289,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12121,
											"end": 12141,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 12129,
											"end": 12140,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12121,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 12121,
											"end": 12141,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12121,
											"end": 12141,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 12121,
											"end": 12141,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12117,
											"end": 12283,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12117,
											"end": 12283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 12117,
											"end": 12283,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12180,
											"end": 12274,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12180,
											"end": 12274,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12180,
											"end": 12274,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12180,
											"end": 12274,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12180,
											"end": 12274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12180,
											"end": 12274,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12180,
											"end": 12274,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12180,
											"end": 12274,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12206,
											"end": 12219,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12206,
											"end": 12224,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12206,
											"end": 12224,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12206,
											"end": 12224,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12180,
											"end": 12274,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12180,
											"end": 12274,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12180,
											"end": 12274,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12180,
											"end": 12274,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12180,
											"end": 12274,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12180,
											"end": 12274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12249,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12264,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12236,
											"end": 12264,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12264,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12180,
											"end": 12274,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12180,
											"end": 12274,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12180,
											"end": 12274,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12180,
											"end": 12274,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12180,
											"end": 12274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12164,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 12153,
											"end": 12177,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12165,
											"end": 12176,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12177,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12177,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12177,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12153,
											"end": 12177,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12177,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12177,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12177,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12177,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12153,
											"end": 12177,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12177,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12153,
											"end": 12177,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12117,
											"end": 12283,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 12117,
											"end": 12283,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12060,
											"end": 12289,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 12060,
											"end": 12289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12319,
											"end": 12326,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12315,
											"end": 12317,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12300,
											"end": 12327,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12300,
											"end": 12327,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12309,
											"end": 12313,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 12300,
											"end": 12327,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12300,
											"end": 12327,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12300,
											"end": 12327,
											"name": "PUSH",
											"source": 9,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12300,
											"end": 12327,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12300,
											"end": 12327,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12300,
											"end": 12327,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12300,
											"end": 12327,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12300,
											"end": 12327,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12300,
											"end": 12327,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12300,
											"end": 12327,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12300,
											"end": 12327,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12300,
											"end": 12327,
											"name": "LOG4",
											"source": 9
										},
										{
											"begin": 12333,
											"end": 12375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 12354,
											"end": 12358,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12360,
											"end": 12362,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12364,
											"end": 12371,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12373,
											"end": 12374,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 12333,
											"end": 12353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 12333,
											"end": 12375,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12333,
											"end": 12375,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 12333,
											"end": 12375,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10982,
											"end": 12380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10982,
											"end": 12380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10982,
											"end": 12380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10896,
											"end": 12380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10896,
											"end": 12380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10896,
											"end": 12380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10896,
											"end": 12380,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5021,
											"end": 5607,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 5021,
											"end": 5607,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5094,
											"end": 5115,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 5094,
											"end": 5115,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 5094,
											"end": 5115,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5094,
											"end": 5115,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 5094,
											"end": 5115,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 5141,
											"end": 5148,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 5133,
											"end": 5149,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5133,
											"end": 5149,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 5133,
											"end": 5149,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 5125,
											"end": 5196,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5196,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5125,
											"end": 5196,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5196,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5125,
											"end": 5196,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5196,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5196,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5125,
											"end": 5196,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 5125,
											"end": 5196,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 5125,
											"end": 5196,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5125,
											"end": 5196,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 5125,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5196,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5125,
											"end": 5196,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5196,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5196,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5196,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5196,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5196,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5196,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 5125,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5203,
											"end": 5229,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5250,
											"end": 5262,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "793"
										},
										{
											"begin": 5239,
											"end": 5246,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5239,
											"end": 5262,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5235,
											"end": 5326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 5235,
											"end": 5326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5318,
											"end": 5319,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5303,
											"end": 5315,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "793"
										},
										{
											"begin": 5293,
											"end": 5300,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5293,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 5293,
											"end": 5315,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5293,
											"end": 5315,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5293,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 5293,
											"end": 5315,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5293,
											"end": 5315,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 5293,
											"end": 5315,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5293,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 5293,
											"end": 5319,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5293,
											"end": 5319,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5293,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 5293,
											"end": 5319,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5293,
											"end": 5319,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 5293,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5319,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5319,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5235,
											"end": 5326,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 5235,
											"end": 5326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5352,
											"end": 5359,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5359,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5359,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5332,
											"end": 5539,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 5332,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5369,
											"end": 5387,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5365,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5387,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5332,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 5332,
											"end": 5539,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5436,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5439,
											"end": 5450,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5439,
											"end": 5456,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5451,
											"end": 5455,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5439,
											"end": 5456,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5439,
											"end": 5456,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5439,
											"end": 5456,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5439,
											"end": 5456,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5439,
											"end": 5456,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5439,
											"end": 5456,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5439,
											"end": 5456,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5439,
											"end": 5456,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5439,
											"end": 5456,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5439,
											"end": 5456,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5439,
											"end": 5456,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5495,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5468,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5468,
											"end": 5496,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5468,
											"end": 5477,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5468,
											"end": 5482,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5468,
											"end": 5482,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5468,
											"end": 5482,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5468,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5468,
											"end": 5496,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5468,
											"end": 5496,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5464,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 5464,
											"end": 5533,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5515,
											"end": 5524,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5508,
											"end": 5524,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5508,
											"end": 5524,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5508,
											"end": 5524,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5508,
											"end": 5524,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5508,
											"end": 5524,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5508,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 5508,
											"end": 5524,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5464,
											"end": 5533,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 5464,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5397,
											"end": 5539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 5389,
											"end": 5395,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 5389,
											"end": 5395,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5395,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 5389,
											"end": 5395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5395,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5332,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 5332,
											"end": 5539,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5332,
											"end": 5539,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 5332,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5332,
											"end": 5539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5545,
											"end": 5602,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5545,
											"end": 5602,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5545,
											"end": 5602,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5545,
											"end": 5602,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5545,
											"end": 5602,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5545,
											"end": 5602,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5545,
											"end": 5602,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5545,
											"end": 5602,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 5545,
											"end": 5602,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5545,
											"end": 5602,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 5545,
											"end": 5602,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5545,
											"end": 5602,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 5545,
											"end": 5602,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5545,
											"end": 5602,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5545,
											"end": 5602,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5545,
											"end": 5602,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5545,
											"end": 5602,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5545,
											"end": 5602,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5545,
											"end": 5602,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5545,
											"end": 5602,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5021,
											"end": 5607,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 5021,
											"end": 5607,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5021,
											"end": 5607,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5021,
											"end": 5607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5021,
											"end": 5607,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5021,
											"end": 5607,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14149,
											"end": 14816,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 14149,
											"end": 14816,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14281,
											"end": 14285,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14297,
											"end": 14312,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 14297,
											"end": 14299,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14297,
											"end": 14310,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14297,
											"end": 14310,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14297,
											"end": 14310,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 14297,
											"end": 14312,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14297,
											"end": 14312,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 14297,
											"end": 14312,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14293,
											"end": 14812,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14293,
											"end": 14812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 14293,
											"end": 14812,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14350,
											"end": 14352,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14370,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14334,
											"end": 14370,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14370,
											"name": "PUSH",
											"source": 9,
											"value": "150B7A02"
										},
										{
											"begin": 14371,
											"end": 14383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 14371,
											"end": 14381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 14371,
											"end": 14383,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14371,
											"end": 14383,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 14371,
											"end": 14383,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14385,
											"end": 14389,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 14391,
											"end": 14398,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 14400,
											"end": 14405,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 14334,
											"end": 14406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14578,
											"end": 14579,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14561,
											"end": 14567,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14561,
											"end": 14574,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14561,
											"end": 14579,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 14557,
											"end": 14766,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14557,
											"end": 14766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 14557,
											"end": 14766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14593,
											"end": 14654,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14593,
											"end": 14654,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14593,
											"end": 14654,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14593,
											"end": 14654,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14593,
											"end": 14654,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14593,
											"end": 14654,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14593,
											"end": 14654,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14593,
											"end": 14654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 14593,
											"end": 14654,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14593,
											"end": 14654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 14593,
											"end": 14654,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14593,
											"end": 14654,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 14593,
											"end": 14654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14593,
											"end": 14654,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14593,
											"end": 14654,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14593,
											"end": 14654,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14593,
											"end": 14654,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14593,
											"end": 14654,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14593,
											"end": 14654,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14593,
											"end": 14654,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14557,
											"end": 14766,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 14557,
											"end": 14766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14736,
											"end": 14742,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14730,
											"end": 14743,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14721,
											"end": 14727,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14717,
											"end": 14719,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14713,
											"end": 14728,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14706,
											"end": 14744,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 14322,
											"end": 14774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14464,
											"end": 14509,
											"name": "PUSH",
											"source": 9,
											"value": "150B7A02"
										},
										{
											"begin": 14464,
											"end": 14509,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 14464,
											"end": 14509,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 14454,
											"end": 14509,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14454,
											"end": 14509,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 14454,
											"end": 14509,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14454,
											"end": 14460,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14454,
											"end": 14509,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14454,
											"end": 14509,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 14454,
											"end": 14509,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14454,
											"end": 14509,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 14447,
											"end": 14509,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14447,
											"end": 14509,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14447,
											"end": 14509,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14447,
											"end": 14509,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 14447,
											"end": 14509,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14293,
											"end": 14812,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 14293,
											"end": 14812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14801,
											"end": 14805,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 14794,
											"end": 14805,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14794,
											"end": 14805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14149,
											"end": 14816,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 14149,
											"end": 14816,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14149,
											"end": 14816,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 14149,
											"end": 14816,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14149,
											"end": 14816,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14149,
											"end": 14816,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14149,
											"end": 14816,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14149,
											"end": 14816,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14149,
											"end": 14816,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6600,
											"end": 6686,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 6600,
											"end": 6686,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6651,
											"end": 6664,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6600,
											"end": 6686,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6600,
											"end": 6686,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15264,
											"end": 15400,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 15264,
											"end": 15400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15264,
											"end": 15400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15264,
											"end": 15400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15264,
											"end": 15400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15264,
											"end": 15400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15264,
											"end": 15400,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15772,
											"end": 15907,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 15772,
											"end": 15907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15772,
											"end": 15907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15772,
											"end": 15907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15772,
											"end": 15907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15772,
											"end": 15907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15772,
											"end": 15907,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 718,
											"end": 1095,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 718,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 778,
											"end": 782,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 993,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1053,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1054,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1054,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1054,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1088,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1080,
											"end": 1084,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1080,
											"end": 1088,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1073,
											"end": 1088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1073,
											"end": 1088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1073,
											"end": 1088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 718,
											"end": 1095,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 718,
											"end": 1095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 718,
											"end": 1095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 718,
											"end": 1095,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "229"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 84,
											"end": 89,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 166,
											"end": 172,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 100,
											"end": 174,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 100,
											"end": 174,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 197,
											"end": 203,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 183,
											"end": 204,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 224,
											"end": 240,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 255,
											"end": 271,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 252,
											"end": 277,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 249,
											"end": 361,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 249,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 249,
											"end": 361,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 404,
											"end": 410,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 399,
											"end": 402,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 394,
											"end": 397,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 90,
											"end": 417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 469,
											"end": 474,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 513,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 494,
											"end": 514,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 485,
											"end": 514,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 485,
											"end": 514,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 701,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 568,
											"end": 701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 611,
											"end": 616,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 655,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 636,
											"end": 656,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 627,
											"end": 656,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 627,
											"end": 656,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 665,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 665,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 665,
											"end": 695,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 665,
											"end": 695,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 665,
											"end": 695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 568,
											"end": 701,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 568,
											"end": 701,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 568,
											"end": 701,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 701,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 701,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 707,
											"end": 844,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 707,
											"end": 844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 752,
											"end": 757,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 790,
											"end": 796,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 777,
											"end": 797,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 768,
											"end": 797,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 768,
											"end": 797,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 806,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 832,
											"end": 837,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 806,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 806,
											"end": 838,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 806,
											"end": 838,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 806,
											"end": 838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 707,
											"end": 844,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 707,
											"end": 844,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 707,
											"end": 844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 707,
											"end": 844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 707,
											"end": 844,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 850,
											"end": 991,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 850,
											"end": 991,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 906,
											"end": 911,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 943,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 931,
											"end": 944,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 922,
											"end": 944,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 922,
											"end": 944,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 953,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 979,
											"end": 984,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 953,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 953,
											"end": 985,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 953,
											"end": 985,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 953,
											"end": 985,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 850,
											"end": 991,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 850,
											"end": 991,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 850,
											"end": 991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 850,
											"end": 991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 850,
											"end": 991,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1065,
											"end": 1070,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1117,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1099,
											"end": 1105,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1112,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1118,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1226,
											"end": 1246,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 1338,
											"end": 1341,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1330,
											"end": 1336,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1321,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1311,
											"end": 1328,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1342,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1071,
											"end": 1348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1400,
											"end": 1405,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1444,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1425,
											"end": 1445,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 1481,
											"end": 1486,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1558,
											"end": 1564,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1609,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1595,
											"end": 1604,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1586,
											"end": 1593,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1582,
											"end": 1605,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1578,
											"end": 1610,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1734,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 1803,
											"end": 1810,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1794,
											"end": 1800,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1783,
											"end": 1792,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1779,
											"end": 1801,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1811,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1811,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1821,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1902,
											"end": 1908,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1916,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1959,
											"end": 1961,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 1956,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1938,
											"end": 1945,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1934,
											"end": 1957,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1930,
											"end": 1962,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2086,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 2155,
											"end": 2162,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2146,
											"end": 2152,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2144,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2153,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2100,
											"end": 2163,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2100,
											"end": 2163,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2056,
											"end": 2173,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2212,
											"end": 2214,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 2283,
											"end": 2290,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2274,
											"end": 2280,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2263,
											"end": 2272,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2259,
											"end": 2281,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2291,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2291,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2301,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2391,
											"end": 2397,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2405,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2413,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2456,
											"end": 2458,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2444,
											"end": 2453,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2442,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2431,
											"end": 2454,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2459,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 2652,
											"end": 2659,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2643,
											"end": 2649,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2641,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2597,
											"end": 2660,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2597,
											"end": 2660,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2553,
											"end": 2670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2711,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2771,
											"end": 2777,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2769,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2756,
											"end": 2778,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2680,
											"end": 2798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2837,
											"end": 2839,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 2908,
											"end": 2915,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2888,
											"end": 2897,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2906,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2808,
											"end": 2926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3034,
											"end": 3040,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3048,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3050,
											"end": 3056,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3107,
											"end": 3110,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3082,
											"end": 3105,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3078,
											"end": 3111,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3234,
											"end": 3235,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 3304,
											"end": 3311,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3295,
											"end": 3301,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3284,
											"end": 3293,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3280,
											"end": 3302,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3249,
											"end": 3312,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3249,
											"end": 3312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3205,
											"end": 3322,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3361,
											"end": 3363,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 3432,
											"end": 3439,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3423,
											"end": 3429,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3412,
											"end": 3421,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3332,
											"end": 3450,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3489,
											"end": 3491,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 3560,
											"end": 3567,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3557,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3549,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3536,
											"end": 3558,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3505,
											"end": 3568,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3505,
											"end": 3568,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3460,
											"end": 3578,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3645,
											"end": 3647,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3634,
											"end": 3643,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3617,
											"end": 3649,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3676,
											"end": 3694,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3668,
											"end": 3674,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3665,
											"end": 3695,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 3857,
											"end": 3864,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3848,
											"end": 3854,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3837,
											"end": 3846,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3833,
											"end": 3855,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3793,
											"end": 3865,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3793,
											"end": 3865,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3588,
											"end": 3875,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3953,
											"end": 3959,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3961,
											"end": 3967,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4012,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4007,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3989,
											"end": 3996,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3985,
											"end": 4008,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3981,
											"end": 4013,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4136,
											"end": 4137,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 4206,
											"end": 4213,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4197,
											"end": 4203,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4186,
											"end": 4195,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4182,
											"end": 4204,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4151,
											"end": 4214,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4151,
											"end": 4214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4107,
											"end": 4224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4263,
											"end": 4265,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 4331,
											"end": 4338,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4322,
											"end": 4328,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4311,
											"end": 4320,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4307,
											"end": 4329,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4279,
											"end": 4339,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4279,
											"end": 4339,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4234,
											"end": 4349,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4438,
											"end": 4444,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4487,
											"end": 4489,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4475,
											"end": 4484,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4466,
											"end": 4473,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4485,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4458,
											"end": 4490,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4613,
											"end": 4614,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 4683,
											"end": 4690,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4674,
											"end": 4680,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4663,
											"end": 4672,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4659,
											"end": 4681,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4691,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4691,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4701,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4740,
											"end": 4742,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 4811,
											"end": 4818,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4802,
											"end": 4808,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4800,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 4809,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4756,
											"end": 4819,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4756,
											"end": 4819,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4711,
											"end": 4829,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4900,
											"end": 4906,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4951,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4937,
											"end": 4946,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4928,
											"end": 4935,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4924,
											"end": 4947,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4920,
											"end": 4952,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5075,
											"end": 5076,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 5144,
											"end": 5151,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5135,
											"end": 5141,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5124,
											"end": 5133,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5120,
											"end": 5142,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5152,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5152,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5046,
											"end": 5162,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5244,
											"end": 5250,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5293,
											"end": 5295,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5281,
											"end": 5290,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5272,
											"end": 5279,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5291,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5296,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5419,
											"end": 5420,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 5499,
											"end": 5506,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5490,
											"end": 5496,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5479,
											"end": 5488,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5497,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5434,
											"end": 5507,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5434,
											"end": 5507,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5595,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5638,
											"end": 5640,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5626,
											"end": 5635,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5617,
											"end": 5624,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5613,
											"end": 5636,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5609,
											"end": 5641,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5764,
											"end": 5765,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 5834,
											"end": 5841,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5825,
											"end": 5831,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5814,
											"end": 5823,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5810,
											"end": 5832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5779,
											"end": 5842,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5779,
											"end": 5842,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5735,
											"end": 5852,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 5970,
											"end": 5975,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5947,
											"end": 5950,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5940,
											"end": 5977,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 6085,
											"end": 6090,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6065,
											"end": 6068,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6058,
											"end": 6092,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6193,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 6250,
											"end": 6255,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 6335,
											"end": 6341,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6330,
											"end": 6333,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6265,
											"end": 6342,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6265,
											"end": 6342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 6396,
											"end": 6402,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6391,
											"end": 6394,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6377,
											"end": 6382,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6389,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 6450,
											"end": 6456,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6423,
											"end": 6426,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6419,
											"end": 6458,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6412,
											"end": 6458,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6412,
											"end": 6458,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6194,
											"end": 6464,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6558,
											"end": 6561,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 6619,
											"end": 6624,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 6705,
											"end": 6711,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6700,
											"end": 6703,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6634,
											"end": 6712,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6634,
											"end": 6712,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 6766,
											"end": 6772,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6761,
											"end": 6764,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6754,
											"end": 6758,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6747,
											"end": 6752,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6743,
											"end": 6759,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6793,
											"end": 6796,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6789,
											"end": 6828,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6782,
											"end": 6828,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6782,
											"end": 6828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6562,
											"end": 6834,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6840,
											"end": 7206,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 6840,
											"end": 7206,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6982,
											"end": 6985,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7003,
											"end": 7070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 7067,
											"end": 7069,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 7062,
											"end": 7065,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7003,
											"end": 7070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 7003,
											"end": 7070,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7003,
											"end": 7070,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 7003,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6996,
											"end": 7070,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6996,
											"end": 7070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7079,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 7168,
											"end": 7171,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7079,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 7079,
											"end": 7172,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7079,
											"end": 7172,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 7079,
											"end": 7172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7197,
											"end": 7199,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7192,
											"end": 7195,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7188,
											"end": 7200,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7200,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7200,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6840,
											"end": 7206,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6840,
											"end": 7206,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6840,
											"end": 7206,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6840,
											"end": 7206,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7212,
											"end": 7578,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 7212,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7354,
											"end": 7357,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7375,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 7439,
											"end": 7441,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 7434,
											"end": 7437,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7375,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 7375,
											"end": 7442,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7375,
											"end": 7442,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 7375,
											"end": 7442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7442,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7451,
											"end": 7544,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 7540,
											"end": 7543,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7451,
											"end": 7544,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 7451,
											"end": 7544,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7451,
											"end": 7544,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 7451,
											"end": 7544,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7569,
											"end": 7571,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7564,
											"end": 7567,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7560,
											"end": 7572,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7553,
											"end": 7572,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7553,
											"end": 7572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7212,
											"end": 7578,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7212,
											"end": 7578,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7212,
											"end": 7578,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7212,
											"end": 7578,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7584,
											"end": 7950,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 7584,
											"end": 7950,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7726,
											"end": 7729,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7747,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 7811,
											"end": 7813,
											"name": "PUSH",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 7806,
											"end": 7809,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7747,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 7747,
											"end": 7814,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7747,
											"end": 7814,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 7747,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7740,
											"end": 7814,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7740,
											"end": 7814,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7823,
											"end": 7916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 7912,
											"end": 7915,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7823,
											"end": 7916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 7823,
											"end": 7916,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7823,
											"end": 7916,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 7823,
											"end": 7916,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7941,
											"end": 7943,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7936,
											"end": 7939,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7944,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7925,
											"end": 7944,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7925,
											"end": 7944,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7584,
											"end": 7950,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7584,
											"end": 7950,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7584,
											"end": 7950,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7584,
											"end": 7950,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7956,
											"end": 8322,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 7956,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8098,
											"end": 8101,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8119,
											"end": 8186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 8183,
											"end": 8185,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 8178,
											"end": 8181,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8119,
											"end": 8186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 8119,
											"end": 8186,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8119,
											"end": 8186,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 8119,
											"end": 8186,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8112,
											"end": 8186,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8112,
											"end": 8186,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8195,
											"end": 8288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 8284,
											"end": 8287,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8195,
											"end": 8288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 8195,
											"end": 8288,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8195,
											"end": 8288,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 8195,
											"end": 8288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8313,
											"end": 8315,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8308,
											"end": 8311,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8304,
											"end": 8316,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8297,
											"end": 8316,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8297,
											"end": 8316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7956,
											"end": 8322,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7956,
											"end": 8322,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7956,
											"end": 8322,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7956,
											"end": 8322,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8328,
											"end": 8694,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 8328,
											"end": 8694,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8470,
											"end": 8473,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8491,
											"end": 8558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 8555,
											"end": 8557,
											"name": "PUSH",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 8550,
											"end": 8553,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8491,
											"end": 8558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 8491,
											"end": 8558,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8491,
											"end": 8558,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 8491,
											"end": 8558,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8484,
											"end": 8558,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8484,
											"end": 8558,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8567,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8567,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 8567,
											"end": 8660,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8567,
											"end": 8660,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 8567,
											"end": 8660,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8685,
											"end": 8687,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8680,
											"end": 8683,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8676,
											"end": 8688,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8669,
											"end": 8688,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8669,
											"end": 8688,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8694,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8694,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8694,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8694,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8700,
											"end": 9066,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 8700,
											"end": 9066,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8842,
											"end": 8845,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8863,
											"end": 8930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 8927,
											"end": 8929,
											"name": "PUSH",
											"source": 10,
											"value": "2B"
										},
										{
											"begin": 8922,
											"end": 8925,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8863,
											"end": 8930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 8863,
											"end": 8930,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8863,
											"end": 8930,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 8863,
											"end": 8930,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8856,
											"end": 8930,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8856,
											"end": 8930,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8939,
											"end": 9032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 9028,
											"end": 9031,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8939,
											"end": 9032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 8939,
											"end": 9032,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8939,
											"end": 9032,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 8939,
											"end": 9032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9057,
											"end": 9059,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9052,
											"end": 9055,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9048,
											"end": 9060,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9041,
											"end": 9060,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9041,
											"end": 9060,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8700,
											"end": 9066,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8700,
											"end": 9066,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8700,
											"end": 9066,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8700,
											"end": 9066,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9072,
											"end": 9438,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 9072,
											"end": 9438,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9214,
											"end": 9217,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9235,
											"end": 9302,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 9299,
											"end": 9301,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 9294,
											"end": 9297,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9235,
											"end": 9302,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 9235,
											"end": 9302,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9235,
											"end": 9302,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 9235,
											"end": 9302,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9228,
											"end": 9302,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9228,
											"end": 9302,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9311,
											"end": 9404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 9400,
											"end": 9403,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9311,
											"end": 9404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 9311,
											"end": 9404,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9311,
											"end": 9404,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 9311,
											"end": 9404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9429,
											"end": 9431,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9424,
											"end": 9427,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9420,
											"end": 9432,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9072,
											"end": 9438,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9072,
											"end": 9438,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9072,
											"end": 9438,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9072,
											"end": 9438,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9444,
											"end": 9810,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 9444,
											"end": 9810,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9586,
											"end": 9589,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9607,
											"end": 9674,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 9671,
											"end": 9673,
											"name": "PUSH",
											"source": 10,
											"value": "2F"
										},
										{
											"begin": 9666,
											"end": 9669,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9607,
											"end": 9674,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 9607,
											"end": 9674,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9607,
											"end": 9674,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 9607,
											"end": 9674,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9600,
											"end": 9674,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9600,
											"end": 9674,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9683,
											"end": 9776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 9772,
											"end": 9775,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9683,
											"end": 9776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 9683,
											"end": 9776,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9683,
											"end": 9776,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 9683,
											"end": 9776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9801,
											"end": 9803,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9796,
											"end": 9799,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9792,
											"end": 9804,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9785,
											"end": 9804,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9785,
											"end": 9804,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9444,
											"end": 9810,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9444,
											"end": 9810,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9444,
											"end": 9810,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9444,
											"end": 9810,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9816,
											"end": 10182,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 9816,
											"end": 10182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9958,
											"end": 9961,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9979,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 10043,
											"end": 10045,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 10038,
											"end": 10041,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9979,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 9979,
											"end": 10046,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9979,
											"end": 10046,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 9979,
											"end": 10046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9972,
											"end": 10046,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9972,
											"end": 10046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10055,
											"end": 10148,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 10144,
											"end": 10147,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10055,
											"end": 10148,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 10055,
											"end": 10148,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10055,
											"end": 10148,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 10055,
											"end": 10148,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10173,
											"end": 10175,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10168,
											"end": 10171,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10164,
											"end": 10176,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10157,
											"end": 10176,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10157,
											"end": 10176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9816,
											"end": 10182,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9816,
											"end": 10182,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9816,
											"end": 10182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9816,
											"end": 10182,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10188,
											"end": 10554,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 10188,
											"end": 10554,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10330,
											"end": 10333,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10351,
											"end": 10418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 10415,
											"end": 10417,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 10410,
											"end": 10413,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10351,
											"end": 10418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 10351,
											"end": 10418,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10351,
											"end": 10418,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 10351,
											"end": 10418,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10344,
											"end": 10418,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10344,
											"end": 10418,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10427,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 10516,
											"end": 10519,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10427,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 10427,
											"end": 10520,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10427,
											"end": 10520,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 10427,
											"end": 10520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10545,
											"end": 10547,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10540,
											"end": 10543,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10536,
											"end": 10548,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10529,
											"end": 10548,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10529,
											"end": 10548,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10188,
											"end": 10554,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10188,
											"end": 10554,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10188,
											"end": 10554,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10188,
											"end": 10554,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10560,
											"end": 10926,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 10560,
											"end": 10926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10702,
											"end": 10705,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10723,
											"end": 10790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 10787,
											"end": 10789,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 10782,
											"end": 10785,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10723,
											"end": 10790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 10723,
											"end": 10790,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10723,
											"end": 10790,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 10723,
											"end": 10790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10716,
											"end": 10790,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10716,
											"end": 10790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10799,
											"end": 10892,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 10888,
											"end": 10891,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10799,
											"end": 10892,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 10799,
											"end": 10892,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10799,
											"end": 10892,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 10799,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10917,
											"end": 10919,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10912,
											"end": 10915,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10908,
											"end": 10920,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10901,
											"end": 10920,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10901,
											"end": 10920,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10560,
											"end": 10926,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10560,
											"end": 10926,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10560,
											"end": 10926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10560,
											"end": 10926,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10932,
											"end": 11298,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 10932,
											"end": 11298,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11077,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11095,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 11159,
											"end": 11161,
											"name": "PUSH",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 11154,
											"end": 11157,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11095,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 11095,
											"end": 11162,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 11095,
											"end": 11162,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 11095,
											"end": 11162,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11088,
											"end": 11162,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11088,
											"end": 11162,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11171,
											"end": 11264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 11260,
											"end": 11263,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11171,
											"end": 11264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 11171,
											"end": 11264,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 11171,
											"end": 11264,
											"name": "tag",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 11171,
											"end": 11264,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11289,
											"end": 11291,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11284,
											"end": 11287,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11280,
											"end": 11292,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11273,
											"end": 11292,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11273,
											"end": 11292,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10932,
											"end": 11298,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10932,
											"end": 11298,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10932,
											"end": 11298,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10932,
											"end": 11298,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 11304,
											"end": 11670,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 11304,
											"end": 11670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11446,
											"end": 11449,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11467,
											"end": 11534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 11531,
											"end": 11533,
											"name": "PUSH",
											"source": 10,
											"value": "2E"
										},
										{
											"begin": 11526,
											"end": 11529,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11467,
											"end": 11534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 11467,
											"end": 11534,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 11467,
											"end": 11534,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 11467,
											"end": 11534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11460,
											"end": 11534,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11460,
											"end": 11534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11543,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 11632,
											"end": 11635,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11543,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 11543,
											"end": 11636,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 11543,
											"end": 11636,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 11543,
											"end": 11636,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11661,
											"end": 11663,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11656,
											"end": 11659,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11645,
											"end": 11664,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11645,
											"end": 11664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11304,
											"end": 11670,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11304,
											"end": 11670,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11304,
											"end": 11670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11304,
											"end": 11670,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 11676,
											"end": 12042,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 11676,
											"end": 12042,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11821,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11839,
											"end": 11906,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 11903,
											"end": 11905,
											"name": "PUSH",
											"source": 10,
											"value": "2F"
										},
										{
											"begin": 11898,
											"end": 11901,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11839,
											"end": 11906,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 11839,
											"end": 11906,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 11839,
											"end": 11906,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 11839,
											"end": 11906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11832,
											"end": 11906,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11832,
											"end": 11906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11915,
											"end": 12008,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 12004,
											"end": 12007,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11915,
											"end": 12008,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 11915,
											"end": 12008,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 11915,
											"end": 12008,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 11915,
											"end": 12008,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12033,
											"end": 12035,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12028,
											"end": 12031,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12024,
											"end": 12036,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12017,
											"end": 12036,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12017,
											"end": 12036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11676,
											"end": 12042,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11676,
											"end": 12042,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11676,
											"end": 12042,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11676,
											"end": 12042,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 12048,
											"end": 12414,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 12048,
											"end": 12414,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12190,
											"end": 12193,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12211,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 12275,
											"end": 12277,
											"name": "PUSH",
											"source": 10,
											"value": "2D"
										},
										{
											"begin": 12270,
											"end": 12273,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12211,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 12211,
											"end": 12278,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 12211,
											"end": 12278,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 12211,
											"end": 12278,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12204,
											"end": 12278,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12204,
											"end": 12278,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12287,
											"end": 12380,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 12376,
											"end": 12379,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12287,
											"end": 12380,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 12287,
											"end": 12380,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 12287,
											"end": 12380,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 12287,
											"end": 12380,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12405,
											"end": 12407,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12400,
											"end": 12403,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12396,
											"end": 12408,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12389,
											"end": 12408,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12389,
											"end": 12408,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12048,
											"end": 12414,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12048,
											"end": 12414,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12048,
											"end": 12414,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12048,
											"end": 12414,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 12420,
											"end": 12538,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 12420,
											"end": 12538,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12507,
											"end": 12531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 12525,
											"end": 12530,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12507,
											"end": 12531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 12507,
											"end": 12531,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 12507,
											"end": 12531,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 12507,
											"end": 12531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12502,
											"end": 12505,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12532,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12420,
											"end": 12538,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12420,
											"end": 12538,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12420,
											"end": 12538,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 12544,
											"end": 12766,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 12544,
											"end": 12766,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12637,
											"end": 12641,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12675,
											"end": 12677,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12664,
											"end": 12673,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12660,
											"end": 12678,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12652,
											"end": 12678,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12652,
											"end": 12678,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12688,
											"end": 12759,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 12756,
											"end": 12757,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12745,
											"end": 12754,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12741,
											"end": 12758,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12732,
											"end": 12738,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12688,
											"end": 12759,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 12688,
											"end": 12759,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 12688,
											"end": 12759,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 12688,
											"end": 12759,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12544,
											"end": 12766,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12544,
											"end": 12766,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12544,
											"end": 12766,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12544,
											"end": 12766,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12544,
											"end": 12766,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 12772,
											"end": 13412,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 12772,
											"end": 13412,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12967,
											"end": 12971,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13005,
											"end": 13008,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 12994,
											"end": 13003,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12990,
											"end": 13009,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12982,
											"end": 13009,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12982,
											"end": 13009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13019,
											"end": 13090,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 13087,
											"end": 13088,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13076,
											"end": 13085,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13072,
											"end": 13089,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13063,
											"end": 13069,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 13019,
											"end": 13090,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 13019,
											"end": 13090,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 13019,
											"end": 13090,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 13019,
											"end": 13090,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13100,
											"end": 13172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 13168,
											"end": 13170,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13157,
											"end": 13166,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13144,
											"end": 13150,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13100,
											"end": 13172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 13100,
											"end": 13172,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 13100,
											"end": 13172,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 13100,
											"end": 13172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13182,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 13250,
											"end": 13252,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13239,
											"end": 13248,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13235,
											"end": 13253,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13226,
											"end": 13232,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13182,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 13182,
											"end": 13254,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 13182,
											"end": 13254,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 13182,
											"end": 13254,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13301,
											"end": 13310,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13295,
											"end": 13299,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13291,
											"end": 13311,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13286,
											"end": 13288,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13275,
											"end": 13284,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13271,
											"end": 13289,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13264,
											"end": 13312,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13329,
											"end": 13405,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 13400,
											"end": 13404,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13391,
											"end": 13397,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13329,
											"end": 13405,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 13329,
											"end": 13405,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 13329,
											"end": 13405,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 13329,
											"end": 13405,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13321,
											"end": 13405,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13321,
											"end": 13405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12772,
											"end": 13412,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 12772,
											"end": 13412,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 12772,
											"end": 13412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12772,
											"end": 13412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12772,
											"end": 13412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12772,
											"end": 13412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12772,
											"end": 13412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12772,
											"end": 13412,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 13418,
											"end": 13628,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 13418,
											"end": 13628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13505,
											"end": 13509,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13543,
											"end": 13545,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13532,
											"end": 13541,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13528,
											"end": 13546,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13520,
											"end": 13546,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13520,
											"end": 13546,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13556,
											"end": 13621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 13618,
											"end": 13619,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13607,
											"end": 13616,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13603,
											"end": 13620,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13594,
											"end": 13600,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13556,
											"end": 13621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 13556,
											"end": 13621,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 13556,
											"end": 13621,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 13556,
											"end": 13621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13418,
											"end": 13628,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13418,
											"end": 13628,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13418,
											"end": 13628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13418,
											"end": 13628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13418,
											"end": 13628,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 13634,
											"end": 13947,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 13634,
											"end": 13947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13747,
											"end": 13751,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13785,
											"end": 13787,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13774,
											"end": 13783,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13770,
											"end": 13788,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13762,
											"end": 13788,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13762,
											"end": 13788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13834,
											"end": 13843,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13828,
											"end": 13832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13824,
											"end": 13844,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13820,
											"end": 13821,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13809,
											"end": 13818,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13805,
											"end": 13822,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13798,
											"end": 13845,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13862,
											"end": 13940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 13935,
											"end": 13939,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13926,
											"end": 13932,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13862,
											"end": 13940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 13862,
											"end": 13940,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 13862,
											"end": 13940,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 13862,
											"end": 13940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13854,
											"end": 13940,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13854,
											"end": 13940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13634,
											"end": 13947,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13634,
											"end": 13947,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13634,
											"end": 13947,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13634,
											"end": 13947,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13634,
											"end": 13947,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 13953,
											"end": 14372,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 13953,
											"end": 14372,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14119,
											"end": 14123,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14157,
											"end": 14159,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14146,
											"end": 14155,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14142,
											"end": 14160,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14134,
											"end": 14160,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14134,
											"end": 14160,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14206,
											"end": 14215,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14200,
											"end": 14204,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14196,
											"end": 14216,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14192,
											"end": 14193,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14181,
											"end": 14190,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14177,
											"end": 14194,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14170,
											"end": 14217,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14234,
											"end": 14365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 14360,
											"end": 14364,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14234,
											"end": 14365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 14234,
											"end": 14365,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 14234,
											"end": 14365,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 14234,
											"end": 14365,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14226,
											"end": 14365,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14226,
											"end": 14365,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13953,
											"end": 14372,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13953,
											"end": 14372,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13953,
											"end": 14372,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13953,
											"end": 14372,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14378,
											"end": 14797,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 14378,
											"end": 14797,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14544,
											"end": 14548,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14582,
											"end": 14584,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14567,
											"end": 14585,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14559,
											"end": 14585,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14559,
											"end": 14585,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14631,
											"end": 14640,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14625,
											"end": 14629,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14621,
											"end": 14641,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14617,
											"end": 14618,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14606,
											"end": 14615,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14602,
											"end": 14619,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14595,
											"end": 14642,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14659,
											"end": 14790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 14785,
											"end": 14789,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14659,
											"end": 14790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 14659,
											"end": 14790,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 14659,
											"end": 14790,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 14659,
											"end": 14790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14651,
											"end": 14790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14651,
											"end": 14790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14378,
											"end": 14797,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14378,
											"end": 14797,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14378,
											"end": 14797,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14378,
											"end": 14797,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14803,
											"end": 15222,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 14803,
											"end": 15222,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14969,
											"end": 14973,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15007,
											"end": 15009,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14996,
											"end": 15005,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14992,
											"end": 15010,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14984,
											"end": 15010,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14984,
											"end": 15010,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15056,
											"end": 15065,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15050,
											"end": 15054,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15046,
											"end": 15066,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15042,
											"end": 15043,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15031,
											"end": 15040,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15027,
											"end": 15044,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15020,
											"end": 15067,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15084,
											"end": 15215,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 15210,
											"end": 15214,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15084,
											"end": 15215,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 15084,
											"end": 15215,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 15084,
											"end": 15215,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 15084,
											"end": 15215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15076,
											"end": 15215,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15076,
											"end": 15215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14803,
											"end": 15222,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14803,
											"end": 15222,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14803,
											"end": 15222,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14803,
											"end": 15222,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15228,
											"end": 15647,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 15228,
											"end": 15647,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15394,
											"end": 15398,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15432,
											"end": 15434,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15421,
											"end": 15430,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15417,
											"end": 15435,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15409,
											"end": 15435,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15409,
											"end": 15435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15481,
											"end": 15490,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15475,
											"end": 15479,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15471,
											"end": 15491,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15467,
											"end": 15468,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15456,
											"end": 15465,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15452,
											"end": 15469,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15445,
											"end": 15492,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15509,
											"end": 15640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 15635,
											"end": 15639,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15509,
											"end": 15640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 15509,
											"end": 15640,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 15509,
											"end": 15640,
											"name": "tag",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 15509,
											"end": 15640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15501,
											"end": 15640,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15501,
											"end": 15640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15228,
											"end": 15647,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15228,
											"end": 15647,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15228,
											"end": 15647,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15228,
											"end": 15647,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15653,
											"end": 16072,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 15653,
											"end": 16072,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15819,
											"end": 15823,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15857,
											"end": 15859,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15846,
											"end": 15855,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15842,
											"end": 15860,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15834,
											"end": 15860,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15834,
											"end": 15860,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15906,
											"end": 15915,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15900,
											"end": 15904,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15896,
											"end": 15916,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15892,
											"end": 15893,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15881,
											"end": 15890,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15877,
											"end": 15894,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15870,
											"end": 15917,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15934,
											"end": 16065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 16060,
											"end": 16064,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15934,
											"end": 16065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 15934,
											"end": 16065,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 15934,
											"end": 16065,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 15934,
											"end": 16065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15926,
											"end": 16065,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15926,
											"end": 16065,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15653,
											"end": 16072,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15653,
											"end": 16072,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15653,
											"end": 16072,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15653,
											"end": 16072,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16078,
											"end": 16497,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 16078,
											"end": 16497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16244,
											"end": 16248,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16282,
											"end": 16284,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16271,
											"end": 16280,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16267,
											"end": 16285,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16259,
											"end": 16285,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16259,
											"end": 16285,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16331,
											"end": 16340,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16325,
											"end": 16329,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16321,
											"end": 16341,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16317,
											"end": 16318,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16306,
											"end": 16315,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16302,
											"end": 16319,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16295,
											"end": 16342,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16359,
											"end": 16490,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 16485,
											"end": 16489,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16359,
											"end": 16490,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 16359,
											"end": 16490,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16359,
											"end": 16490,
											"name": "tag",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 16359,
											"end": 16490,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16351,
											"end": 16490,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16351,
											"end": 16490,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16078,
											"end": 16497,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16078,
											"end": 16497,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16078,
											"end": 16497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16078,
											"end": 16497,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16503,
											"end": 16922,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 16503,
											"end": 16922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16669,
											"end": 16673,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16707,
											"end": 16709,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16696,
											"end": 16705,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16692,
											"end": 16710,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16684,
											"end": 16710,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16684,
											"end": 16710,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16756,
											"end": 16765,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16750,
											"end": 16754,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16746,
											"end": 16766,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16742,
											"end": 16743,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16731,
											"end": 16740,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16727,
											"end": 16744,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16720,
											"end": 16767,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16784,
											"end": 16915,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 16910,
											"end": 16914,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16784,
											"end": 16915,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 16784,
											"end": 16915,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16784,
											"end": 16915,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 16784,
											"end": 16915,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16776,
											"end": 16915,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16776,
											"end": 16915,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16503,
											"end": 16922,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16503,
											"end": 16922,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16503,
											"end": 16922,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16503,
											"end": 16922,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16928,
											"end": 17347,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 16928,
											"end": 17347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17094,
											"end": 17098,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17132,
											"end": 17134,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17121,
											"end": 17130,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17117,
											"end": 17135,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17109,
											"end": 17135,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17109,
											"end": 17135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17181,
											"end": 17190,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17175,
											"end": 17179,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17171,
											"end": 17191,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17167,
											"end": 17168,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17156,
											"end": 17165,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17152,
											"end": 17169,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17145,
											"end": 17192,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17209,
											"end": 17340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 17335,
											"end": 17339,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17209,
											"end": 17340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 17209,
											"end": 17340,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 17209,
											"end": 17340,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 17209,
											"end": 17340,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17201,
											"end": 17340,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17201,
											"end": 17340,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16928,
											"end": 17347,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16928,
											"end": 17347,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16928,
											"end": 17347,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16928,
											"end": 17347,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17353,
											"end": 17772,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 17353,
											"end": 17772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17519,
											"end": 17523,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17557,
											"end": 17559,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17546,
											"end": 17555,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17542,
											"end": 17560,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17534,
											"end": 17560,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17534,
											"end": 17560,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17606,
											"end": 17615,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17600,
											"end": 17604,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17596,
											"end": 17616,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17592,
											"end": 17593,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17581,
											"end": 17590,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17577,
											"end": 17594,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17617,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17634,
											"end": 17765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 17760,
											"end": 17764,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17634,
											"end": 17765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 17634,
											"end": 17765,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 17634,
											"end": 17765,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 17634,
											"end": 17765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17626,
											"end": 17765,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17626,
											"end": 17765,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17353,
											"end": 17772,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17353,
											"end": 17772,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17353,
											"end": 17772,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17353,
											"end": 17772,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17778,
											"end": 18197,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 17778,
											"end": 18197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17944,
											"end": 17948,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17982,
											"end": 17984,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17971,
											"end": 17980,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17967,
											"end": 17985,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17959,
											"end": 17985,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17959,
											"end": 17985,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18031,
											"end": 18040,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18025,
											"end": 18029,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18021,
											"end": 18041,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18017,
											"end": 18018,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18006,
											"end": 18015,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18002,
											"end": 18019,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17995,
											"end": 18042,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18059,
											"end": 18190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 18185,
											"end": 18189,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18059,
											"end": 18190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 18059,
											"end": 18190,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 18059,
											"end": 18190,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 18059,
											"end": 18190,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18051,
											"end": 18190,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18051,
											"end": 18190,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17778,
											"end": 18197,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17778,
											"end": 18197,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17778,
											"end": 18197,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17778,
											"end": 18197,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 18203,
											"end": 18622,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 18203,
											"end": 18622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18369,
											"end": 18373,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18407,
											"end": 18409,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18396,
											"end": 18405,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18392,
											"end": 18410,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18384,
											"end": 18410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18384,
											"end": 18410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18456,
											"end": 18465,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18450,
											"end": 18454,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18446,
											"end": 18466,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18442,
											"end": 18443,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18431,
											"end": 18440,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18427,
											"end": 18444,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18420,
											"end": 18467,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18484,
											"end": 18615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 18610,
											"end": 18614,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18484,
											"end": 18615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 18484,
											"end": 18615,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 18484,
											"end": 18615,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 18484,
											"end": 18615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18476,
											"end": 18615,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18476,
											"end": 18615,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18203,
											"end": 18622,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18203,
											"end": 18622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18203,
											"end": 18622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18203,
											"end": 18622,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 18628,
											"end": 19047,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 18628,
											"end": 19047,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18794,
											"end": 18798,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18832,
											"end": 18834,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18821,
											"end": 18830,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18817,
											"end": 18835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18809,
											"end": 18835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18809,
											"end": 18835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18881,
											"end": 18890,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18875,
											"end": 18879,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18871,
											"end": 18891,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18867,
											"end": 18868,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18856,
											"end": 18865,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18852,
											"end": 18869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18845,
											"end": 18892,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18909,
											"end": 19040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 19035,
											"end": 19039,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18909,
											"end": 19040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 18909,
											"end": 19040,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 18909,
											"end": 19040,
											"name": "tag",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 18909,
											"end": 19040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18901,
											"end": 19040,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18901,
											"end": 19040,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18628,
											"end": 19047,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18628,
											"end": 19047,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18628,
											"end": 19047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18628,
											"end": 19047,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 19053,
											"end": 19472,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 19053,
											"end": 19472,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19219,
											"end": 19223,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19257,
											"end": 19259,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19246,
											"end": 19255,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19242,
											"end": 19260,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19234,
											"end": 19260,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19234,
											"end": 19260,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19306,
											"end": 19315,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19300,
											"end": 19304,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19296,
											"end": 19316,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19292,
											"end": 19293,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19281,
											"end": 19290,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19277,
											"end": 19294,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19270,
											"end": 19317,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19334,
											"end": 19465,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 19460,
											"end": 19464,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19334,
											"end": 19465,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 19334,
											"end": 19465,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 19334,
											"end": 19465,
											"name": "tag",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 19334,
											"end": 19465,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19326,
											"end": 19465,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19326,
											"end": 19465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19053,
											"end": 19472,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19053,
											"end": 19472,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19053,
											"end": 19472,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19053,
											"end": 19472,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 19478,
											"end": 19897,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 19478,
											"end": 19897,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19644,
											"end": 19648,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19682,
											"end": 19684,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19671,
											"end": 19680,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19667,
											"end": 19685,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19659,
											"end": 19685,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19659,
											"end": 19685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19731,
											"end": 19740,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19725,
											"end": 19729,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19721,
											"end": 19741,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19717,
											"end": 19718,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19706,
											"end": 19715,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19702,
											"end": 19719,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19695,
											"end": 19742,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19759,
											"end": 19890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 19885,
											"end": 19889,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19759,
											"end": 19890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 19759,
											"end": 19890,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 19759,
											"end": 19890,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 19759,
											"end": 19890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19751,
											"end": 19890,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19751,
											"end": 19890,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19478,
											"end": 19897,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19478,
											"end": 19897,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19478,
											"end": 19897,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19478,
											"end": 19897,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 19903,
											"end": 20322,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 19903,
											"end": 20322,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20069,
											"end": 20073,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20107,
											"end": 20109,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20096,
											"end": 20105,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20092,
											"end": 20110,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20084,
											"end": 20110,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20084,
											"end": 20110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20156,
											"end": 20165,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20150,
											"end": 20154,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20146,
											"end": 20166,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20142,
											"end": 20143,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20131,
											"end": 20140,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20127,
											"end": 20144,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20120,
											"end": 20167,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20184,
											"end": 20315,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 20310,
											"end": 20314,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20184,
											"end": 20315,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 20184,
											"end": 20315,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 20184,
											"end": 20315,
											"name": "tag",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 20184,
											"end": 20315,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20176,
											"end": 20315,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20176,
											"end": 20315,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19903,
											"end": 20322,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19903,
											"end": 20322,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19903,
											"end": 20322,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19903,
											"end": 20322,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 20328,
											"end": 20550,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 20328,
											"end": 20550,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20421,
											"end": 20425,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20459,
											"end": 20461,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20448,
											"end": 20457,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20444,
											"end": 20462,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20436,
											"end": 20462,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20436,
											"end": 20462,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20472,
											"end": 20543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 20540,
											"end": 20541,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20529,
											"end": 20538,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20525,
											"end": 20542,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20516,
											"end": 20522,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20472,
											"end": 20543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 20472,
											"end": 20543,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 20472,
											"end": 20543,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 20472,
											"end": 20543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20328,
											"end": 20550,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20328,
											"end": 20550,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20328,
											"end": 20550,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20328,
											"end": 20550,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20328,
											"end": 20550,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 20556,
											"end": 20685,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 20556,
											"end": 20685,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20590,
											"end": 20596,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20617,
											"end": 20637,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 20617,
											"end": 20637,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 20617,
											"end": 20637,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 20617,
											"end": 20637,
											"name": "tag",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 20617,
											"end": 20637,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20607,
											"end": 20637,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20607,
											"end": 20637,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20646,
											"end": 20679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 20674,
											"end": 20678,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20666,
											"end": 20672,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20646,
											"end": 20679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 20646,
											"end": 20679,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 20646,
											"end": 20679,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 20646,
											"end": 20679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20556,
											"end": 20685,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20556,
											"end": 20685,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20556,
											"end": 20685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20556,
											"end": 20685,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 20691,
											"end": 20766,
											"name": "tag",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 20691,
											"end": 20766,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20724,
											"end": 20730,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20757,
											"end": 20759,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 20751,
											"end": 20760,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 20741,
											"end": 20760,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20741,
											"end": 20760,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20691,
											"end": 20766,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20691,
											"end": 20766,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 20772,
											"end": 21079,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 20772,
											"end": 21079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20833,
											"end": 20837,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20923,
											"end": 20941,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20915,
											"end": 20921,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20912,
											"end": 20942,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 20909,
											"end": 20965,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20909,
											"end": 20965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 20909,
											"end": 20965,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20945,
											"end": 20963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 20945,
											"end": 20963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 20945,
											"end": 20963,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 20945,
											"end": 20963,
											"name": "tag",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 20945,
											"end": 20963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20909,
											"end": 20965,
											"name": "tag",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 20909,
											"end": 20965,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20983,
											"end": 21012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 21005,
											"end": 21011,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20983,
											"end": 21012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 20983,
											"end": 21012,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 20983,
											"end": 21012,
											"name": "tag",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 20983,
											"end": 21012,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20975,
											"end": 21012,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20975,
											"end": 21012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21067,
											"end": 21071,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21061,
											"end": 21065,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21057,
											"end": 21072,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21049,
											"end": 21072,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21049,
											"end": 21072,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20772,
											"end": 21079,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20772,
											"end": 21079,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20772,
											"end": 21079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20772,
											"end": 21079,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 21085,
											"end": 21183,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 21085,
											"end": 21183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21136,
											"end": 21142,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21170,
											"end": 21175,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21164,
											"end": 21176,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 21154,
											"end": 21176,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21154,
											"end": 21176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21085,
											"end": 21183,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21085,
											"end": 21183,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21085,
											"end": 21183,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21085,
											"end": 21183,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 21189,
											"end": 21288,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 21189,
											"end": 21288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21241,
											"end": 21247,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21275,
											"end": 21280,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21269,
											"end": 21281,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 21259,
											"end": 21281,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21259,
											"end": 21281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21189,
											"end": 21288,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21189,
											"end": 21288,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21189,
											"end": 21288,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21189,
											"end": 21288,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 21294,
											"end": 21462,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 21294,
											"end": 21462,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21377,
											"end": 21388,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21411,
											"end": 21417,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21406,
											"end": 21409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21399,
											"end": 21418,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21451,
											"end": 21455,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21446,
											"end": 21449,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21442,
											"end": 21456,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21427,
											"end": 21456,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21427,
											"end": 21456,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21294,
											"end": 21462,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21294,
											"end": 21462,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21294,
											"end": 21462,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21294,
											"end": 21462,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21294,
											"end": 21462,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 21468,
											"end": 21637,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 21468,
											"end": 21637,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21552,
											"end": 21563,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21586,
											"end": 21592,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21581,
											"end": 21584,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21574,
											"end": 21593,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21626,
											"end": 21630,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21621,
											"end": 21624,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21617,
											"end": 21631,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21602,
											"end": 21631,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21602,
											"end": 21631,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21468,
											"end": 21637,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21468,
											"end": 21637,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21468,
											"end": 21637,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21468,
											"end": 21637,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21468,
											"end": 21637,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 21643,
											"end": 21916,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 21643,
											"end": 21916,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21683,
											"end": 21686,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21702,
											"end": 21722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 21720,
											"end": 21721,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21702,
											"end": 21722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 21702,
											"end": 21722,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 21702,
											"end": 21722,
											"name": "tag",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 21702,
											"end": 21722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21697,
											"end": 21722,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21697,
											"end": 21722,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21736,
											"end": 21756,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 21754,
											"end": 21755,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21736,
											"end": 21756,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 21736,
											"end": 21756,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 21736,
											"end": 21756,
											"name": "tag",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 21736,
											"end": 21756,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21731,
											"end": 21756,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21731,
											"end": 21756,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21858,
											"end": 21859,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21822,
											"end": 21856,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21818,
											"end": 21860,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 21815,
											"end": 21816,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21812,
											"end": 21861,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 21809,
											"end": 21884,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 21809,
											"end": 21884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 21809,
											"end": 21884,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21864,
											"end": 21882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 21864,
											"end": 21882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 21864,
											"end": 21882,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 21864,
											"end": 21882,
											"name": "tag",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 21864,
											"end": 21882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21809,
											"end": 21884,
											"name": "tag",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 21809,
											"end": 21884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21908,
											"end": 21909,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21905,
											"end": 21906,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21901,
											"end": 21910,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21894,
											"end": 21910,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21894,
											"end": 21910,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21643,
											"end": 21916,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21643,
											"end": 21916,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21643,
											"end": 21916,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21643,
											"end": 21916,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21643,
											"end": 21916,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 21922,
											"end": 22227,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 21922,
											"end": 22227,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21962,
											"end": 21965,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21981,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 21999,
											"end": 22000,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21981,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 21981,
											"end": 22001,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 21981,
											"end": 22001,
											"name": "tag",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 21981,
											"end": 22001,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21976,
											"end": 22001,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21976,
											"end": 22001,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22015,
											"end": 22035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 22033,
											"end": 22034,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22015,
											"end": 22035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 22015,
											"end": 22035,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 22015,
											"end": 22035,
											"name": "tag",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 22015,
											"end": 22035,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22010,
											"end": 22035,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 22010,
											"end": 22035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22169,
											"end": 22170,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22101,
											"end": 22167,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22097,
											"end": 22171,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 22094,
											"end": 22095,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22091,
											"end": 22172,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 22088,
											"end": 22195,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 22088,
											"end": 22195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 22088,
											"end": 22195,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 22175,
											"end": 22193,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 22175,
											"end": 22193,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 22175,
											"end": 22193,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 22175,
											"end": 22193,
											"name": "tag",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 22175,
											"end": 22193,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22088,
											"end": 22195,
											"name": "tag",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 22088,
											"end": 22195,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22219,
											"end": 22220,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22216,
											"end": 22217,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22212,
											"end": 22221,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22205,
											"end": 22221,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22205,
											"end": 22221,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21922,
											"end": 22227,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21922,
											"end": 22227,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21922,
											"end": 22227,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21922,
											"end": 22227,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21922,
											"end": 22227,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 22233,
											"end": 22424,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 22233,
											"end": 22424,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22273,
											"end": 22277,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22293,
											"end": 22313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 22311,
											"end": 22312,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22293,
											"end": 22313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 22293,
											"end": 22313,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 22293,
											"end": 22313,
											"name": "tag",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 22293,
											"end": 22313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22288,
											"end": 22313,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22288,
											"end": 22313,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22327,
											"end": 22347,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 22345,
											"end": 22346,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22327,
											"end": 22347,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 22327,
											"end": 22347,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 22327,
											"end": 22347,
											"name": "tag",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 22327,
											"end": 22347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22322,
											"end": 22347,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 22322,
											"end": 22347,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22366,
											"end": 22367,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22363,
											"end": 22364,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22360,
											"end": 22368,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 22357,
											"end": 22391,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 22357,
											"end": 22391,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 22357,
											"end": 22391,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 22371,
											"end": 22389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 22371,
											"end": 22389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 22371,
											"end": 22389,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 22371,
											"end": 22389,
											"name": "tag",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 22371,
											"end": 22389,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22357,
											"end": 22391,
											"name": "tag",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 22357,
											"end": 22391,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22416,
											"end": 22417,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22413,
											"end": 22414,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22409,
											"end": 22418,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 22401,
											"end": 22418,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22401,
											"end": 22418,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22233,
											"end": 22424,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 22233,
											"end": 22424,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22233,
											"end": 22424,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22233,
											"end": 22424,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22233,
											"end": 22424,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 22430,
											"end": 22621,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 22430,
											"end": 22621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22470,
											"end": 22474,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22490,
											"end": 22510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 22508,
											"end": 22509,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22490,
											"end": 22510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 22490,
											"end": 22510,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 22490,
											"end": 22510,
											"name": "tag",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 22490,
											"end": 22510,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22485,
											"end": 22510,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22485,
											"end": 22510,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22524,
											"end": 22544,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 22542,
											"end": 22543,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22524,
											"end": 22544,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 22524,
											"end": 22544,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 22524,
											"end": 22544,
											"name": "tag",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 22524,
											"end": 22544,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22519,
											"end": 22544,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 22519,
											"end": 22544,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22563,
											"end": 22564,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22560,
											"end": 22561,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22557,
											"end": 22565,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 22554,
											"end": 22588,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 22554,
											"end": 22588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 22554,
											"end": 22588,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 22568,
											"end": 22586,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 22568,
											"end": 22586,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 22568,
											"end": 22586,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 22568,
											"end": 22586,
											"name": "tag",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 22568,
											"end": 22586,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22554,
											"end": 22588,
											"name": "tag",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 22554,
											"end": 22588,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22613,
											"end": 22614,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22610,
											"end": 22611,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22606,
											"end": 22615,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 22598,
											"end": 22615,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22598,
											"end": 22615,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22430,
											"end": 22621,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 22430,
											"end": 22621,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22430,
											"end": 22621,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22430,
											"end": 22621,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22430,
											"end": 22621,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 22627,
											"end": 22723,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 22627,
											"end": 22723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22664,
											"end": 22671,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22693,
											"end": 22717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 22711,
											"end": 22716,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22693,
											"end": 22717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 22693,
											"end": 22717,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 22693,
											"end": 22717,
											"name": "tag",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 22693,
											"end": 22717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22682,
											"end": 22717,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22682,
											"end": 22717,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22627,
											"end": 22723,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22627,
											"end": 22723,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22627,
											"end": 22723,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22627,
											"end": 22723,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 22729,
											"end": 22819,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 22729,
											"end": 22819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22763,
											"end": 22770,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22806,
											"end": 22811,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22799,
											"end": 22812,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 22792,
											"end": 22813,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 22781,
											"end": 22813,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22781,
											"end": 22813,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22729,
											"end": 22819,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22729,
											"end": 22819,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22729,
											"end": 22819,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22729,
											"end": 22819,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 22825,
											"end": 22974,
											"name": "tag",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 22825,
											"end": 22974,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22861,
											"end": 22868,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22901,
											"end": 22967,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22894,
											"end": 22899,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22890,
											"end": 22968,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 22879,
											"end": 22968,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22879,
											"end": 22968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22825,
											"end": 22974,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22825,
											"end": 22974,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22825,
											"end": 22974,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22825,
											"end": 22974,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 22980,
											"end": 23098,
											"name": "tag",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 22980,
											"end": 23098,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23017,
											"end": 23024,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23057,
											"end": 23091,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23050,
											"end": 23055,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23046,
											"end": 23092,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 23035,
											"end": 23092,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23035,
											"end": 23092,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22980,
											"end": 23098,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22980,
											"end": 23098,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22980,
											"end": 23098,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22980,
											"end": 23098,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 23104,
											"end": 23230,
											"name": "tag",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 23104,
											"end": 23230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23141,
											"end": 23148,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23181,
											"end": 23223,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23174,
											"end": 23179,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23170,
											"end": 23224,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 23159,
											"end": 23224,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23159,
											"end": 23224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23104,
											"end": 23230,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23104,
											"end": 23230,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23104,
											"end": 23230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23104,
											"end": 23230,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 23236,
											"end": 23313,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 23236,
											"end": 23313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23273,
											"end": 23280,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23302,
											"end": 23307,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23291,
											"end": 23307,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23291,
											"end": 23307,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23236,
											"end": 23313,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23236,
											"end": 23313,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23236,
											"end": 23313,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23236,
											"end": 23313,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 23319,
											"end": 23473,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 23319,
											"end": 23473,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23403,
											"end": 23409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23398,
											"end": 23401,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23393,
											"end": 23396,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23380,
											"end": 23410,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 23465,
											"end": 23466,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23456,
											"end": 23462,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23451,
											"end": 23454,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23447,
											"end": 23463,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23440,
											"end": 23467,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23319,
											"end": 23473,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23319,
											"end": 23473,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23319,
											"end": 23473,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23319,
											"end": 23473,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 23479,
											"end": 23786,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 23479,
											"end": 23786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23547,
											"end": 23548,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23557,
											"end": 23670,
											"name": "tag",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 23557,
											"end": 23670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23571,
											"end": 23577,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23568,
											"end": 23569,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23565,
											"end": 23578,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 23557,
											"end": 23670,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 23557,
											"end": 23670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 23557,
											"end": 23670,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 23656,
											"end": 23657,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 23651,
											"end": 23654,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23647,
											"end": 23658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23641,
											"end": 23659,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 23637,
											"end": 23638,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23632,
											"end": 23635,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23628,
											"end": 23639,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23621,
											"end": 23660,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23593,
											"end": 23595,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23590,
											"end": 23591,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23586,
											"end": 23596,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23581,
											"end": 23596,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23581,
											"end": 23596,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23557,
											"end": 23670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 23557,
											"end": 23670,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23557,
											"end": 23670,
											"name": "tag",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 23557,
											"end": 23670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23688,
											"end": 23694,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23685,
											"end": 23686,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23682,
											"end": 23695,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 23679,
											"end": 23780,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 23679,
											"end": 23780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 23679,
											"end": 23780,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 23768,
											"end": 23769,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23759,
											"end": 23765,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23754,
											"end": 23757,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23750,
											"end": 23766,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23743,
											"end": 23770,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23679,
											"end": 23780,
											"name": "tag",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 23679,
											"end": 23780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23528,
											"end": 23786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23479,
											"end": 23786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23479,
											"end": 23786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23479,
											"end": 23786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23479,
											"end": 23786,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 23792,
											"end": 23963,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 23792,
											"end": 23963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23831,
											"end": 23834,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23854,
											"end": 23878,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 23872,
											"end": 23877,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23854,
											"end": 23878,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 23854,
											"end": 23878,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 23854,
											"end": 23878,
											"name": "tag",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 23854,
											"end": 23878,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23845,
											"end": 23878,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23845,
											"end": 23878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23900,
											"end": 23904,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23893,
											"end": 23898,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23890,
											"end": 23905,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 23887,
											"end": 23928,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 23887,
											"end": 23928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 23887,
											"end": 23928,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 23908,
											"end": 23926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 23908,
											"end": 23926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 23908,
											"end": 23926,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 23908,
											"end": 23926,
											"name": "tag",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 23908,
											"end": 23926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23887,
											"end": 23928,
											"name": "tag",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 23887,
											"end": 23928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23955,
											"end": 23956,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 23948,
											"end": 23953,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23944,
											"end": 23957,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 23937,
											"end": 23957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23937,
											"end": 23957,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23792,
											"end": 23963,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23792,
											"end": 23963,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23792,
											"end": 23963,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23792,
											"end": 23963,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 23969,
											"end": 24289,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 23969,
											"end": 24289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24013,
											"end": 24019,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24050,
											"end": 24051,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 24044,
											"end": 24048,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24040,
											"end": 24052,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 24030,
											"end": 24052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24030,
											"end": 24052,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24097,
											"end": 24098,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 24091,
											"end": 24095,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24087,
											"end": 24099,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 24118,
											"end": 24136,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 24108,
											"end": 24189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 24108,
											"end": 24189,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 24174,
											"end": 24178,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 24166,
											"end": 24172,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24162,
											"end": 24179,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 24152,
											"end": 24179,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24152,
											"end": 24179,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24108,
											"end": 24189,
											"name": "tag",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 24108,
											"end": 24189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24236,
											"end": 24238,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24228,
											"end": 24234,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24225,
											"end": 24239,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 24205,
											"end": 24223,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24202,
											"end": 24240,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 24199,
											"end": 24283,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 24199,
											"end": 24283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 24199,
											"end": 24283,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 24255,
											"end": 24273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 24255,
											"end": 24273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 24255,
											"end": 24273,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 24255,
											"end": 24273,
											"name": "tag",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 24255,
											"end": 24273,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24199,
											"end": 24283,
											"name": "tag",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 24199,
											"end": 24283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24020,
											"end": 24289,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23969,
											"end": 24289,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23969,
											"end": 24289,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23969,
											"end": 24289,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23969,
											"end": 24289,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 24295,
											"end": 24576,
											"name": "tag",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 24295,
											"end": 24576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24378,
											"end": 24405,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 24400,
											"end": 24404,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24378,
											"end": 24405,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 24378,
											"end": 24405,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 24378,
											"end": 24405,
											"name": "tag",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 24378,
											"end": 24405,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24370,
											"end": 24376,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24366,
											"end": 24406,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24508,
											"end": 24514,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24496,
											"end": 24506,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24493,
											"end": 24515,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 24472,
											"end": 24490,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24460,
											"end": 24470,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24457,
											"end": 24491,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 24454,
											"end": 24516,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 24451,
											"end": 24539,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 24451,
											"end": 24539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 24451,
											"end": 24539,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 24519,
											"end": 24537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 24519,
											"end": 24537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 24519,
											"end": 24537,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 24519,
											"end": 24537,
											"name": "tag",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 24519,
											"end": 24537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24451,
											"end": 24539,
											"name": "tag",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 24451,
											"end": 24539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24559,
											"end": 24569,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 24555,
											"end": 24557,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 24548,
											"end": 24570,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24338,
											"end": 24576,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24295,
											"end": 24576,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24295,
											"end": 24576,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24295,
											"end": 24576,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 24582,
											"end": 24815,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 24582,
											"end": 24815,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24621,
											"end": 24624,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24644,
											"end": 24668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 24662,
											"end": 24667,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24644,
											"end": 24668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 24644,
											"end": 24668,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 24644,
											"end": 24668,
											"name": "tag",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 24644,
											"end": 24668,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24635,
											"end": 24668,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24635,
											"end": 24668,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24690,
											"end": 24756,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24683,
											"end": 24688,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24680,
											"end": 24757,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 24677,
											"end": 24780,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 24677,
											"end": 24780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 24677,
											"end": 24780,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 24760,
											"end": 24778,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 24760,
											"end": 24778,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 24760,
											"end": 24778,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 24760,
											"end": 24778,
											"name": "tag",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 24760,
											"end": 24778,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24677,
											"end": 24780,
											"name": "tag",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 24677,
											"end": 24780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24807,
											"end": 24808,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 24800,
											"end": 24805,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24796,
											"end": 24809,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24789,
											"end": 24809,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24789,
											"end": 24809,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24582,
											"end": 24815,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24582,
											"end": 24815,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24582,
											"end": 24815,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24582,
											"end": 24815,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 24821,
											"end": 25001,
											"name": "tag",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 24821,
											"end": 25001,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24869,
											"end": 24946,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24866,
											"end": 24867,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24859,
											"end": 24947,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24966,
											"end": 24970,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 24963,
											"end": 24964,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 24956,
											"end": 24971,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24990,
											"end": 24994,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 24987,
											"end": 24988,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24980,
											"end": 24995,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 25007,
											"end": 25187,
											"name": "tag",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 25007,
											"end": 25187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25055,
											"end": 25132,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25052,
											"end": 25053,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25045,
											"end": 25133,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25152,
											"end": 25156,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 25149,
											"end": 25150,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 25142,
											"end": 25157,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25176,
											"end": 25180,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 25173,
											"end": 25174,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25166,
											"end": 25181,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 25193,
											"end": 25373,
											"name": "tag",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 25193,
											"end": 25373,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25241,
											"end": 25318,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25238,
											"end": 25239,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25231,
											"end": 25319,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25338,
											"end": 25342,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 25335,
											"end": 25336,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 25328,
											"end": 25343,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25362,
											"end": 25366,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 25359,
											"end": 25360,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25352,
											"end": 25367,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 25379,
											"end": 25496,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 25379,
											"end": 25496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25488,
											"end": 25489,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25485,
											"end": 25486,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 25478,
											"end": 25490,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 25502,
											"end": 25619,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 25502,
											"end": 25619,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25611,
											"end": 25612,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25608,
											"end": 25609,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 25601,
											"end": 25613,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 25625,
											"end": 25742,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 25625,
											"end": 25742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25734,
											"end": 25735,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25731,
											"end": 25732,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 25724,
											"end": 25736,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 25748,
											"end": 25865,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 25748,
											"end": 25865,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25857,
											"end": 25858,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25854,
											"end": 25855,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 25847,
											"end": 25859,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 25871,
											"end": 25973,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 25871,
											"end": 25973,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25912,
											"end": 25918,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25963,
											"end": 25965,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 25959,
											"end": 25966,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 25954,
											"end": 25956,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 25947,
											"end": 25952,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25943,
											"end": 25957,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25939,
											"end": 25967,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 25929,
											"end": 25967,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25929,
											"end": 25967,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25871,
											"end": 25973,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25871,
											"end": 25973,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25871,
											"end": 25973,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25871,
											"end": 25973,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 25979,
											"end": 26200,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 25979,
											"end": 26200,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26119,
											"end": 26153,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A206F776E657220696E646578206F7574206F6620626F756E"
										},
										{
											"begin": 26115,
											"end": 26116,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26107,
											"end": 26113,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26103,
											"end": 26117,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26096,
											"end": 26154,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 26188,
											"end": 26192,
											"name": "PUSH",
											"source": 10,
											"value": "6473000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26183,
											"end": 26185,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 26175,
											"end": 26181,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26171,
											"end": 26186,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26164,
											"end": 26193,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25979,
											"end": 26200,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25979,
											"end": 26200,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 26206,
											"end": 26435,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 26206,
											"end": 26435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26346,
											"end": 26380,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A206F776E657220717565727920666F72206E6F6E65786973"
										},
										{
											"begin": 26342,
											"end": 26343,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26334,
											"end": 26340,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26330,
											"end": 26344,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26323,
											"end": 26381,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 26415,
											"end": 26427,
											"name": "PUSH",
											"source": 10,
											"value": "74656E7420746F6B656E00000000000000000000000000000000000000000000"
										},
										{
											"begin": 26410,
											"end": 26412,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 26402,
											"end": 26408,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26398,
											"end": 26413,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26391,
											"end": 26428,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 26206,
											"end": 26435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26206,
											"end": 26435,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 26441,
											"end": 26663,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 26441,
											"end": 26663,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26581,
											"end": 26615,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A20676C6F62616C20696E646578206F7574206F6620626F75"
										},
										{
											"begin": 26577,
											"end": 26578,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26569,
											"end": 26575,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26565,
											"end": 26579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26558,
											"end": 26616,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 26650,
											"end": 26655,
											"name": "PUSH",
											"source": 10,
											"value": "6E64730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26645,
											"end": 26647,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 26637,
											"end": 26643,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26633,
											"end": 26648,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26626,
											"end": 26656,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 26441,
											"end": 26663,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26441,
											"end": 26663,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 26669,
											"end": 26893,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 26669,
											"end": 26893,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26809,
											"end": 26843,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 26805,
											"end": 26806,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26797,
											"end": 26803,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26793,
											"end": 26807,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26786,
											"end": 26844,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 26878,
											"end": 26885,
											"name": "PUSH",
											"source": 10,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26873,
											"end": 26875,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 26865,
											"end": 26871,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26861,
											"end": 26876,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26854,
											"end": 26886,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 26669,
											"end": 26893,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26669,
											"end": 26893,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 26899,
											"end": 27143,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 26899,
											"end": 27143,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27039,
											"end": 27073,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A20617070726F76652063616C6C6572206973206E6F74206F"
										},
										{
											"begin": 27035,
											"end": 27036,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27027,
											"end": 27033,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27023,
											"end": 27037,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27016,
											"end": 27074,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 27108,
											"end": 27135,
											"name": "PUSH",
											"source": 10,
											"value": "776E6572206E6F7220617070726F76656420666F7220616C6C00000000000000"
										},
										{
											"begin": 27103,
											"end": 27105,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 27095,
											"end": 27101,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27091,
											"end": 27106,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27084,
											"end": 27136,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 26899,
											"end": 27143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26899,
											"end": 27143,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 27149,
											"end": 27379,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 27149,
											"end": 27379,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27289,
											"end": 27323,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 27285,
											"end": 27286,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27277,
											"end": 27283,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27273,
											"end": 27287,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27266,
											"end": 27324,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 27358,
											"end": 27371,
											"name": "PUSH",
											"source": 10,
											"value": "65726F2061646472657373000000000000000000000000000000000000000000"
										},
										{
											"begin": 27353,
											"end": 27355,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 27345,
											"end": 27351,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27341,
											"end": 27356,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27334,
											"end": 27372,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 27149,
											"end": 27379,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27149,
											"end": 27379,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 27385,
											"end": 27610,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 27385,
											"end": 27610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27525,
											"end": 27559,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A207472616E736665722066726F6D20696E636F7272656374"
										},
										{
											"begin": 27521,
											"end": 27522,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27513,
											"end": 27519,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27509,
											"end": 27523,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27502,
											"end": 27560,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 27594,
											"end": 27602,
											"name": "PUSH",
											"source": 10,
											"value": "206F776E65720000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27589,
											"end": 27591,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 27581,
											"end": 27587,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27577,
											"end": 27592,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27570,
											"end": 27603,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 27385,
											"end": 27610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27385,
											"end": 27610,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 27616,
											"end": 27850,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 27616,
											"end": 27850,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27756,
											"end": 27790,
											"name": "PUSH",
											"source": 10,
											"value": "4552433732314D657461646174613A2055524920717565727920666F72206E6F"
										},
										{
											"begin": 27752,
											"end": 27753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27744,
											"end": 27750,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27740,
											"end": 27754,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27733,
											"end": 27791,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 27825,
											"end": 27842,
											"name": "PUSH",
											"source": 10,
											"value": "6E6578697374656E7420746F6B656E0000000000000000000000000000000000"
										},
										{
											"begin": 27820,
											"end": 27822,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 27812,
											"end": 27818,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27808,
											"end": 27823,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27801,
											"end": 27843,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 27616,
											"end": 27850,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27616,
											"end": 27850,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 27856,
											"end": 28032,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 27856,
											"end": 28032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27996,
											"end": 28024,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A20617070726F766520746F2063616C6C6572000000000000"
										},
										{
											"begin": 27992,
											"end": 27993,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27984,
											"end": 27990,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27980,
											"end": 27994,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27973,
											"end": 28025,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 27856,
											"end": 28032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27856,
											"end": 28032,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 28038,
											"end": 28275,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 28038,
											"end": 28275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28178,
											"end": 28212,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 28174,
											"end": 28175,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28166,
											"end": 28172,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28162,
											"end": 28176,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28155,
											"end": 28213,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 28247,
											"end": 28267,
											"name": "PUSH",
											"source": 10,
											"value": "6F776E6572206E6F7220617070726F7665640000000000000000000000000000"
										},
										{
											"begin": 28242,
											"end": 28244,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 28234,
											"end": 28240,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28230,
											"end": 28245,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28223,
											"end": 28268,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 28038,
											"end": 28275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28038,
											"end": 28275,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 28281,
											"end": 28502,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 28281,
											"end": 28502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28421,
											"end": 28455,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A20617070726F76616C20746F2063757272656E74206F776E"
										},
										{
											"begin": 28417,
											"end": 28418,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28409,
											"end": 28415,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28405,
											"end": 28419,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28398,
											"end": 28456,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 28490,
											"end": 28494,
											"name": "PUSH",
											"source": 10,
											"value": "6572000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28485,
											"end": 28487,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 28477,
											"end": 28483,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28473,
											"end": 28488,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28466,
											"end": 28495,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 28281,
											"end": 28502,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28281,
											"end": 28502,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 28508,
											"end": 28746,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 28508,
											"end": 28746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28648,
											"end": 28682,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A207472616E7366657220746F206E6F6E2045524337323152"
										},
										{
											"begin": 28644,
											"end": 28645,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28636,
											"end": 28642,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28632,
											"end": 28646,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28625,
											"end": 28683,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 28717,
											"end": 28738,
											"name": "PUSH",
											"source": 10,
											"value": "6563656976657220696D706C656D656E74657200000000000000000000000000"
										},
										{
											"begin": 28712,
											"end": 28714,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 28704,
											"end": 28710,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28700,
											"end": 28715,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28693,
											"end": 28739,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 28508,
											"end": 28746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28508,
											"end": 28746,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 28752,
											"end": 28985,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 28752,
											"end": 28985,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28892,
											"end": 28926,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A20756E61626C6520746F2067657420746F6B656E206F6620"
										},
										{
											"begin": 28888,
											"end": 28889,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28880,
											"end": 28886,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28876,
											"end": 28890,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28869,
											"end": 28927,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 28961,
											"end": 28977,
											"name": "PUSH",
											"source": 10,
											"value": "6F776E657220627920696E646578000000000000000000000000000000000000"
										},
										{
											"begin": 28956,
											"end": 28958,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 28948,
											"end": 28954,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28944,
											"end": 28959,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28937,
											"end": 28978,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 28752,
											"end": 28985,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28752,
											"end": 28985,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 28991,
											"end": 29225,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 28991,
											"end": 29225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29131,
											"end": 29165,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A20756E61626C6520746F2064657465726D696E6520746865"
										},
										{
											"begin": 29127,
											"end": 29128,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29119,
											"end": 29125,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29115,
											"end": 29129,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29108,
											"end": 29166,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 29200,
											"end": 29217,
											"name": "PUSH",
											"source": 10,
											"value": "206F776E6572206F6620746F6B656E0000000000000000000000000000000000"
										},
										{
											"begin": 29195,
											"end": 29197,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 29187,
											"end": 29193,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29183,
											"end": 29198,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29176,
											"end": 29218,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 28991,
											"end": 29225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28991,
											"end": 29225,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 29231,
											"end": 29463,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 29231,
											"end": 29463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29371,
											"end": 29405,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A20617070726F76656420717565727920666F72206E6F6E65"
										},
										{
											"begin": 29367,
											"end": 29368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29359,
											"end": 29365,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29355,
											"end": 29369,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29348,
											"end": 29406,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 29440,
											"end": 29455,
											"name": "PUSH",
											"source": 10,
											"value": "78697374656E7420746F6B656E00000000000000000000000000000000000000"
										},
										{
											"begin": 29435,
											"end": 29437,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 29427,
											"end": 29433,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29423,
											"end": 29438,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29416,
											"end": 29456,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 29231,
											"end": 29463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29231,
											"end": 29463,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 29469,
											"end": 29591,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 29469,
											"end": 29591,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29542,
											"end": 29566,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 29560,
											"end": 29565,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29542,
											"end": 29566,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 29542,
											"end": 29566,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 29542,
											"end": 29566,
											"name": "tag",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 29542,
											"end": 29566,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29535,
											"end": 29540,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29532,
											"end": 29567,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 29522,
											"end": 29585,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 29522,
											"end": 29585,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 29581,
											"end": 29582,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29578,
											"end": 29579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 29571,
											"end": 29583,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 29522,
											"end": 29585,
											"name": "tag",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 29522,
											"end": 29585,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29469,
											"end": 29591,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29469,
											"end": 29591,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 29597,
											"end": 29713,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 29597,
											"end": 29713,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29667,
											"end": 29688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 29682,
											"end": 29687,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29667,
											"end": 29688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 29667,
											"end": 29688,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 29667,
											"end": 29688,
											"name": "tag",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 29667,
											"end": 29688,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29660,
											"end": 29665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29657,
											"end": 29689,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 29647,
											"end": 29707,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 29647,
											"end": 29707,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 29703,
											"end": 29704,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29700,
											"end": 29701,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 29693,
											"end": 29705,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 29647,
											"end": 29707,
											"name": "tag",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 29647,
											"end": 29707,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29597,
											"end": 29713,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29597,
											"end": 29713,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 29719,
											"end": 29839,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 29719,
											"end": 29839,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29791,
											"end": 29814,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 29808,
											"end": 29813,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29791,
											"end": 29814,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 29791,
											"end": 29814,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 29791,
											"end": 29814,
											"name": "tag",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 29791,
											"end": 29814,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29784,
											"end": 29789,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29781,
											"end": 29815,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 29771,
											"end": 29833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "606"
										},
										{
											"begin": 29771,
											"end": 29833,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 29829,
											"end": 29830,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29826,
											"end": 29827,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 29819,
											"end": 29831,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 29771,
											"end": 29833,
											"name": "tag",
											"source": 10,
											"value": "606"
										},
										{
											"begin": 29771,
											"end": 29833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29719,
											"end": 29839,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29719,
											"end": 29839,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 29845,
											"end": 29967,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 29845,
											"end": 29967,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29918,
											"end": 29942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "608"
										},
										{
											"begin": 29936,
											"end": 29941,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29918,
											"end": 29942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 29918,
											"end": 29942,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 29918,
											"end": 29942,
											"name": "tag",
											"source": 10,
											"value": "608"
										},
										{
											"begin": 29918,
											"end": 29942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29911,
											"end": 29916,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29908,
											"end": 29943,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 29898,
											"end": 29961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 29898,
											"end": 29961,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 29957,
											"end": 29958,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29954,
											"end": 29955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 29947,
											"end": 29959,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 29898,
											"end": 29961,
											"name": "tag",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 29898,
											"end": 29961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29845,
											"end": 29967,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29845,
											"end": 29967,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"nextOwnerToExplicitlySet()": "d7224ba0",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"maxBatchSize_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collectionSize_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextOwnerToExplicitlySet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata and Enumerable extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..). Assumes the number of issuable tokens (collection size) is capped and fits in a uint128. Does not support burning tokens to address(0).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"`maxBatchSize` refers to how much a minter can mint at a time. `collectionSize_` refers to how many tokens are in the collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}. This read function is O(collectionSize). If calling from a separate contract, be sure to test gas first. It may also degrade with extremely large collection sizes (e.g >> 10000), test for your use case.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.3.3/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e7820bcf567e6892d937c3cb10db263a4042e446799bca602535868d822384e\",\"dweb:/ipfs/QmPG2oeDjKncqsEeyYGjAN7CwAJmMgHterXGGnpzhha4z7\"]},\"@openzeppelin/contracts@4.3.3/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]},\"@openzeppelin/contracts@4.3.3/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xa69205e5009601cf13be78b1e2f500e1e3b1d8012f22d966e63975273f602038\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d919a0061e43f9878f6171b7f853cb92093805cd1160858c1884195a639b40a0\",\"dweb:/ipfs/QmRZsS3EYuLp75nBym1QQ4y6aQXGew75wSbv1uwqkvouUK\"]},\"@openzeppelin/contracts@4.3.3/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xd32fb7f530a914b1083d10a6bed3a586f2451952fec04fe542bcc670a82f7ba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af63ab940a34687c45f0ad84960b048fc5f49330c92ccb422db7822a444733b9\",\"dweb:/ipfs/QmUShaQEu8HS1GjDnsMJQ8jkZEBrecn6NuDZ3pfjY1gVck\"]},\"@openzeppelin/contracts@4.3.3/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"@openzeppelin/contracts@4.3.3/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"@openzeppelin/contracts@4.3.3/utils/Strings.sol\":{\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d636ba90bbbeed04a1ea7fe9ec2466757e30fd38ba2ca173636dbf69a518735e\",\"dweb:/ipfs/QmQwCB2BHnEuYR22PYt9HkpbgeFDhq4rHmaYqAZbX3WRC7\"]},\"@openzeppelin/contracts@4.3.3/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts@4.3.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"contracts/ERC721A.sol\":{\"keccak256\":\"0x9a876a7789f0d44e10920209f6c857a22d5a0fbbe27d66bb866ad3e64fd81ed0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b6750b57295241b380c90aaa02b464f63040a8c650907c2794b163758d0ebc9\",\"dweb:/ipfs/QmcLsKzUfYfBWB5UuA2UmjzGqXjC6ga2tMUn32mXXBGm55\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 789,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 795,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 797,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 802,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_ownerships",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_struct(TokenOwnership)781_storage)"
							},
							{
								"astId": 807,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_addressData",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(AddressData)786_storage)"
							},
							{
								"astId": 811,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 817,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1738,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "nextOwnerToExplicitlySet",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_struct(AddressData)786_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct ERC721A.AddressData)",
								"numberOfBytes": "32",
								"value": "t_struct(AddressData)786_storage"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(TokenOwnership)781_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenOwnership)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenOwnership)781_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressData)786_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.AddressData",
								"members": [
									{
										"astId": 783,
										"contract": "contracts/ERC721A.sol:ERC721A",
										"label": "balance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint128"
									},
									{
										"astId": 785,
										"contract": "contracts/ERC721A.sol:ERC721A",
										"label": "numberMinted",
										"offset": 16,
										"slot": "0",
										"type": "t_uint128"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(TokenOwnership)781_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenOwnership",
								"members": [
									{
										"astId": 778,
										"contract": "contracts/ERC721A.sol:ERC721A",
										"label": "addr",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 780,
										"contract": "contracts/ERC721A.sol:ERC721A",
										"label": "startTimestamp",
										"offset": 20,
										"slot": "0",
										"type": "t_uint64"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@4.3.3/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.3.3/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							749
						],
						"IERC721": [
							115
						]
					},
					"id": 116,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.3.3/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 116,
							"sourceUnit": 750,
							"src": "58:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 749,
										"src": "196:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "196:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "107:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 115,
							"linearizedBaseContracts": [
								115,
								749
							],
							"name": "IERC721",
							"nameLocation": "185:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "210:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 14,
									"name": "Transfer",
									"nameLocation": "309:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "334:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "318:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "318:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "356:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "340:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "376:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "360:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "360:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "317:67:0"
									},
									"src": "303:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "391:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 23,
									"name": "Approval",
									"nameLocation": "496:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "521:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "505:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "544:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "528:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "528:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "570:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "554:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:74:0"
									},
									"src": "490:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "585:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 32,
									"name": "ApprovalForAll",
									"nameLocation": "713:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "744:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "728:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "767:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "751:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "751:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "782:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "777:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "777:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:64:0"
									},
									"src": "707:85:0"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "798:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "888:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "906:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "898:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "897:15:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "944:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "936:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "936:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "935:17:0"
									},
									"scope": 115,
									"src": "879:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "959:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1104:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1120:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1112:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1111:17:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1160:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1152:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1152:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1151:15:0"
									},
									"scope": 115,
									"src": "1095:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1173:690:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1877:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1911:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1903:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1933:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1925:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1953:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1945:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:73:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1975:0:0"
									},
									"scope": 115,
									"src": "1868:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1982:504:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2500:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2530:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "2522:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2552:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "2544:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2572:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "2564:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2564:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2512:73:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2594:0:0"
									},
									"scope": 115,
									"src": "2491:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "2601:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3067:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3083:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "3075:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3075:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3095:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "3087:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3087:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:29:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3112:0:0"
									},
									"scope": 115,
									"src": "3058:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "3119:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 84,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3272:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3292:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3284:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3284:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3283:17:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3332:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3324:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3324:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3323:18:0"
									},
									"scope": 115,
									"src": "3263:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3348:309:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 92,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3671:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3697:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3689:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3689:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "3712:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3707:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 88,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3707:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3688:34:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3731:0:0"
									},
									"scope": 115,
									"src": "3662:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3738:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3890:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3915:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "3907:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3907:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3930:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "3922:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3922:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3906:33:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "3963:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 99,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3963:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3962:6:0"
									},
									"scope": 115,
									"src": "3881:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "3975:556:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4545:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4579:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4571:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4571:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4601:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4593:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4593:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4621:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4613:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4653:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4638:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 110,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4638:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4561:102:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4672:0:0"
									},
									"scope": 115,
									"src": "4536:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 116,
							"src": "175:4500:0",
							"usedErrors": []
						}
					],
					"src": "33:4643:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@4.3.3/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.3.3/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							133
						]
					},
					"id": 134,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 117,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 118,
								"nodeType": "StructuredDocumentation",
								"src": "58:152:1",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 133,
							"linearizedBaseContracts": [
								133
							],
							"name": "IERC721Receiver",
							"nameLocation": "221:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "243:485:1",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "742:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "776:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "768:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "802:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "794:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "824:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "816:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "856:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "841:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "841:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:108:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "885:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 129,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "885:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "884:8:1"
									},
									"scope": 133,
									"src": "733:160:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 134,
							"src": "211:684:1",
							"usedErrors": []
						}
					],
					"src": "33:863:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@4.3.3/token/ERC721/extensions/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.3.3/token/ERC721/extensions/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC165": [
							749
						],
						"IERC721": [
							115
						],
						"IERC721Enumerable": [
							164
						]
					},
					"id": 165,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 135,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.3.3/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 165,
							"sourceUnit": 116,
							"src": "58:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 138,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 115,
										"src": "252:7:2"
									},
									"id": 139,
									"nodeType": "InheritanceSpecifier",
									"src": "252:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "84:136:2",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 164,
							"linearizedBaseContracts": [
								164,
								115,
								749
							],
							"name": "IERC721Enumerable",
							"nameLocation": "231:17:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "266:82:2",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "362:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "373:2:2"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "399:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "399:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "398:9:2"
									},
									"scope": 164,
									"src": "353:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "414:171:2",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "599:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "619:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "642:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "634:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "618:30:2"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "680:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "672:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:17:2"
									},
									"scope": 164,
									"src": "590:99:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "695:164:2",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "873:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "894:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "886:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "885:15:2"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "924:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:9:2"
									},
									"scope": 164,
									"src": "864:69:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 165,
							"src": "221:714:2",
							"usedErrors": []
						}
					],
					"src": "33:903:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@4.3.3/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.3.3/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							749
						],
						"IERC721": [
							115
						],
						"IERC721Metadata": [
							191
						]
					},
					"id": 192,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 166,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.3.3/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 167,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 192,
							"sourceUnit": 116,
							"src": "58:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 169,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 115,
										"src": "247:7:3"
									},
									"id": 170,
									"nodeType": "InheritanceSpecifier",
									"src": "247:7:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 168,
								"nodeType": "StructuredDocumentation",
								"src": "84:133:3",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 191,
							"linearizedBaseContracts": [
								191,
								115,
								749
							],
							"name": "IERC721Metadata",
							"nameLocation": "228:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "261:58:3",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "333:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "337:2:3"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "363:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "363:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "362:15:3"
									},
									"scope": 191,
									"src": "324:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "384:60:3",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "458:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "464:2:3"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "490:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 179,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "490:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:15:3"
									},
									"scope": 191,
									"src": "449:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "511:90:3",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "615:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "632:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "624:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:17:3"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "664:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 187,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "664:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "663:15:3"
									},
									"scope": 191,
									"src": "606:73:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 192,
							"src": "218:463:3",
							"usedErrors": []
						}
					],
					"src": "33:649:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@4.3.3/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.3.3/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							488
						]
					},
					"id": 489,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 193,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 194,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 488,
							"linearizedBaseContracts": [
								488
							],
							"name": "Address",
							"nameLocation": "134:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "784:311:4",
										"statements": [
											{
												"assignments": [
													203
												],
												"declarations": [
													{
														"constant": false,
														"id": 203,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "989:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 210,
														"src": "981:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 202,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 204,
												"nodeType": "VariableDeclarationStatement",
												"src": "981:12:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1012:52:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1026:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1046:7:4"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1034:11:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1034:20:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1026:4:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 197,
														"isOffset": false,
														"isSlot": false,
														"src": "1046:7:4",
														"valueSize": 1
													},
													{
														"declaration": 203,
														"isOffset": false,
														"isSlot": false,
														"src": "1026:4:4",
														"valueSize": 1
													}
												],
												"id": 205,
												"nodeType": "InlineAssembly",
												"src": "1003:61:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 206,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "1080:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1087:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1080:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 201,
												"id": 209,
												"nodeType": "Return",
												"src": "1073:15:4"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "148:565:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "727:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "746:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "738:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:17:4"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "778:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 199,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:4"
									},
									"scope": 488,
									"src": "718:377:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "2083:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 222,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2109:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$488",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$488",
																				"typeString": "library Address"
																			}
																		],
																		"id": 221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2101:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 220,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2101:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2101:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2101:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 225,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "2126:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2101:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2134:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 219,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2093:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2093:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "2093:73:4"
											},
											{
												"assignments": [
													231,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 231,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2183:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 244,
														"src": "2178:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 230,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2178:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 238,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2226:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 232,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "2196:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2196:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 234,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "2218:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2196:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2196:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 240,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "2247:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2256:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 239,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2239:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2239:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "2239:78:4"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1101:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2021:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2047:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "2031:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2031:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2066:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "2058:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2058:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2030:43:4"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2083:0:4"
									},
									"scope": 488,
									"src": "2012:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "3155:84:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 256,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3185:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 257,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "3193:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3199:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 255,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															262,
															282
														],
														"referencedDeclaration": 282,
														"src": "3172:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3172:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 254,
												"id": 260,
												"nodeType": "Return",
												"src": "3165:67:4"
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "2330:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3075:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3096:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3088:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3117:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3104:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 249,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3104:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3087:35:4"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3141:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 252,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3141:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:14:4"
									},
									"scope": 488,
									"src": "3066:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "3608:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 275,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "3647:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 276,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "3655:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3661:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 278,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "3664:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 274,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															302,
															352
														],
														"referencedDeclaration": 352,
														"src": "3625:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3625:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 273,
												"id": 280,
												"nodeType": "Return",
												"src": "3618:59:4"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "3245:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3470:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3500:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "3492:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3529:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "3516:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 266,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3516:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3557:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "3543:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 268,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3543:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:93:4"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "3594:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 271,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3594:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3593:14:4"
									},
									"scope": 488,
									"src": "3461:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4189:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 295,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "4228:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "4236:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 297,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4242:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4249:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 294,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															302,
															352
														],
														"referencedDeclaration": 352,
														"src": "4206:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4206:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 293,
												"id": 300,
												"nodeType": "Return",
												"src": "4199:94:4"
											}
										]
									},
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "3690:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4055:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4094:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4086:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4123:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4110:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 286,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4110:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4145:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4137:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4137:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4076:80:4"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4175:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 291,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4175:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4174:14:4"
									},
									"scope": 488,
									"src": "4046:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "4727:320:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 319,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4753:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$488",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$488",
																				"typeString": "library Address"
																			}
																		],
																		"id": 318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4745:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 317,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4745:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4745:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4745:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 322,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "4770:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4745:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4777:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4737:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4737:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "4737:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 329,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "4847:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 328,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "4836:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4836:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4856:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 327,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4828:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4828:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "4828:60:4"
											},
											{
												"assignments": [
													335,
													337
												],
												"declarations": [
													{
														"constant": false,
														"id": 335,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4905:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 351,
														"src": "4900:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 334,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4900:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 337,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4927:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 351,
														"src": "4914:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 336,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4914:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 344,
												"initialValue": {
													"arguments": [
														{
															"id": 342,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4967:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 338,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "4941:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4941:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 340,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "4960:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4941:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4941:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4899:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 346,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "5006:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 347,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5015:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 348,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "5027:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 345,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "4989:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4989:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 315,
												"id": 350,
												"nodeType": "Return",
												"src": "4982:58:4"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4306:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4557:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4596:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "4588:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4588:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4625:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "4612:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 306,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4612:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4647:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "4639:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4676:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "4662:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 310,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4662:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:116:4"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "4713:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 313,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4713:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4712:14:4"
									},
									"scope": 488,
									"src": "4548:499:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "5324:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 363,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "5360:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 364,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "5368:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5374:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 362,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															369,
															404
														],
														"referencedDeclaration": 404,
														"src": "5341:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 361,
												"id": 367,
												"nodeType": "Return",
												"src": "5334:80:4"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "5053:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5233:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5260:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "5252:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5252:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5281:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "5268:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5268:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5251:35:4"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "5310:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 359,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5310:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5309:14:4"
									},
									"scope": 488,
									"src": "5224:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "5763:228:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 383,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "5792:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 382,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "5781:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5781:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5801:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 381,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5773:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5773:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "5773:67:4"
											},
											{
												"assignments": [
													389,
													391
												],
												"declarations": [
													{
														"constant": false,
														"id": 389,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5857:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 403,
														"src": "5852:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 388,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5852:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 391,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5879:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 403,
														"src": "5866:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 390,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5866:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 396,
												"initialValue": {
													"arguments": [
														{
															"id": 394,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "5911:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 392,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "5893:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5893:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5893:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5851:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 398,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "5950:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 399,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "5959:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 400,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "5971:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 397,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5933:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5933:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 380,
												"id": 402,
												"nodeType": "Return",
												"src": "5926:58:4"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "5427:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5614:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5650:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "5642:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5642:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5679:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "5666:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 373,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5666:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5707:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "5693:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 375,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5693:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5632:93:4"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "5749:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 378,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5749:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5748:14:4"
									},
									"scope": 488,
									"src": "5605:386:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 420,
										"nodeType": "Block",
										"src": "6267:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 415,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "6305:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "6313:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6319:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 414,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															421,
															456
														],
														"referencedDeclaration": 456,
														"src": "6284:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6284:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 413,
												"id": 419,
												"nodeType": "Return",
												"src": "6277:84:4"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "5997:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6179:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6208:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "6200:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6200:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6229:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "6216:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 408,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6216:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6199:35:4"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "6253:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 411,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6253:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6252:14:4"
									},
									"scope": 488,
									"src": "6170:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "6709:232:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 435,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "6738:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 434,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "6727:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6727:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6747:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6719:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6719:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "6719:69:4"
											},
											{
												"assignments": [
													441,
													443
												],
												"declarations": [
													{
														"constant": false,
														"id": 441,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6805:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 455,
														"src": "6800:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 440,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6800:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 443,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6827:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 455,
														"src": "6814:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 442,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6814:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 448,
												"initialValue": {
													"arguments": [
														{
															"id": 446,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "6861:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 444,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "6841:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6841:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6841:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6799:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 450,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "6900:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 451,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "6909:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 452,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "6921:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 449,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "6883:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6883:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 432,
												"id": 454,
												"nodeType": "Return",
												"src": "6876:58:4"
											}
										]
									},
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "6374:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6563:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6601:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "6593:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6630:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "6617:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 425,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6617:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6658:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "6644:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 427,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6644:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6583:93:4"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "6695:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 430,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6695:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6694:14:4"
									},
									"scope": 488,
									"src": "6554:387:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "7321:532:4",
										"statements": [
											{
												"condition": {
													"id": 468,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 459,
													"src": "7335:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 484,
													"nodeType": "Block",
													"src": "7392:455:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 472,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 461,
																		"src": "7476:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7476:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7496:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7476:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 482,
																"nodeType": "Block",
																"src": "7784:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 479,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 463,
																					"src": "7809:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 478,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7802:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7802:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 481,
																		"nodeType": "ExpressionStatement",
																		"src": "7802:20:4"
																	}
																]
															},
															"id": 483,
															"nodeType": "IfStatement",
															"src": "7472:365:4",
															"trueBody": {
																"id": 477,
																"nodeType": "Block",
																"src": "7499:279:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7619:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7641:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7670:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7664:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7664:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7645:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7713:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7717:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7709:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7709:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7730:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7702:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7702:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7702:44:4"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 461,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7670:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 461,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7717:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 476,
																		"nodeType": "InlineAssembly",
																		"src": "7610:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 485,
												"nodeType": "IfStatement",
												"src": "7331:516:4",
												"trueBody": {
													"id": 471,
													"nodeType": "Block",
													"src": "7344:42:4",
													"statements": [
														{
															"expression": {
																"id": 469,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "7365:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 467,
															"id": 470,
															"nodeType": "Return",
															"src": "7358:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "6947:209:4",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7170:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7201:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "7196:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 458,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7196:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7231:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "7218:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 460,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7218:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7265:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "7251:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 462,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7251:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7186:97:4"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "7307:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 465,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7307:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7306:14:4"
									},
									"scope": 488,
									"src": "7161:692:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 489,
							"src": "126:7729:4",
							"usedErrors": []
						}
					],
					"src": "33:7823:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts@4.3.3/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.3.3/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							510
						]
					},
					"id": 511,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 490,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 491,
								"nodeType": "StructuredDocumentation",
								"src": "58:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 510,
							"linearizedBaseContracts": [
								510
							],
							"name": "Context",
							"nameLocation": "573:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "649:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 496,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "666:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "666:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 495,
												"id": 498,
												"nodeType": "Return",
												"src": "659:17:5"
											}
										]
									},
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "596:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "606:2:5"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "640:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "639:9:5"
									},
									"scope": 510,
									"src": "587:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "756:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 505,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "773:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "773:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 504,
												"id": 507,
												"nodeType": "Return",
												"src": "766:15:5"
											}
										]
									},
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "698:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:5"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "740:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 502,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "740:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "739:16:5"
									},
									"scope": 510,
									"src": "689:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 511,
							"src": "555:235:5",
							"usedErrors": []
						}
					],
					"src": "33:758:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts@4.3.3/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.3.3/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							713
						]
					},
					"id": 714,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 512,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 513,
								"nodeType": "StructuredDocumentation",
								"src": "58:34:6",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 713,
							"linearizedBaseContracts": [
								713
							],
							"name": "Strings",
							"nameLocation": "101:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 516,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "140:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 713,
									"src": "115:58:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 514,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "115:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 515,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "155:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "346:632:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 524,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "548:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "557:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "548:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 530,
												"nodeType": "IfStatement",
												"src": "544:51:6",
												"trueBody": {
													"id": 529,
													"nodeType": "Block",
													"src": "560:35:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "581:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 523,
															"id": 528,
															"nodeType": "Return",
															"src": "574:10:6"
														}
													]
												}
											},
											{
												"assignments": [
													532
												],
												"declarations": [
													{
														"constant": false,
														"id": 532,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "612:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 594,
														"src": "604:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 531,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "604:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 534,
												"initialValue": {
													"id": 533,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 519,
													"src": "619:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "604:20:6"
											},
											{
												"assignments": [
													536
												],
												"declarations": [
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "642:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 594,
														"src": "634:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 535,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "634:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 537,
												"nodeType": "VariableDeclarationStatement",
												"src": "634:14:6"
											},
											{
												"body": {
													"id": 548,
													"nodeType": "Block",
													"src": "676:57:6",
													"statements": [
														{
															"expression": {
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "690:8:6",
																"subExpression": {
																	"id": 541,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "690:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 543,
															"nodeType": "ExpressionStatement",
															"src": "690:8:6"
														},
														{
															"expression": {
																"id": 546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 544,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "712:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "720:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "712:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 547,
															"nodeType": "ExpressionStatement",
															"src": "712:10:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 538,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "665:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 539,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "673:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "665:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 549,
												"nodeType": "WhileStatement",
												"src": "658:75:6"
											},
											{
												"assignments": [
													551
												],
												"declarations": [
													{
														"constant": false,
														"id": 551,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "755:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 594,
														"src": "742:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 550,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "742:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 556,
												"initialValue": {
													"arguments": [
														{
															"id": 554,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "774:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "764:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 552,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "768:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "764:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "742:39:6"
											},
											{
												"body": {
													"id": 587,
													"nodeType": "Block",
													"src": "810:131:6",
													"statements": [
														{
															"expression": {
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 560,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "824:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "834:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "824:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 563,
															"nodeType": "ExpressionStatement",
															"src": "824:11:6"
														},
														{
															"expression": {
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 564,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 551,
																		"src": "849:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 566,
																	"indexExpression": {
																		"id": 565,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 536,
																		"src": "856:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "849:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 578,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 571,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "879:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 576,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 574,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 519,
																									"src": "892:5:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 575,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "900:2:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "892:10:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 573,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "884:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 572,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "884:7:6",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 577,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "884:19:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "879:24:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 570,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "873:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 569,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "873:5:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "873:31:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "866:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 567,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "866:6:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "866:39:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "849:56:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 582,
															"nodeType": "ExpressionStatement",
															"src": "849:56:6"
														},
														{
															"expression": {
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 583,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "919:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "928:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "919:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 586,
															"nodeType": "ExpressionStatement",
															"src": "919:11:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 557,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "798:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "807:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "798:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 588,
												"nodeType": "WhileStatement",
												"src": "791:150:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 591,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "964:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "957:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 589,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "957:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "957:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 523,
												"id": 593,
												"nodeType": "Return",
												"src": "950:21:6"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "180:90:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "284:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "301:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "293:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "293:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "292:15:6"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "331:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 521,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "331:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "330:15:6"
									},
									"scope": 713,
									"src": "275:703:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "1157:255:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 603,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "1171:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1180:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1171:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 609,
												"nodeType": "IfStatement",
												"src": "1167:54:6",
												"trueBody": {
													"id": 608,
													"nodeType": "Block",
													"src": "1183:38:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1204:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 602,
															"id": 607,
															"nodeType": "Return",
															"src": "1197:13:6"
														}
													]
												}
											},
											{
												"assignments": [
													611
												],
												"declarations": [
													{
														"constant": false,
														"id": 611,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1238:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 635,
														"src": "1230:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 610,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1230:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 613,
												"initialValue": {
													"id": 612,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 598,
													"src": "1245:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1230:20:6"
											},
											{
												"assignments": [
													615
												],
												"declarations": [
													{
														"constant": false,
														"id": 615,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1268:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 635,
														"src": "1260:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 614,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1260:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 617,
												"initialValue": {
													"hexValue": "30",
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1277:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1260:18:6"
											},
											{
												"body": {
													"id": 628,
													"nodeType": "Block",
													"src": "1306:57:6",
													"statements": [
														{
															"expression": {
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1320:8:6",
																"subExpression": {
																	"id": 621,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "1320:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 623,
															"nodeType": "ExpressionStatement",
															"src": "1320:8:6"
														},
														{
															"expression": {
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 624,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 611,
																	"src": "1342:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1351:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1342:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 627,
															"nodeType": "ExpressionStatement",
															"src": "1342:10:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 618,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "1295:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1303:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1295:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 629,
												"nodeType": "WhileStatement",
												"src": "1288:75:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 631,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "1391:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 632,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "1398:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 630,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															636,
															712
														],
														"referencedDeclaration": 712,
														"src": "1379:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1379:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 602,
												"id": 634,
												"nodeType": "Return",
												"src": "1372:33:6"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "984:94:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1092:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1112:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "1104:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:15:6"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "1142:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 600,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1142:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:15:6"
									},
									"scope": 713,
									"src": "1083:329:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "1625:351:6",
										"statements": [
											{
												"assignments": [
													647
												],
												"declarations": [
													{
														"constant": false,
														"id": 647,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1648:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 711,
														"src": "1635:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 646,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1635:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 656,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1667:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 651,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 641,
																	"src": "1671:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1667:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1680:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1667:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 649,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1657:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 648,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1661:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1657:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1635:47:6"
											},
											{
												"expression": {
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 657,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "1692:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 659,
														"indexExpression": {
															"hexValue": "30",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1699:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1692:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1704:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1692:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "1692:15:6"
											},
											{
												"expression": {
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 663,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "1717:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 665,
														"indexExpression": {
															"hexValue": "31",
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1724:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1717:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 666,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1729:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1717:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "1717:15:6"
											},
											{
												"body": {
													"id": 697,
													"nodeType": "Block",
													"src": "1787:87:6",
													"statements": [
														{
															"expression": {
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 683,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 647,
																		"src": "1801:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 685,
																	"indexExpression": {
																		"id": 684,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 670,
																		"src": "1808:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1801:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 686,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 516,
																		"src": "1813:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 690,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 687,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 639,
																			"src": "1826:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1834:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1826:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1813:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1801:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 692,
															"nodeType": "ExpressionStatement",
															"src": "1801:37:6"
														},
														{
															"expression": {
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 693,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "1852:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1862:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1852:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 696,
															"nodeType": "ExpressionStatement",
															"src": "1852:11:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 677,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "1775:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1779:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1775:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 698,
												"initializationExpression": {
													"assignments": [
														670
													],
													"declarations": [
														{
															"constant": false,
															"id": 670,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1755:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 698,
															"src": "1747:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 669,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1747:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 676,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1759:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 672,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "1763:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1759:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1772:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1759:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1747:26:6"
												},
												"loopExpression": {
													"expression": {
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1782:3:6",
														"subExpression": {
															"id": 680,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "1784:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 682,
													"nodeType": "ExpressionStatement",
													"src": "1782:3:6"
												},
												"nodeType": "ForStatement",
												"src": "1742:132:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 700,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 639,
																"src": "1891:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1900:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1891:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1903:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 699,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1883:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1883:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "1883:55:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 708,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "1962:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1955:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 706,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1955:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1955:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 645,
												"id": 710,
												"nodeType": "Return",
												"src": "1948:21:6"
											}
										]
									},
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "1418:112:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1544:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1564:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "1556:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1579:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "1571:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1571:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1555:31:6"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "1610:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 643,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1610:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1609:15:6"
									},
									"scope": 713,
									"src": "1535:441:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 714,
							"src": "93:1885:6",
							"usedErrors": []
						}
					],
					"src": "33:1946:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts@4.3.3/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.3.3/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							737
						],
						"IERC165": [
							749
						]
					},
					"id": 738,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 715,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.3.3/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 716,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 738,
							"sourceUnit": 750,
							"src": "58:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 718,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 749,
										"src": "688:7:7"
									},
									"id": 719,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:7"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 717,
								"nodeType": "StructuredDocumentation",
								"src": "83:576:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 737,
							"linearizedBaseContracts": [
								737,
								749
							],
							"name": "ERC165",
							"nameLocation": "678:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "854:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 728,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "871:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 730,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "891:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$749_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$749_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 729,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "886:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "886:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$749",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "886:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "871:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 727,
												"id": 734,
												"nodeType": "Return",
												"src": "864:47:7"
											}
										]
									},
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 724,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "830:8:7"
									},
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "790:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 721,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:7"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "848:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "848:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "847:6:7"
									},
									"scope": 737,
									"src": "763:155:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 738,
							"src": "660:260:7",
							"usedErrors": []
						}
					],
					"src": "33:888:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts@4.3.3/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.3.3/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							749
						]
					},
					"id": 750,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 739,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 740,
								"nodeType": "StructuredDocumentation",
								"src": "58:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 749,
							"linearizedBaseContracts": [
								749
							],
							"name": "IERC165",
							"nameLocation": "348:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 741,
										"nodeType": "StructuredDocumentation",
										"src": "362:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "716:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "741:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "734:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 742,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "734:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:20:8"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "777:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "777:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:6:8"
									},
									"scope": 749,
									"src": "707:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 750,
							"src": "338:447:8",
							"usedErrors": []
						}
					],
					"src": "33:753:8"
				},
				"id": 8
			},
			"contracts/ERC721A.sol": {
				"ast": {
					"absolutePath": "contracts/ERC721A.sol",
					"exportedSymbols": {
						"Address": [
							488
						],
						"Context": [
							510
						],
						"ERC165": [
							737
						],
						"ERC721A": [
							1922
						],
						"IERC165": [
							749
						],
						"IERC721": [
							115
						],
						"IERC721Enumerable": [
							164
						],
						"IERC721Metadata": [
							191
						],
						"IERC721Receiver": [
							133
						],
						"Strings": [
							713
						]
					},
					"id": 1923,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 751,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.3.3/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts@4.3.3/token/ERC721/IERC721.sol",
							"id": 752,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1923,
							"sourceUnit": 116,
							"src": "58:64:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.3.3/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts@4.3.3/token/ERC721/IERC721Receiver.sol",
							"id": 753,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1923,
							"sourceUnit": 134,
							"src": "123:72:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.3.3/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "@openzeppelin/contracts@4.3.3/token/ERC721/extensions/IERC721Metadata.sol",
							"id": 754,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1923,
							"sourceUnit": 192,
							"src": "196:83:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.3.3/token/ERC721/extensions/IERC721Enumerable.sol",
							"file": "@openzeppelin/contracts@4.3.3/token/ERC721/extensions/IERC721Enumerable.sol",
							"id": 755,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1923,
							"sourceUnit": 165,
							"src": "280:85:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.3.3/utils/Address.sol",
							"file": "@openzeppelin/contracts@4.3.3/utils/Address.sol",
							"id": 756,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1923,
							"sourceUnit": 489,
							"src": "366:57:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.3.3/utils/Context.sol",
							"file": "@openzeppelin/contracts@4.3.3/utils/Context.sol",
							"id": 757,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1923,
							"sourceUnit": 511,
							"src": "424:57:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.3.3/utils/Strings.sol",
							"file": "@openzeppelin/contracts@4.3.3/utils/Strings.sol",
							"id": 758,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1923,
							"sourceUnit": 714,
							"src": "482:57:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.3.3/utils/introspection/ERC165.sol",
							"file": "@openzeppelin/contracts@4.3.3/utils/introspection/ERC165.sol",
							"id": 759,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1923,
							"sourceUnit": 738,
							"src": "540:70:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 761,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 510,
										"src": "1077:7:9"
									},
									"id": 762,
									"nodeType": "InheritanceSpecifier",
									"src": "1077:7:9"
								},
								{
									"baseName": {
										"id": 763,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 737,
										"src": "1088:6:9"
									},
									"id": 764,
									"nodeType": "InheritanceSpecifier",
									"src": "1088:6:9"
								},
								{
									"baseName": {
										"id": 765,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 115,
										"src": "1098:7:9"
									},
									"id": 766,
									"nodeType": "InheritanceSpecifier",
									"src": "1098:7:9"
								},
								{
									"baseName": {
										"id": 767,
										"name": "IERC721Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 191,
										"src": "1109:15:9"
									},
									"id": 768,
									"nodeType": "InheritanceSpecifier",
									"src": "1109:15:9"
								},
								{
									"baseName": {
										"id": 769,
										"name": "IERC721Enumerable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 164,
										"src": "1128:17:9"
									},
									"id": 770,
									"nodeType": "InheritanceSpecifier",
									"src": "1128:17:9"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 760,
								"nodeType": "StructuredDocumentation",
								"src": "612:442:9",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata and Enumerable extension. Built to optimize for lower gas during batch mints.\n Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..).\n Assumes the number of issuable tokens (collection size) is capped and fits in a uint128.\n Does not support burning tokens to address(0)."
							},
							"fullyImplemented": true,
							"id": 1922,
							"linearizedBaseContracts": [
								1922,
								164,
								191,
								115,
								737,
								749,
								510
							],
							"name": "ERC721A",
							"nameLocation": "1064:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 773,
									"libraryName": {
										"id": 771,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 488,
										"src": "1156:7:9"
									},
									"nodeType": "UsingForDirective",
									"src": "1150:26:9",
									"typeName": {
										"id": 772,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1168:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"id": 776,
									"libraryName": {
										"id": 774,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 713,
										"src": "1185:7:9"
									},
									"nodeType": "UsingForDirective",
									"src": "1179:26:9",
									"typeName": {
										"id": 775,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1197:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "ERC721A.TokenOwnership",
									"id": 781,
									"members": [
										{
											"constant": false,
											"id": 778,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1245:4:9",
											"nodeType": "VariableDeclaration",
											"scope": 781,
											"src": "1237:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 777,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1237:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 780,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "1262:14:9",
											"nodeType": "VariableDeclaration",
											"scope": 781,
											"src": "1255:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 779,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1255:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1216:14:9",
									"nodeType": "StructDefinition",
									"scope": 1922,
									"src": "1209:72:9",
									"visibility": "public"
								},
								{
									"canonicalName": "ERC721A.AddressData",
									"id": 786,
									"members": [
										{
											"constant": false,
											"id": 783,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "1318:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 786,
											"src": "1310:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 782,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1310:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 785,
											"mutability": "mutable",
											"name": "numberMinted",
											"nameLocation": "1339:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 786,
											"src": "1331:20:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 784,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1331:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressData",
									"nameLocation": "1292:11:9",
									"nodeType": "StructDefinition",
									"scope": 1922,
									"src": "1285:71:9",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 789,
									"mutability": "mutable",
									"name": "currentIndex",
									"nameLocation": "1376:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1922,
									"src": "1360:32:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 787,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1360:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 788,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1391:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 791,
									"mutability": "immutable",
									"name": "collectionSize",
									"nameLocation": "1424:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1922,
									"src": "1397:41:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 790,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1397:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 793,
									"mutability": "immutable",
									"name": "maxBatchSize",
									"nameLocation": "1469:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1922,
									"src": "1442:39:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 792,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1442:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 795,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1517:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 1922,
									"src": "1502:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 794,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1502:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 797,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1560:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1922,
									"src": "1545:22:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 796,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1545:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 802,
									"mutability": "mutable",
									"name": "_ownerships",
									"nameLocation": "1782:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1922,
									"src": "1739:54:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$781_storage_$",
										"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership)"
									},
									"typeName": {
										"id": 801,
										"keyType": {
											"id": 798,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1747:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1739:34:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$781_storage_$",
											"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership)"
										},
										"valueType": {
											"id": 800,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 799,
												"name": "TokenOwnership",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 781,
												"src": "1758:14:9"
											},
											"referencedDeclaration": 781,
											"src": "1758:14:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenOwnership_$781_storage_ptr",
												"typeString": "struct ERC721A.TokenOwnership"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 807,
									"mutability": "mutable",
									"name": "_addressData",
									"nameLocation": "1881:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1922,
									"src": "1841:52:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$786_storage_$",
										"typeString": "mapping(address => struct ERC721A.AddressData)"
									},
									"typeName": {
										"id": 806,
										"keyType": {
											"id": 803,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1849:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1841:31:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$786_storage_$",
											"typeString": "mapping(address => struct ERC721A.AddressData)"
										},
										"valueType": {
											"id": 805,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 804,
												"name": "AddressData",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 786,
												"src": "1860:11:9"
											},
											"referencedDeclaration": 786,
											"src": "1860:11:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressData_$786_storage_ptr",
												"typeString": "struct ERC721A.AddressData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 811,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1981:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1922,
									"src": "1945:51:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 810,
										"keyType": {
											"id": 808,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1953:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1945:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 809,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1964:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 817,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "2100:18:9",
									"nodeType": "VariableDeclaration",
									"scope": 1922,
									"src": "2047:71:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 816,
										"keyType": {
											"id": 812,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2055:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2047:44:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 815,
											"keyType": {
												"id": 813,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2074:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2066:24:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 814,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2085:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "2409:296:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 830,
																"name": "collectionSize_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "2430:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2448:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a20636f6c6c656374696f6e206d75737420686176652061206e6f6e7a65726f20737570706c79",
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2457:48:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a",
																"typeString": "literal_string \"ERC721A: collection must have a nonzero supply\""
															},
															"value": "ERC721A: collection must have a nonzero supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a",
																"typeString": "literal_string \"ERC721A: collection must have a nonzero supply\""
															}
														],
														"id": 829,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2415:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2415:96:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "2415:96:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 837,
																"name": "maxBatchSize_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "2525:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2541:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2525:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a206d61782062617463682073697a65206d757374206265206e6f6e7a65726f",
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2544:41:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b",
																"typeString": "literal_string \"ERC721A: max batch size must be nonzero\""
															},
															"value": "ERC721A: max batch size must be nonzero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b",
																"typeString": "literal_string \"ERC721A: max batch size must be nonzero\""
															}
														],
														"id": 836,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2517:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2517:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 842,
												"nodeType": "ExpressionStatement",
												"src": "2517:69:9"
											},
											{
												"expression": {
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 843,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "2592:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 844,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "2600:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2592:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "2592:13:9"
											},
											{
												"expression": {
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 847,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "2611:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 848,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "2621:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2611:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "2611:17:9"
											},
											{
												"expression": {
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 851,
														"name": "maxBatchSize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "2634:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 852,
														"name": "maxBatchSize_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "2649:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2634:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "2634:28:9"
											},
											{
												"expression": {
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 855,
														"name": "collectionSize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "2668:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 856,
														"name": "collectionSize_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "2685:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2668:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "2668:32:9"
											}
										]
									},
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "2123:159:9",
										"text": " @dev\n `maxBatchSize` refers to how much a minter can mint at a time.\n `collectionSize_` refers to how many tokens are in the collection."
									},
									"id": 860,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2316:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "2302:19:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 819,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2302:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2341:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "2327:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 821,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2327:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "maxBatchSize_",
												"nameLocation": "2362:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "2354:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2354:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "collectionSize_",
												"nameLocation": "2389:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "2381:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2381:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:112:9"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2409:0:9"
									},
									"scope": 1922,
									"src": "2285:420:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										145
									],
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "2830:30:9",
										"statements": [
											{
												"expression": {
													"id": 867,
													"name": "currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 789,
													"src": "2843:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 866,
												"id": 868,
												"nodeType": "Return",
												"src": "2836:19:9"
											}
										]
									},
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "2709:56:9",
										"text": " @dev See {IERC721Enumerable-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2777:11:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 863,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2803:8:9"
									},
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2788:2:9"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "2821:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2821:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:9:9"
									},
									"scope": 1922,
									"src": "2768:92:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										163
									],
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "3000:98:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 880,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "3014:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 881,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 870,
																	"src": "3022:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3022:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3014:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a20676c6f62616c20696e646578206f7574206f6620626f756e6473",
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3037:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a",
																"typeString": "literal_string \"ERC721A: global index out of bounds\""
															},
															"value": "ERC721A: global index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a",
																"typeString": "literal_string \"ERC721A: global index out of bounds\""
															}
														],
														"id": 879,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3006:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3006:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "3006:69:9"
											},
											{
												"expression": {
													"id": 887,
													"name": "index",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 873,
													"src": "3088:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 878,
												"id": 888,
												"nodeType": "Return",
												"src": "3081:12:9"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "2864:57:9",
										"text": " @dev See {IERC721Enumerable-tokenByIndex}."
									},
									"functionSelector": "4f6ccce7",
									"id": 890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "2933:12:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 875,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2973:8:9"
									},
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2954:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "2946:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2946:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2945:15:9"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "2991:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2991:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2990:9:9"
									},
									"scope": 1922,
									"src": "2924:174:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										155
									],
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "3498:605:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 902,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 895,
																"src": "3512:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 904,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 893,
																		"src": "3530:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 903,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "3520:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3520:16:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3512:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a206f776e657220696e646578206f7574206f6620626f756e6473",
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3538:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3",
																"typeString": "literal_string \"ERC721A: owner index out of bounds\""
															},
															"value": "ERC721A: owner index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3",
																"typeString": "literal_string \"ERC721A: owner index out of bounds\""
															}
														],
														"id": 901,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3504:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3504:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "3504:71:9"
											},
											{
												"assignments": [
													911
												],
												"declarations": [
													{
														"constant": false,
														"id": 911,
														"mutability": "mutable",
														"name": "numMintedSoFar",
														"nameLocation": "3589:14:9",
														"nodeType": "VariableDeclaration",
														"scope": 978,
														"src": "3581:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 910,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3581:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 914,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 912,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "3606:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3606:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3581:38:9"
											},
											{
												"assignments": [
													916
												],
												"declarations": [
													{
														"constant": false,
														"id": 916,
														"mutability": "mutable",
														"name": "tokenIdsIdx",
														"nameLocation": "3633:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 978,
														"src": "3625:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 915,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3625:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 918,
												"initialValue": {
													"hexValue": "30",
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3647:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3625:23:9"
											},
											{
												"assignments": [
													920
												],
												"declarations": [
													{
														"constant": false,
														"id": 920,
														"mutability": "mutable",
														"name": "currOwnershipAddr",
														"nameLocation": "3662:17:9",
														"nodeType": "VariableDeclaration",
														"scope": 978,
														"src": "3654:25:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 919,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3654:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 925,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3690:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3682:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 921,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3682:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3682:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3654:38:9"
											},
											{
												"body": {
													"id": 972,
													"nodeType": "Block",
													"src": "3743:294:9",
													"statements": [
														{
															"assignments": [
																938
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 938,
																	"mutability": "mutable",
																	"name": "ownership",
																	"nameLocation": "3773:9:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 972,
																	"src": "3751:31:9",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$781_memory_ptr",
																		"typeString": "struct ERC721A.TokenOwnership"
																	},
																	"typeName": {
																		"id": 937,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 936,
																			"name": "TokenOwnership",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 781,
																			"src": "3751:14:9"
																		},
																		"referencedDeclaration": 781,
																		"src": "3751:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenOwnership_$781_storage_ptr",
																			"typeString": "struct ERC721A.TokenOwnership"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 942,
															"initialValue": {
																"baseExpression": {
																	"id": 939,
																	"name": "_ownerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "3785:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$781_storage_$",
																		"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																	}
																},
																"id": 941,
																"indexExpression": {
																	"id": 940,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "3797:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3785:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$781_storage",
																	"typeString": "struct ERC721A.TokenOwnership storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3751:48:9"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 943,
																		"name": "ownership",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 938,
																		"src": "3811:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenOwnership_$781_memory_ptr",
																			"typeString": "struct ERC721A.TokenOwnership memory"
																		}
																	},
																	"id": 944,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "addr",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 778,
																	"src": "3811:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3837:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3829:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 945,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3829:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3829:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3811:28:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 956,
															"nodeType": "IfStatement",
															"src": "3807:87:9",
															"trueBody": {
																"id": 955,
																"nodeType": "Block",
																"src": "3841:53:9",
																"statements": [
																	{
																		"expression": {
																			"id": 953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 950,
																				"name": "currOwnershipAddr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 920,
																				"src": "3851:17:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 951,
																					"name": "ownership",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 938,
																					"src": "3871:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenOwnership_$781_memory_ptr",
																						"typeString": "struct ERC721A.TokenOwnership memory"
																					}
																				},
																				"id": 952,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "addr",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 778,
																				"src": "3871:14:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "3851:34:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 954,
																		"nodeType": "ExpressionStatement",
																		"src": "3851:34:9"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 957,
																	"name": "currOwnershipAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "3905:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 958,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "3926:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3905:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 971,
															"nodeType": "IfStatement",
															"src": "3901:130:9",
															"trueBody": {
																"id": 970,
																"nodeType": "Block",
																"src": "3933:98:9",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 960,
																				"name": "tokenIdsIdx",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 916,
																				"src": "3947:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 961,
																				"name": "index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 895,
																				"src": "3962:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3947:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 966,
																		"nodeType": "IfStatement",
																		"src": "3943:57:9",
																		"trueBody": {
																			"id": 965,
																			"nodeType": "Block",
																			"src": "3969:31:9",
																			"statements": [
																				{
																					"expression": {
																						"id": 963,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 927,
																						"src": "3988:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 900,
																					"id": 964,
																					"nodeType": "Return",
																					"src": "3981:8:9"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "4009:13:9",
																			"subExpression": {
																				"id": 967,
																				"name": "tokenIdsIdx",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 916,
																				"src": "4009:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 969,
																		"nodeType": "ExpressionStatement",
																		"src": "4009:13:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 930,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "3718:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 931,
														"name": "numMintedSoFar",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "3722:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3718:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 973,
												"initializationExpression": {
													"assignments": [
														927
													],
													"declarations": [
														{
															"constant": false,
															"id": 927,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3711:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 973,
															"src": "3703:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 926,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3703:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 929,
													"initialValue": {
														"hexValue": "30",
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3715:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3703:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3738:3:9",
														"subExpression": {
															"id": 933,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "3738:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 935,
													"nodeType": "ExpressionStatement",
													"src": "3738:3:9"
												},
												"nodeType": "ForStatement",
												"src": "3698:339:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "455243373231413a20756e61626c6520746f2067657420746f6b656e206f66206f776e657220627920696e646578",
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4049:48:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c",
																"typeString": "literal_string \"ERC721A: unable to get token of owner by index\""
															},
															"value": "ERC721A: unable to get token of owner by index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c",
																"typeString": "literal_string \"ERC721A: unable to get token of owner by index\""
															}
														],
														"id": 974,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "4042:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4042:56:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "4042:56:9"
											}
										]
									},
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "3102:277:9",
										"text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n This read function is O(collectionSize). If calling from a separate contract, be sure to test gas first.\n It may also degrade with extremely large collection sizes (e.g >> 10000), test for your use case."
									},
									"functionSelector": "2f745c59",
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "3391:19:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 897,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3465:8:9"
									},
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3419:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "3411:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3411:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "3434:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "3426:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3426:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3410:30:9"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "3487:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3487:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3486:9:9"
									},
									"scope": 1922,
									"src": "3382:721:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										736,
										748
									],
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "4292:228:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 990,
																	"name": "interfaceId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "4311:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 992,
																				"name": "IERC721",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 115,
																				"src": "4331:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
																					"typeString": "type(contract IERC721)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
																					"typeString": "type(contract IERC721)"
																				}
																			],
																			"id": 991,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "4326:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4326:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$115",
																			"typeString": "type(contract IERC721)"
																		}
																	},
																	"id": 994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "interfaceId",
																	"nodeType": "MemberAccess",
																	"src": "4326:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "4311:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 996,
																	"name": "interfaceId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "4361:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 998,
																				"name": "IERC721Metadata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 191,
																				"src": "4381:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$191_$",
																					"typeString": "type(contract IERC721Metadata)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$191_$",
																					"typeString": "type(contract IERC721Metadata)"
																				}
																			],
																			"id": 997,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "4376:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4376:21:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$191",
																			"typeString": "type(contract IERC721Metadata)"
																		}
																	},
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "interfaceId",
																	"nodeType": "MemberAccess",
																	"src": "4376:33:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "4361:48:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4311:98:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1003,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "4419:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1005,
																			"name": "IERC721Enumerable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 164,
																			"src": "4439:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$164_$",
																				"typeString": "type(contract IERC721Enumerable)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$164_$",
																				"typeString": "type(contract IERC721Enumerable)"
																			}
																		],
																		"id": 1004,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "4434:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4434:23:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Enumerable_$164",
																		"typeString": "type(contract IERC721Enumerable)"
																	}
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "4434:35:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "4419:50:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "4311:158:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1012,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "4503:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1010,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "4479:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721A_$1922_$",
																	"typeString": "type(contract super ERC721A)"
																}
															},
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 736,
															"src": "4479:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4479:36:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4311:204:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 989,
												"id": 1015,
												"nodeType": "Return",
												"src": "4298:217:9"
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "4107:52:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "4171:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 986,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 984,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 737,
												"src": "4254:6:9"
											},
											{
												"id": 985,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 749,
												"src": "4262:7:9"
											}
										],
										"src": "4245:25:9"
									},
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "4196:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "4189:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 981,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4189:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:20:9"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "4284:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 987,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4284:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4283:6:9"
									},
									"scope": 1922,
									"src": "4162:358:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										40
									],
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "4644:135:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1027,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "4658:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4675:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4667:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1028,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4667:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4667:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4658:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4679:45:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e",
																"typeString": "literal_string \"ERC721A: balance query for the zero address\""
															},
															"value": "ERC721A: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e",
																"typeString": "literal_string \"ERC721A: balance query for the zero address\""
															}
														],
														"id": 1026,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4650:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4650:75:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "4650:75:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1038,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "4746:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$786_storage_$",
																		"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																	}
																},
																"id": 1040,
																"indexExpression": {
																	"id": 1039,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1020,
																	"src": "4759:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4746:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$786_storage",
																	"typeString": "struct ERC721A.AddressData storage ref"
																}
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 783,
															"src": "4746:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4738:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1036,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4738:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4738:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1025,
												"id": 1043,
												"nodeType": "Return",
												"src": "4731:43:9"
											}
										]
									},
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "4524:44:9",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4580:9:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1022,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4617:8:9"
									},
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4598:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "4590:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4590:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4589:15:9"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "4635:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4635:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4634:9:9"
									},
									"scope": 1922,
									"src": "4571:208:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "4853:164:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1053,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1047,
																"src": "4874:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4891:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4883:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1054,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4883:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4883:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4874:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a206e756d626572206d696e74656420717565727920666f7220746865207a65726f2061646472657373",
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4901:51:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c3e37e02c3080172abd6c32dc3a6b6918df0b3dc1fb7feda8214222d4942acc",
																"typeString": "literal_string \"ERC721A: number minted query for the zero address\""
															},
															"value": "ERC721A: number minted query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c3e37e02c3080172abd6c32dc3a6b6918df0b3dc1fb7feda8214222d4942acc",
																"typeString": "literal_string \"ERC721A: number minted query for the zero address\""
															}
														],
														"id": 1052,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4859:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4859:99:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1061,
												"nodeType": "ExpressionStatement",
												"src": "4859:99:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1064,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "4979:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$786_storage_$",
																		"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																	}
																},
																"id": 1066,
																"indexExpression": {
																	"id": 1065,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1047,
																	"src": "4992:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4979:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$786_storage",
																	"typeString": "struct ERC721A.AddressData storage ref"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "numberMinted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 785,
															"src": "4979:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"id": 1063,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4971:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1062,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4971:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4971:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1051,
												"id": 1069,
												"nodeType": "Return",
												"src": "4964:48:9"
											}
										]
									},
									"id": 1071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "4792:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4814:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "4806:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4806:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4805:15:9"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "4844:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:9:9"
									},
									"scope": 1922,
									"src": "4783:234:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "5119:488:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1081,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "5141:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1080,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "5133:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5133:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5151:44:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79",
																"typeString": "literal_string \"ERC721A: owner query for nonexistent token\""
															},
															"value": "ERC721A: owner query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79",
																"typeString": "literal_string \"ERC721A: owner query for nonexistent token\""
															}
														],
														"id": 1079,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5125:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5125:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "5125:71:9"
											},
											{
												"assignments": [
													1087
												],
												"declarations": [
													{
														"constant": false,
														"id": 1087,
														"mutability": "mutable",
														"name": "lowestTokenToCheck",
														"nameLocation": "5211:18:9",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "5203:26:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1086,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5203:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1088,
												"nodeType": "VariableDeclarationStatement",
												"src": "5203:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1089,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "5239:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1090,
														"name": "maxBatchSize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "5250:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5239:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1101,
												"nodeType": "IfStatement",
												"src": "5235:91:9",
												"trueBody": {
													"id": 1100,
													"nodeType": "Block",
													"src": "5264:62:9",
													"statements": [
														{
															"expression": {
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1092,
																	"name": "lowestTokenToCheck",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "5272:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1093,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1073,
																			"src": "5293:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1094,
																			"name": "maxBatchSize",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 793,
																			"src": "5303:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5293:22:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5318:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "5293:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5272:47:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1099,
															"nodeType": "ExpressionStatement",
															"src": "5272:47:9"
														}
													]
												}
											},
											{
												"body": {
													"id": 1130,
													"nodeType": "Block",
													"src": "5397:142:9",
													"statements": [
														{
															"assignments": [
																1114
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1114,
																	"mutability": "mutable",
																	"name": "ownership",
																	"nameLocation": "5427:9:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1130,
																	"src": "5405:31:9",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$781_memory_ptr",
																		"typeString": "struct ERC721A.TokenOwnership"
																	},
																	"typeName": {
																		"id": 1113,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1112,
																			"name": "TokenOwnership",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 781,
																			"src": "5405:14:9"
																		},
																		"referencedDeclaration": 781,
																		"src": "5405:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenOwnership_$781_storage_ptr",
																			"typeString": "struct ERC721A.TokenOwnership"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1118,
															"initialValue": {
																"baseExpression": {
																	"id": 1115,
																	"name": "_ownerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5439:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$781_storage_$",
																		"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																	}
																},
																"id": 1117,
																"indexExpression": {
																	"id": 1116,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1103,
																	"src": "5451:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5439:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$781_storage",
																	"typeString": "struct ERC721A.TokenOwnership storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5405:51:9"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1119,
																		"name": "ownership",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1114,
																		"src": "5468:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenOwnership_$781_memory_ptr",
																			"typeString": "struct ERC721A.TokenOwnership memory"
																		}
																	},
																	"id": 1120,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "addr",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 778,
																	"src": "5468:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5494:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5486:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1121,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5486:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5486:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5468:28:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1129,
															"nodeType": "IfStatement",
															"src": "5464:69:9",
															"trueBody": {
																"id": 1128,
																"nodeType": "Block",
																"src": "5498:35:9",
																"statements": [
																	{
																		"expression": {
																			"id": 1126,
																			"name": "ownership",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1114,
																			"src": "5515:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$781_memory_ptr",
																				"typeString": "struct ERC721A.TokenOwnership memory"
																			}
																		},
																		"functionReturnParameters": 1078,
																		"id": 1127,
																		"nodeType": "Return",
																		"src": "5508:16:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1106,
														"name": "curr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "5361:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1107,
														"name": "lowestTokenToCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "5369:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5361:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1131,
												"initializationExpression": {
													"assignments": [
														1103
													],
													"declarations": [
														{
															"constant": false,
															"id": 1103,
															"mutability": "mutable",
															"name": "curr",
															"nameLocation": "5345:4:9",
															"nodeType": "VariableDeclaration",
															"scope": 1131,
															"src": "5337:12:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1102,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5337:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1105,
													"initialValue": {
														"id": 1104,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "5352:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5337:22:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "5389:6:9",
														"subExpression": {
															"id": 1109,
															"name": "curr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "5389:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1111,
													"nodeType": "ExpressionStatement",
													"src": "5389:6:9"
												},
												"nodeType": "ForStatement",
												"src": "5332:207:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "455243373231413a20756e61626c6520746f2064657465726d696e6520746865206f776e6572206f6620746f6b656e",
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5552:49:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040",
																"typeString": "literal_string \"ERC721A: unable to determine the owner of token\""
															},
															"value": "ERC721A: unable to determine the owner of token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040",
																"typeString": "literal_string \"ERC721A: unable to determine the owner of token\""
															}
														],
														"id": 1132,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "5545:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5545:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "5545:57:9"
											}
										]
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownershipOf",
									"nameLocation": "5030:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5050:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "5042:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5042:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5041:17:9"
									},
									"returnParameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "5094:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$781_memory_ptr",
													"typeString": "struct ERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1076,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1075,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 781,
														"src": "5094:14:9"
													},
													"referencedDeclaration": 781,
													"src": "5094:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$781_storage_ptr",
														"typeString": "struct ERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5093:23:9"
									},
									"scope": 1922,
									"src": "5021:586:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										48
									],
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "5729:43:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1147,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1140,
																"src": "5754:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1146,
															"name": "ownershipOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "5742:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$781_memory_ptr_$",
																"typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
															}
														},
														"id": 1148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5742:20:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$781_memory_ptr",
															"typeString": "struct ERC721A.TokenOwnership memory"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "addr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 778,
													"src": "5742:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1145,
												"id": 1150,
												"nodeType": "Return",
												"src": "5735:32:9"
											}
										]
									},
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "5611:42:9",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "5665:7:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1142,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5702:8:9"
									},
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5681:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "5673:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5673:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:17:9"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "5720:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5720:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5719:9:9"
									},
									"scope": 1922,
									"src": "5656:116:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										176
									],
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "5895:23:9",
										"statements": [
											{
												"expression": {
													"id": 1159,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 795,
													"src": "5908:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1158,
												"id": 1160,
												"nodeType": "Return",
												"src": "5901:12:9"
											}
										]
									},
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "5776:47:9",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "5835:4:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1155,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5862:8:9"
									},
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5839:2:9"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "5880:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1156,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5880:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5879:15:9"
									},
									"scope": 1922,
									"src": "5826:92:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										182
									],
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "6045:25:9",
										"statements": [
											{
												"expression": {
													"id": 1169,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 797,
													"src": "6058:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1168,
												"id": 1170,
												"nodeType": "Return",
												"src": "6051:14:9"
											}
										]
									},
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "5922:49:9",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 1172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "5983:6:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1165,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6012:8:9"
									},
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5989:2:9"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "6030:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1166,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6030:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6029:15:9"
									},
									"scope": 1922,
									"src": "5974:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										190
									],
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "6238:133:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1183,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1175,
																	"src": "6267:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1182,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "6259:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6259:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6283:49:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															},
															"value": "ERC721Metadata: URI query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															}
														],
														"id": 1181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6244:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6244:94:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "6244:94:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1188,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "6356:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6356:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1180,
												"id": 1190,
												"nodeType": "Return",
												"src": "6349:17:9"
											}
										]
									},
									"documentation": {
										"id": 1173,
										"nodeType": "StructuredDocumentation",
										"src": "6074:51:9",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "6137:8:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1177,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6199:8:9"
									},
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6154:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "6146:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6146:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6145:17:9"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "6221:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1178,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6221:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6220:15:9"
									},
									"scope": 1922,
									"src": "6128:243:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1200,
										"nodeType": "Block",
										"src": "6666:20:9",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6679:2:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 1197,
												"id": 1199,
												"nodeType": "Return",
												"src": "6672:9:9"
											}
										]
									},
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "6375:222:9",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
									},
									"id": 1201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "6609:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6617:2:9"
									},
									"returnParameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "6651:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1195,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6651:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6650:15:9"
									},
									"scope": 1922,
									"src": "6600:86:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 1244,
										"nodeType": "Block",
										"src": "6797:307:9",
										"statements": [
											{
												"assignments": [
													1211
												],
												"declarations": [
													{
														"constant": false,
														"id": 1211,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6811:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1244,
														"src": "6803:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1210,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6803:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1216,
												"initialValue": {
													"arguments": [
														{
															"id": 1214,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "6835:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1212,
															"name": "ERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1922,
															"src": "6819:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721A_$1922_$",
																"typeString": "type(contract ERC721A)"
															}
														},
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1152,
														"src": "6819:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6819:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6803:40:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1218,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1204,
																"src": "6857:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1219,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1211,
																"src": "6863:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6857:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6870:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a",
																"typeString": "literal_string \"ERC721A: approval to current owner\""
															},
															"value": "ERC721A: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a",
																"typeString": "literal_string \"ERC721A: approval to current owner\""
															}
														],
														"id": 1217,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6849:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6849:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "6849:58:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1225,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 500,
																		"src": "6929:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6929:12:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1227,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1211,
																	"src": "6945:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6929:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1230,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1211,
																		"src": "6971:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1231,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 500,
																			"src": "6978:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6978:12:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1229,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1318,
																	"src": "6954:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6954:37:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6929:62:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6999:59:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c",
																"typeString": "literal_string \"ERC721A: approve caller is not owner nor approved for all\""
															},
															"value": "ERC721A: approve caller is not owner nor approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c",
																"typeString": "literal_string \"ERC721A: approve caller is not owner nor approved for all\""
															}
														],
														"id": 1224,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6914:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6914:150:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "6914:150:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1239,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "7080:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1240,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "7084:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1241,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "7093:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1238,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1735,
														"src": "7071:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7071:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "7071:28:9"
											}
										]
									},
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "6690:42:9",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 1245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6744:7:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1208,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6788:8:9"
									},
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6760:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "6752:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6752:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6772:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "6764:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6764:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6751:29:9"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6797:0:9"
									},
									"scope": 1922,
									"src": "6735:369:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										84
									],
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "7234:123:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1256,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1248,
																	"src": "7256:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1255,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "7248:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7248:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7266:47:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94",
																"typeString": "literal_string \"ERC721A: approved query for nonexistent token\""
															},
															"value": "ERC721A: approved query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94",
																"typeString": "literal_string \"ERC721A: approved query for nonexistent token\""
															}
														],
														"id": 1254,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7240:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7240:74:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1260,
												"nodeType": "ExpressionStatement",
												"src": "7240:74:9"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1261,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7328:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1263,
													"indexExpression": {
														"id": 1262,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "7344:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7328:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1253,
												"id": 1264,
												"nodeType": "Return",
												"src": "7321:31:9"
											}
										]
									},
									"documentation": {
										"id": 1246,
										"nodeType": "StructuredDocumentation",
										"src": "7108:46:9",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "7166:11:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1250,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7207:8:9"
									},
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7186:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "7178:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7178:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7177:17:9"
									},
									"returnParameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "7225:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7225:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7224:9:9"
									},
									"scope": 1922,
									"src": "7157:200:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										92
									],
									"body": {
										"id": 1299,
										"nodeType": "Block",
										"src": "7492:193:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1276,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1269,
																"src": "7506:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1277,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 500,
																	"src": "7518:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7518:12:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7506:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a20617070726f766520746f2063616c6c6572",
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7532:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57",
																"typeString": "literal_string \"ERC721A: approve to caller\""
															},
															"value": "ERC721A: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57",
																"typeString": "literal_string \"ERC721A: approve to caller\""
															}
														],
														"id": 1275,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7498:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7498:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1282,
												"nodeType": "ExpressionStatement",
												"src": "7498:63:9"
											},
											{
												"expression": {
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1283,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 817,
																"src": "7568:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1287,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1284,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 500,
																	"src": "7587:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7587:12:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7568:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1288,
														"indexExpression": {
															"id": 1286,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "7601:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7568:42:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1289,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1271,
														"src": "7613:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7568:53:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "7568:53:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1293,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 500,
																"src": "7647:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7647:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1295,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "7661:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1296,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "7671:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1292,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "7632:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7632:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1298,
												"nodeType": "EmitStatement",
												"src": "7627:53:9"
											}
										]
									},
									"documentation": {
										"id": 1267,
										"nodeType": "StructuredDocumentation",
										"src": "7361:52:9",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 1300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "7425:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1273,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7483:8:9"
									},
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7451:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "7443:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7443:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "7466:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "7461:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1270,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7461:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7442:33:9"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7492:0:9"
									},
									"scope": 1922,
									"src": "7416:269:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										102
									],
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "7868:53:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1311,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "7881:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1313,
														"indexExpression": {
															"id": 1312,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "7900:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7881:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1315,
													"indexExpression": {
														"id": 1314,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1305,
														"src": "7907:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7881:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1310,
												"id": 1316,
												"nodeType": "Return",
												"src": "7874:42:9"
											}
										]
									},
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "7689:51:9",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "7752:16:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1307,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7838:8:9"
									},
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7777:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "7769:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7769:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7792:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "7784:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7784:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7768:33:9"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "7860:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1308,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7860:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7859:6:9"
									},
									"scope": 1922,
									"src": "7743:178:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										68
									],
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "8072:39:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1330,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "8088:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1331,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "8094:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1332,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "8098:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1329,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1712,
														"src": "8078:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8078:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1334,
												"nodeType": "ExpressionStatement",
												"src": "8078:28:9"
											}
										]
									},
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "7925:47:9",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 1336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "7984:12:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1327,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8063:8:9"
									},
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8010:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "8002:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8002:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8028:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "8020:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8020:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8044:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "8036:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8036:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7996:59:9"
									},
									"returnParameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8072:0:9"
									},
									"scope": 1922,
									"src": "7975:136:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										58
									],
									"body": {
										"id": 1354,
										"nodeType": "Block",
										"src": "8270:50:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1348,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1339,
															"src": "8293:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1349,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1341,
															"src": "8299:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1350,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "8303:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8312:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1347,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1355,
															1385
														],
														"referencedDeclaration": 1385,
														"src": "8276:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8276:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1353,
												"nodeType": "ExpressionStatement",
												"src": "8276:39:9"
											}
										]
									},
									"documentation": {
										"id": 1337,
										"nodeType": "StructuredDocumentation",
										"src": "8115:51:9",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 1355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "8178:16:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1345,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8261:8:9"
									},
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8208:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "8200:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8200:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8226:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "8218:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8218:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8242:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "8234:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8234:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8194:59:9"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8270:0:9"
									},
									"scope": 1922,
									"src": "8169:151:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										114
									],
									"body": {
										"id": 1384,
										"nodeType": "Block",
										"src": "8503:175:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1369,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "8519:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1370,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "8525:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1371,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "8529:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1368,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1712,
														"src": "8509:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8509:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1373,
												"nodeType": "ExpressionStatement",
												"src": "8509:28:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1376,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1358,
																	"src": "8581:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1377,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1360,
																	"src": "8587:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1378,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "8591:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1379,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1364,
																	"src": "8600:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1375,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1895,
																"src": "8558:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8558:48:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8614:53:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
																"typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721A: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
																"typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 1374,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8543:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8543:130:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1383,
												"nodeType": "ExpressionStatement",
												"src": "8543:130:9"
											}
										]
									},
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "8324:51:9",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 1385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "8387:16:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1366,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8494:8:9"
									},
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8417:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "8409:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8409:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8435:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "8427:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8427:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8451:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "8443:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8443:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "8477:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "8464:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1363,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8464:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8403:83:9"
									},
									"returnParameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8503:0:9"
									},
									"scope": 1922,
									"src": "8378:300:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1397,
										"nodeType": "Block",
										"src": "8971:40:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1393,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1388,
														"src": "8984:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1394,
														"name": "currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "8994:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8984:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1392,
												"id": 1396,
												"nodeType": "Return",
												"src": "8977:29:9"
											}
										]
									},
									"documentation": {
										"id": 1386,
										"nodeType": "StructuredDocumentation",
										"src": "8682:223:9",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),"
									},
									"id": 1398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "8917:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8933:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "8925:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8925:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8924:17:9"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "8965:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8965:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8964:6:9"
									},
									"scope": 1922,
									"src": "8908:103:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1411,
										"nodeType": "Block",
										"src": "9073:38:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1406,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "9089:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1407,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "9093:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9103:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1405,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1412,
															1558
														],
														"referencedDeclaration": 1558,
														"src": "9079:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9079:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1410,
												"nodeType": "ExpressionStatement",
												"src": "9079:27:9"
											}
										]
									},
									"id": 1412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "9024:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9042:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "9034:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9034:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "9054:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "9046:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9046:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9033:30:9"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9073:0:9"
									},
									"scope": 1922,
									"src": "9015:96:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1557,
										"nodeType": "Block",
										"src": "9531:1145:9",
										"statements": [
											{
												"assignments": [
													1423
												],
												"declarations": [
													{
														"constant": false,
														"id": 1423,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "9545:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1557,
														"src": "9537:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1422,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9537:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1425,
												"initialValue": {
													"id": 1424,
													"name": "currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 789,
													"src": "9560:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9537:35:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1427,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1415,
																"src": "9586:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9600:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9592:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1428,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9592:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9592:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9586:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9604:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d44a4129b83bd8f726e10653f1f05aa5a9f14d8c9c066d6e6701839279ddce3b",
																"typeString": "literal_string \"ERC721A: mint to the zero address\""
															},
															"value": "ERC721A: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d44a4129b83bd8f726e10653f1f05aa5a9f14d8c9c066d6e6701839279ddce3b",
																"typeString": "literal_string \"ERC721A: mint to the zero address\""
															}
														],
														"id": 1426,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9578:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9578:62:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1435,
												"nodeType": "ExpressionStatement",
												"src": "9578:62:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9774:22:9",
															"subExpression": {
																"arguments": [
																	{
																		"id": 1438,
																		"name": "startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1423,
																		"src": "9783:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1437,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1398,
																	"src": "9775:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9775:21:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a20746f6b656e20616c7265616479206d696e746564",
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9798:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cb7d04f3437a7effb983b7af618be4c66b34f1287b1be1811c7c3ac0aef8c037",
																"typeString": "literal_string \"ERC721A: token already minted\""
															},
															"value": "ERC721A: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cb7d04f3437a7effb983b7af618be4c66b34f1287b1be1811c7c3ac0aef8c037",
																"typeString": "literal_string \"ERC721A: token already minted\""
															}
														],
														"id": 1436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9766:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9766:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1443,
												"nodeType": "ExpressionStatement",
												"src": "9766:64:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1445,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1417,
																"src": "9844:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1446,
																"name": "maxBatchSize",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "9856:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9844:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a207175616e7469747920746f206d696e7420746f6f2068696768",
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9870:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f951f64ac6906b354d8bb2547d84c5624da207edd1bdfc2de747a2d7378fbda0",
																"typeString": "literal_string \"ERC721A: quantity to mint too high\""
															},
															"value": "ERC721A: quantity to mint too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f951f64ac6906b354d8bb2547d84c5624da207edd1bdfc2de747a2d7378fbda0",
																"typeString": "literal_string \"ERC721A: quantity to mint too high\""
															}
														],
														"id": 1444,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9836:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9836:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1450,
												"nodeType": "ExpressionStatement",
												"src": "9836:71:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9944:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9936:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1452,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9936:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9936:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1456,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "9948:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1457,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "9952:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1458,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "9966:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1451,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1908,
														"src": "9914:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9914:61:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1460,
												"nodeType": "ExpressionStatement",
												"src": "9914:61:9"
											},
											{
												"assignments": [
													1463
												],
												"declarations": [
													{
														"constant": false,
														"id": 1463,
														"mutability": "mutable",
														"name": "addressData",
														"nameLocation": "10001:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1557,
														"src": "9982:30:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressData_$786_memory_ptr",
															"typeString": "struct ERC721A.AddressData"
														},
														"typeName": {
															"id": 1462,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1461,
																"name": "AddressData",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 786,
																"src": "9982:11:9"
															},
															"referencedDeclaration": 786,
															"src": "9982:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressData_$786_storage_ptr",
																"typeString": "struct ERC721A.AddressData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1467,
												"initialValue": {
													"baseExpression": {
														"id": 1464,
														"name": "_addressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "10015:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$786_storage_$",
															"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
														}
													},
													"id": 1466,
													"indexExpression": {
														"id": 1465,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "10028:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10015:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressData_$786_storage",
														"typeString": "struct ERC721A.AddressData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9982:49:9"
											},
											{
												"expression": {
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1468,
															"name": "_addressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "10037:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$786_storage_$",
																"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
															}
														},
														"id": 1470,
														"indexExpression": {
															"id": 1469,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "10050:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10037:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressData_$786_storage",
															"typeString": "struct ERC721A.AddressData storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1472,
																		"name": "addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1463,
																		"src": "10075:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressData_$786_memory_ptr",
																			"typeString": "struct ERC721A.AddressData memory"
																		}
																	},
																	"id": 1473,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 783,
																	"src": "10075:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1476,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1417,
																			"src": "10105:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10097:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 1474,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "10097:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10097:17:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "10075:39:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1479,
																		"name": "addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1463,
																		"src": "10122:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressData_$786_memory_ptr",
																			"typeString": "struct ERC721A.AddressData memory"
																		}
																	},
																	"id": 1480,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "numberMinted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 785,
																	"src": "10122:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1483,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1417,
																			"src": "10157:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10149:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 1481,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "10149:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10149:17:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "10122:44:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															],
															"id": 1471,
															"name": "AddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "10056:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_AddressData_$786_storage_ptr_$",
																"typeString": "type(struct ERC721A.AddressData storage pointer)"
															}
														},
														"id": 1486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10056:116:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressData_$786_memory_ptr",
															"typeString": "struct ERC721A.AddressData memory"
														}
													},
													"src": "10037:135:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressData_$786_storage",
														"typeString": "struct ERC721A.AddressData storage ref"
													}
												},
												"id": 1488,
												"nodeType": "ExpressionStatement",
												"src": "10037:135:9"
											},
											{
												"expression": {
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1489,
															"name": "_ownerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "10178:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$781_storage_$",
																"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
															}
														},
														"id": 1491,
														"indexExpression": {
															"id": 1490,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "10190:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10178:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$781_storage",
															"typeString": "struct ERC721A.TokenOwnership storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1493,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1415,
																"src": "10221:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 1496,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "10232:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "10232:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10225:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1494,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "10225:6:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10225:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"id": 1492,
															"name": "TokenOwnership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "10206:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_TokenOwnership_$781_storage_ptr_$",
																"typeString": "type(struct ERC721A.TokenOwnership storage pointer)"
															}
														},
														"id": 1499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10206:43:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$781_memory_ptr",
															"typeString": "struct ERC721A.TokenOwnership memory"
														}
													},
													"src": "10178:71:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$781_storage",
														"typeString": "struct ERC721A.TokenOwnership storage ref"
													}
												},
												"id": 1501,
												"nodeType": "ExpressionStatement",
												"src": "10178:71:9"
											},
											{
												"assignments": [
													1503
												],
												"declarations": [
													{
														"constant": false,
														"id": 1503,
														"mutability": "mutable",
														"name": "updatedIndex",
														"nameLocation": "10264:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1557,
														"src": "10256:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1502,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10256:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1505,
												"initialValue": {
													"id": 1504,
													"name": "startTokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1423,
													"src": "10279:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10256:35:9"
											},
											{
												"body": {
													"id": 1541,
													"nodeType": "Block",
													"src": "10337:235:9",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1519,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10367:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10359:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1517,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10359:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10359:10:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1521,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1415,
																		"src": "10371:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1522,
																		"name": "updatedIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1503,
																		"src": "10375:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1516,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "10350:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10350:38:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1524,
															"nodeType": "EmitStatement",
															"src": "10345:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "30",
																						"id": 1529,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "10444:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						}
																					],
																					"id": 1528,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10436:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1527,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10436:7:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1530,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10436:10:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1531,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1415,
																				"src": "10448:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1532,
																				"name": "updatedIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1503,
																				"src": "10452:12:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1533,
																				"name": "_data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1419,
																				"src": "10466:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1526,
																			"name": "_checkOnERC721Received",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1895,
																			"src": "10413:22:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																				"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																			}
																		},
																		"id": 1534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10413:59:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243373231413a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																		"id": 1535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10482:53:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
																			"typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
																		},
																		"value": "ERC721A: transfer to non ERC721Receiver implementer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
																			"typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
																		}
																	],
																	"id": 1525,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "10396:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10396:147:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1537,
															"nodeType": "ExpressionStatement",
															"src": "10396:147:9"
														},
														{
															"expression": {
																"id": 1539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "10551:14:9",
																"subExpression": {
																	"id": 1538,
																	"name": "updatedIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1503,
																	"src": "10551:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1540,
															"nodeType": "ExpressionStatement",
															"src": "10551:14:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1510,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1507,
														"src": "10318:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1511,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "10322:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10318:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1542,
												"initializationExpression": {
													"assignments": [
														1507
													],
													"declarations": [
														{
															"constant": false,
															"id": 1507,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10311:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1542,
															"src": "10303:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1506,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10303:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1509,
													"initialValue": {
														"hexValue": "30",
														"id": 1508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10315:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10303:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10332:3:9",
														"subExpression": {
															"id": 1513,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "10332:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1515,
													"nodeType": "ExpressionStatement",
													"src": "10332:3:9"
												},
												"nodeType": "ForStatement",
												"src": "10298:274:9"
											},
											{
												"expression": {
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1543,
														"name": "currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "10578:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1544,
														"name": "updatedIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1503,
														"src": "10593:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10578:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1546,
												"nodeType": "ExpressionStatement",
												"src": "10578:27:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10640:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10632:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1548,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10632:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10632:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1552,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "10644:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1553,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "10648:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1554,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "10662:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1547,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1921,
														"src": "10611:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10611:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1556,
												"nodeType": "ExpressionStatement",
												"src": "10611:60:9"
											}
										]
									},
									"documentation": {
										"id": 1413,
										"nodeType": "StructuredDocumentation",
										"src": "9115:319:9",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - there must be `quantity` tokens remaining unminted in the total collection.\n - `to` cannot be the zero address.\n - `quantity` cannot be larger than the max batch size.\n Emits a {Transfer} event."
									},
									"id": 1558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "9446:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9469:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "9461:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9461:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "9485:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "9477:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9477:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "9512:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "9499:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1418,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9499:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9455:66:9"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9531:0:9"
									},
									"scope": 1922,
									"src": "9437:1239:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1711,
										"nodeType": "Block",
										"src": "10982:1398:9",
										"statements": [
											{
												"assignments": [
													1570
												],
												"declarations": [
													{
														"constant": false,
														"id": 1570,
														"mutability": "mutable",
														"name": "prevOwnership",
														"nameLocation": "11010:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 1711,
														"src": "10988:35:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$781_memory_ptr",
															"typeString": "struct ERC721A.TokenOwnership"
														},
														"typeName": {
															"id": 1569,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1568,
																"name": "TokenOwnership",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 781,
																"src": "10988:14:9"
															},
															"referencedDeclaration": 781,
															"src": "10988:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$781_storage_ptr",
																"typeString": "struct ERC721A.TokenOwnership"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1574,
												"initialValue": {
													"arguments": [
														{
															"id": 1572,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "11038:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1571,
														"name": "ownershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "11026:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$781_memory_ptr_$",
															"typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
														}
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11026:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$781_memory_ptr",
														"typeString": "struct ERC721A.TokenOwnership memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10988:58:9"
											},
											{
												"assignments": [
													1576
												],
												"declarations": [
													{
														"constant": false,
														"id": 1576,
														"mutability": "mutable",
														"name": "isApprovedOrOwner",
														"nameLocation": "11058:17:9",
														"nodeType": "VariableDeclaration",
														"scope": 1711,
														"src": "11053:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1575,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11053:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1597,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1577,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 500,
																			"src": "11079:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11079:12:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 1579,
																			"name": "prevOwnership",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1570,
																			"src": "11095:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$781_memory_ptr",
																				"typeString": "struct ERC721A.TokenOwnership memory"
																			}
																		},
																		"id": 1580,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "addr",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 778,
																		"src": "11095:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "11079:34:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1583,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1565,
																				"src": "11135:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1582,
																			"name": "getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1266,
																			"src": "11123:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 1584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11123:20:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1585,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 500,
																			"src": "11147:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11147:12:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "11123:36:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "11079:80:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1590,
																			"name": "prevOwnership",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1570,
																			"src": "11186:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$781_memory_ptr",
																				"typeString": "struct ERC721A.TokenOwnership memory"
																			}
																		},
																		"id": 1591,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "addr",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 778,
																		"src": "11186:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1592,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 500,
																			"src": "11206:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11206:12:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1589,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1318,
																	"src": "11169:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11169:50:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "11079:140:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1596,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "11078:142:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11053:167:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1599,
															"name": "isApprovedOrOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1576,
															"src": "11242:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11267:52:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c",
																"typeString": "literal_string \"ERC721A: transfer caller is not owner nor approved\""
															},
															"value": "ERC721A: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c",
																"typeString": "literal_string \"ERC721A: transfer caller is not owner nor approved\""
															}
														],
														"id": 1598,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11227:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11227:98:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1602,
												"nodeType": "ExpressionStatement",
												"src": "11227:98:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1604,
																	"name": "prevOwnership",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1570,
																	"src": "11347:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$781_memory_ptr",
																		"typeString": "struct ERC721A.TokenOwnership memory"
																	}
																},
																"id": 1605,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 778,
																"src": "11347:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1606,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1561,
																"src": "11369:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11347:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 1608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11381:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8",
																"typeString": "literal_string \"ERC721A: transfer from incorrect owner\""
															},
															"value": "ERC721A: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8",
																"typeString": "literal_string \"ERC721A: transfer from incorrect owner\""
															}
														],
														"id": 1603,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11332:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11332:95:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1610,
												"nodeType": "ExpressionStatement",
												"src": "11332:95:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1612,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1563,
																"src": "11441:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11455:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11447:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1613,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11447:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11447:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11441:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11459:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b",
																"typeString": "literal_string \"ERC721A: transfer to the zero address\""
															},
															"value": "ERC721A: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b",
																"typeString": "literal_string \"ERC721A: transfer to the zero address\""
															}
														],
														"id": 1611,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11433:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11433:66:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1620,
												"nodeType": "ExpressionStatement",
												"src": "11433:66:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1622,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "11528:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1623,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "11534:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1624,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "11538:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11547:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1621,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1908,
														"src": "11506:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11506:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1627,
												"nodeType": "ExpressionStatement",
												"src": "11506:43:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11620:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11612:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1629,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11612:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11612:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1633,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "11624:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1634,
																"name": "prevOwnership",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1570,
																"src": "11633:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$781_memory_ptr",
																	"typeString": "struct ERC721A.TokenOwnership memory"
																}
															},
															"id": 1635,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "addr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 778,
															"src": "11633:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1628,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1735,
														"src": "11603:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11603:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1637,
												"nodeType": "ExpressionStatement",
												"src": "11603:49:9"
											},
											{
												"expression": {
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1638,
																"name": "_addressData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "11659:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$786_storage_$",
																	"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																}
															},
															"id": 1640,
															"indexExpression": {
																"id": 1639,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1561,
																"src": "11672:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11659:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressData_$786_storage",
																"typeString": "struct ERC721A.AddressData storage ref"
															}
														},
														"id": 1641,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 783,
														"src": "11659:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1642,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11689:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "11659:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 1644,
												"nodeType": "ExpressionStatement",
												"src": "11659:31:9"
											},
											{
												"expression": {
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1645,
																"name": "_addressData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "11696:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$786_storage_$",
																	"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																}
															},
															"id": 1647,
															"indexExpression": {
																"id": 1646,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1563,
																"src": "11709:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11696:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressData_$786_storage",
																"typeString": "struct ERC721A.AddressData storage ref"
															}
														},
														"id": 1648,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 783,
														"src": "11696:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1649,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11724:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "11696:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 1651,
												"nodeType": "ExpressionStatement",
												"src": "11696:29:9"
											},
											{
												"expression": {
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1652,
															"name": "_ownerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "11731:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$781_storage_$",
																"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
															}
														},
														"id": 1654,
														"indexExpression": {
															"id": 1653,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "11743:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11731:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$781_storage",
															"typeString": "struct ERC721A.TokenOwnership storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1656,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1563,
																"src": "11769:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 1659,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "11780:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "11780:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11773:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1657,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "11773:6:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11773:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"id": 1655,
															"name": "TokenOwnership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "11754:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_TokenOwnership_$781_storage_ptr_$",
																"typeString": "type(struct ERC721A.TokenOwnership storage pointer)"
															}
														},
														"id": 1662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11754:43:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$781_memory_ptr",
															"typeString": "struct ERC721A.TokenOwnership memory"
														}
													},
													"src": "11731:66:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$781_storage",
														"typeString": "struct ERC721A.TokenOwnership storage ref"
													}
												},
												"id": 1664,
												"nodeType": "ExpressionStatement",
												"src": "11731:66:9"
											},
											{
												"assignments": [
													1666
												],
												"declarations": [
													{
														"constant": false,
														"id": 1666,
														"mutability": "mutable",
														"name": "nextTokenId",
														"nameLocation": "12029:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1711,
														"src": "12021:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1665,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12021:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1670,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1667,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1565,
														"src": "12043:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 1668,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12053:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "12043:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12021:33:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1671,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "12064:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$781_storage_$",
																	"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 1673,
															"indexExpression": {
																"id": 1672,
																"name": "nextTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1666,
																"src": "12076:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12064:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$781_storage",
																"typeString": "struct ERC721A.TokenOwnership storage ref"
															}
														},
														"id": 1674,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 778,
														"src": "12064:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12105:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12097:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12097:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12097:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12064:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1697,
												"nodeType": "IfStatement",
												"src": "12060:229:9",
												"trueBody": {
													"id": 1696,
													"nodeType": "Block",
													"src": "12109:180:9",
													"statements": [
														{
															"condition": {
																"arguments": [
																	{
																		"id": 1681,
																		"name": "nextTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1666,
																		"src": "12129:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1680,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1398,
																	"src": "12121:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12121:20:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1695,
															"nodeType": "IfStatement",
															"src": "12117:166:9",
															"trueBody": {
																"id": 1694,
																"nodeType": "Block",
																"src": "12143:140:9",
																"statements": [
																	{
																		"expression": {
																			"id": 1692,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1683,
																					"name": "_ownerships",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 802,
																					"src": "12153:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$781_storage_$",
																						"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																					}
																				},
																				"id": 1685,
																				"indexExpression": {
																					"id": 1684,
																					"name": "nextTokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1666,
																					"src": "12165:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "12153:24:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$781_storage",
																					"typeString": "struct ERC721A.TokenOwnership storage ref"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1687,
																							"name": "prevOwnership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1570,
																							"src": "12206:13:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$781_memory_ptr",
																								"typeString": "struct ERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 1688,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 778,
																						"src": "12206:18:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"expression": {
																							"id": 1689,
																							"name": "prevOwnership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1570,
																							"src": "12236:13:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$781_memory_ptr",
																								"typeString": "struct ERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 1690,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 780,
																						"src": "12236:28:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					],
																					"id": 1686,
																					"name": "TokenOwnership",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 781,
																					"src": "12180:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_struct$_TokenOwnership_$781_storage_ptr_$",
																						"typeString": "type(struct ERC721A.TokenOwnership storage pointer)"
																					}
																				},
																				"id": 1691,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "structConstructorCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12180:94:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$781_memory_ptr",
																					"typeString": "struct ERC721A.TokenOwnership memory"
																				}
																			},
																			"src": "12153:121:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$781_storage",
																				"typeString": "struct ERC721A.TokenOwnership storage ref"
																			}
																		},
																		"id": 1693,
																		"nodeType": "ExpressionStatement",
																		"src": "12153:121:9"
																	}
																]
															}
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1699,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "12309:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1700,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "12315:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1701,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "12319:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1698,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "12300:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12300:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1703,
												"nodeType": "EmitStatement",
												"src": "12295:32:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1705,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "12354:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1706,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "12360:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1707,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "12364:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12373:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1704,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1921,
														"src": "12333:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12333:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1710,
												"nodeType": "ExpressionStatement",
												"src": "12333:42:9"
											}
										]
									},
									"documentation": {
										"id": 1559,
										"nodeType": "StructuredDocumentation",
										"src": "10680:213:9",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "10905:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10928:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "10920:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10920:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10946:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "10938:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10938:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10962:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "10954:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10954:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10914:59:9"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10982:0:9"
									},
									"scope": 1922,
									"src": "10896:1484:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1734,
										"nodeType": "Block",
										"src": "12565:79:9",
										"statements": [
											{
												"expression": {
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1722,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "12571:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1724,
														"indexExpression": {
															"id": 1723,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "12587:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12571:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1725,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1715,
														"src": "12598:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12571:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1727,
												"nodeType": "ExpressionStatement",
												"src": "12571:29:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1729,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "12620:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1730,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "12627:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1731,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "12631:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1728,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "12611:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12611:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1733,
												"nodeType": "EmitStatement",
												"src": "12606:33:9"
											}
										]
									},
									"documentation": {
										"id": 1713,
										"nodeType": "StructuredDocumentation",
										"src": "12384:92:9",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
									},
									"id": 1735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "12488:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12510:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "12502:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12502:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12526:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "12518:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12518:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12547:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "12539:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12539:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12496:60:9"
									},
									"returnParameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12565:0:9"
									},
									"scope": 1922,
									"src": "12479:165:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "d7224ba0",
									"id": 1738,
									"mutability": "mutable",
									"name": "nextOwnerToExplicitlySet",
									"nameLocation": "12663:24:9",
									"nodeType": "VariableDeclaration",
									"scope": 1922,
									"src": "12648:43:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1736,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12648:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1737,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12690:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1830,
										"nodeType": "Block",
										"src": "12846:772:9",
										"statements": [
											{
												"assignments": [
													1745
												],
												"declarations": [
													{
														"constant": false,
														"id": 1745,
														"mutability": "mutable",
														"name": "oldNextOwnerToSet",
														"nameLocation": "12860:17:9",
														"nodeType": "VariableDeclaration",
														"scope": 1830,
														"src": "12852:25:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1744,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12852:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1747,
												"initialValue": {
													"id": 1746,
													"name": "nextOwnerToExplicitlySet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1738,
													"src": "12880:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12852:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1749,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1741,
																"src": "12918:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1750,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12929:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12918:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7175616e74697479206d757374206265206e6f6e7a65726f",
															"id": 1752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12932:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_737d165da1eb856050a92dfade64119f1cf8c88d622d3e0772ede5cbd9cfb846",
																"typeString": "literal_string \"quantity must be nonzero\""
															},
															"value": "quantity must be nonzero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_737d165da1eb856050a92dfade64119f1cf8c88d622d3e0772ede5cbd9cfb846",
																"typeString": "literal_string \"quantity must be nonzero\""
															}
														],
														"id": 1748,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12910:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12910:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1754,
												"nodeType": "ExpressionStatement",
												"src": "12910:49:9"
											},
											{
												"assignments": [
													1756
												],
												"declarations": [
													{
														"constant": false,
														"id": 1756,
														"mutability": "mutable",
														"name": "endIndex",
														"nameLocation": "12973:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1830,
														"src": "12965:16:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1755,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12965:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1762,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1759,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1757,
															"name": "oldNextOwnerToSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1745,
															"src": "12984:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1758,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1741,
															"src": "13004:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12984:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1760,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13015:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "12984:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12965:51:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1763,
														"name": "endIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1756,
														"src": "13026:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1764,
															"name": "collectionSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "13037:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 1765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13054:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "13037:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13026:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1775,
												"nodeType": "IfStatement",
												"src": "13022:79:9",
												"trueBody": {
													"id": 1774,
													"nodeType": "Block",
													"src": "13057:44:9",
													"statements": [
														{
															"expression": {
																"id": 1772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1768,
																	"name": "endIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1756,
																	"src": "13065:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1769,
																		"name": "collectionSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 791,
																		"src": "13076:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13093:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "13076:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13065:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1773,
															"nodeType": "ExpressionStatement",
															"src": "13065:29:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1778,
																	"name": "endIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1756,
																	"src": "13222:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1777,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "13214:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13214:17:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f7420656e6f756768206d696e7465642079657420666f72207468697320636c65616e7570",
															"id": 1780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13233:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e7c91bff745ee80645a0fce79a064d0f28773450181c1ffda5746acdef8f467e",
																"typeString": "literal_string \"not enough minted yet for this cleanup\""
															},
															"value": "not enough minted yet for this cleanup"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e7c91bff745ee80645a0fce79a064d0f28773450181c1ffda5746acdef8f467e",
																"typeString": "literal_string \"not enough minted yet for this cleanup\""
															}
														],
														"id": 1776,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13206:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13206:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1782,
												"nodeType": "ExpressionStatement",
												"src": "13206:68:9"
											},
											{
												"body": {
													"id": 1822,
													"nodeType": "Block",
													"src": "13336:233:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1793,
																			"name": "_ownerships",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 802,
																			"src": "13348:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$781_storage_$",
																				"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																			}
																		},
																		"id": 1795,
																		"indexExpression": {
																			"id": 1794,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1784,
																			"src": "13360:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13348:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenOwnership_$781_storage",
																			"typeString": "struct ERC721A.TokenOwnership storage ref"
																		}
																	},
																	"id": 1796,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "addr",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 778,
																	"src": "13348:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1799,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13379:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13371:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1797,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "13371:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13371:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "13348:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1821,
															"nodeType": "IfStatement",
															"src": "13344:219:9",
															"trueBody": {
																"id": 1820,
																"nodeType": "Block",
																"src": "13383:180:9",
																"statements": [
																	{
																		"assignments": [
																			1804
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1804,
																				"mutability": "mutable",
																				"name": "ownership",
																				"nameLocation": "13415:9:9",
																				"nodeType": "VariableDeclaration",
																				"scope": 1820,
																				"src": "13393:31:9",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$781_memory_ptr",
																					"typeString": "struct ERC721A.TokenOwnership"
																				},
																				"typeName": {
																					"id": 1803,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 1802,
																						"name": "TokenOwnership",
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 781,
																						"src": "13393:14:9"
																					},
																					"referencedDeclaration": 781,
																					"src": "13393:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenOwnership_$781_storage_ptr",
																						"typeString": "struct ERC721A.TokenOwnership"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1808,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 1806,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1784,
																					"src": "13439:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1805,
																				"name": "ownershipOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1137,
																				"src": "13427:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$781_memory_ptr_$",
																					"typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
																				}
																			},
																			"id": 1807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13427:14:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$781_memory_ptr",
																				"typeString": "struct ERC721A.TokenOwnership memory"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13393:48:9"
																	},
																	{
																		"expression": {
																			"id": 1818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1809,
																					"name": "_ownerships",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 802,
																					"src": "13451:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$781_storage_$",
																						"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																					}
																				},
																				"id": 1811,
																				"indexExpression": {
																					"id": 1810,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1784,
																					"src": "13463:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "13451:14:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$781_storage",
																					"typeString": "struct ERC721A.TokenOwnership storage ref"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1813,
																							"name": "ownership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1804,
																							"src": "13494:9:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$781_memory_ptr",
																								"typeString": "struct ERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 1814,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 778,
																						"src": "13494:14:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"expression": {
																							"id": 1815,
																							"name": "ownership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1804,
																							"src": "13520:9:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$781_memory_ptr",
																								"typeString": "struct ERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 1816,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 780,
																						"src": "13520:24:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					],
																					"id": 1812,
																					"name": "TokenOwnership",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 781,
																					"src": "13468:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_struct$_TokenOwnership_$781_storage_ptr_$",
																						"typeString": "type(struct ERC721A.TokenOwnership storage pointer)"
																					}
																				},
																				"id": 1817,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "structConstructorCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13468:86:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$781_memory_ptr",
																					"typeString": "struct ERC721A.TokenOwnership memory"
																				}
																			},
																			"src": "13451:103:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$781_storage",
																				"typeString": "struct ERC721A.TokenOwnership storage ref"
																			}
																		},
																		"id": 1819,
																		"nodeType": "ExpressionStatement",
																		"src": "13451:103:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1787,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1784,
														"src": "13316:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1788,
														"name": "endIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1756,
														"src": "13321:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13316:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1823,
												"initializationExpression": {
													"assignments": [
														1784
													],
													"declarations": [
														{
															"constant": false,
															"id": 1784,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "13293:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1823,
															"src": "13285:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1783,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13285:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1786,
													"initialValue": {
														"id": 1785,
														"name": "oldNextOwnerToSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1745,
														"src": "13297:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "13285:29:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "13331:3:9",
														"subExpression": {
															"id": 1790,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "13331:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1792,
													"nodeType": "ExpressionStatement",
													"src": "13331:3:9"
												},
												"nodeType": "ForStatement",
												"src": "13280:289:9"
											},
											{
												"expression": {
													"id": 1828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1824,
														"name": "nextOwnerToExplicitlySet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1738,
														"src": "13574:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1827,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1825,
															"name": "endIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "13601:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13612:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "13601:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13574:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1829,
												"nodeType": "ExpressionStatement",
												"src": "13574:39:9"
											}
										]
									},
									"documentation": {
										"id": 1739,
										"nodeType": "StructuredDocumentation",
										"src": "12696:92:9",
										"text": " @dev Explicitly set `owners` to eliminate loops in future calls of ownerOf()."
									},
									"id": 1831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setOwnersExplicit",
									"nameLocation": "12800:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "12827:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "12819:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12819:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12818:18:9"
									},
									"returnParameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12846:0:9"
									},
									"scope": 1922,
									"src": "12791:827:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1894,
										"nodeType": "Block",
										"src": "14287:529:9",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1845,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1836,
															"src": "14297:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 211,
														"src": "14297:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14297:15:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1892,
													"nodeType": "Block",
													"src": "14786:26:9",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14801:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1844,
															"id": 1891,
															"nodeType": "Return",
															"src": "14794:11:9"
														}
													]
												},
												"id": 1893,
												"nodeType": "IfStatement",
												"src": "14293:519:9",
												"trueBody": {
													"id": 1889,
													"nodeType": "Block",
													"src": "14314:466:9",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1869,
																		"nodeType": "Block",
																		"src": "14437:81:9",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1867,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1861,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1859,
																						"src": "14454:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"arguments": [
																									{
																										"id": 1863,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1836,
																										"src": "14480:2:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1862,
																									"name": "IERC721Receiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 133,
																									"src": "14464:15:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$133_$",
																										"typeString": "type(contract IERC721Receiver)"
																									}
																								},
																								"id": 1864,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14464:19:9",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC721Receiver_$133",
																									"typeString": "contract IERC721Receiver"
																								}
																							},
																							"id": 1865,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 132,
																							"src": "14464:36:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																								"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																							}
																						},
																						"id": 1866,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14464:45:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14454:55:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 1844,
																				"id": 1868,
																				"nodeType": "Return",
																				"src": "14447:62:9"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1870,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1860,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1859,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "14429:6:9",
																				"nodeType": "VariableDeclaration",
																				"scope": 1870,
																				"src": "14422:13:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1858,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14422:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14421:15:9"
																	},
																	"src": "14413:105:9"
																},
																{
																	"block": {
																		"id": 1886,
																		"nodeType": "Block",
																		"src": "14547:227:9",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1877,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1874,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1872,
																							"src": "14561:6:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1875,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14561:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1876,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14578:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14561:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1884,
																					"nodeType": "Block",
																					"src": "14671:95:9",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "14692:64:9",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "14717:2:9",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "14721:6:9"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "14713:3:9"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "14713:15:9"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "14736:6:9"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "14730:5:9"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "14730:13:9"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "14706:6:9"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "14706:38:9"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "14706:38:9"
																									}
																								]
																							},
																							"evmVersion": "london",
																							"externalReferences": [
																								{
																									"declaration": 1872,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14721:6:9",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1872,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14736:6:9",
																									"valueSize": 1
																								}
																							],
																							"id": 1883,
																							"nodeType": "InlineAssembly",
																							"src": "14683:73:9"
																						}
																					]
																				},
																				"id": 1885,
																				"nodeType": "IfStatement",
																				"src": "14557:209:9",
																				"trueBody": {
																					"id": 1882,
																					"nodeType": "Block",
																					"src": "14581:84:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243373231413a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 1879,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14600:53:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
																											"typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721A: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
																											"typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 1878,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "14593:6:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1880,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14593:61:9",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1881,
																							"nodeType": "ExpressionStatement",
																							"src": "14593:61:9"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1887,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1873,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1872,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14539:6:9",
																				"nodeType": "VariableDeclaration",
																				"scope": 1887,
																				"src": "14526:19:9",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1871,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14526:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14525:21:9"
																	},
																	"src": "14519:255:9"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1852,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 500,
																			"src": "14371:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14371:12:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1854,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1834,
																		"src": "14385:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1855,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1838,
																		"src": "14391:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1856,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1840,
																		"src": "14400:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1849,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1836,
																				"src": "14350:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1848,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 133,
																			"src": "14334:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$133_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14334:19:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$133",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 132,
																	"src": "14334:36:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14334:72:9",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1888,
															"nodeType": "TryStatement",
															"src": "14322:452:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1832,
										"nodeType": "StructuredDocumentation",
										"src": "13622:524:9",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 1895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "14158:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14194:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "14186:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14186:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14212:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "14204:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14204:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14228:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "14220:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14220:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "14254:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "14241:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1839,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14241:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14180:83:9"
									},
									"returnParameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "14281:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1842,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14281:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14280:6:9"
									},
									"scope": 1922,
									"src": "14149:667:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1907,
										"nodeType": "Block",
										"src": "15398:2:9",
										"statements": []
									},
									"documentation": {
										"id": 1896,
										"nodeType": "StructuredDocumentation",
										"src": "14820:441:9",
										"text": " @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`."
									},
									"id": 1908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "15273:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15308:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "15300:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15300:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15326:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "15318:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15318:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "15342:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "15334:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15334:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "15368:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "15360:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15360:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15294:86:9"
									},
									"returnParameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15398:0:9"
									},
									"scope": 1922,
									"src": "15264:136:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1920,
										"nodeType": "Block",
										"src": "15905:2:9",
										"statements": []
									},
									"documentation": {
										"id": 1909,
										"nodeType": "StructuredDocumentation",
										"src": "15404:365:9",
										"text": " @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\n minting.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero."
									},
									"id": 1921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "15781:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15815:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "15807:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15807:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15833:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "15825:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15825:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "15849:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "15841:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15841:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "15875:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "15867:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15867:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15801:86:9"
									},
									"returnParameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15905:0:9"
									},
									"scope": 1922,
									"src": "15772:135:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1923,
							"src": "1055:14854:9",
							"usedErrors": []
						}
					],
					"src": "33:15876:9"
				},
				"id": 9
			}
		}
	}
}